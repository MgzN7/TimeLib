

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Dec 05 12:38:05 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	functab,global,reloc=256,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  000E                     	;# 
    54  000F                     	;# 
    55  0010                     	;# 
    56  0011                     	;# 
    57  0012                     	;# 
    58  0013                     	;# 
    59  0014                     	;# 
    60  0015                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  0086                     	;# 
    72  008C                     	;# 
    73  008D                     	;# 
    74  008E                     	;# 
    75  008F                     	;# 
    76  0090                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  009F                     	;# 
    87  0105                     	;# 
    88  010C                     	;# 
    89  010D                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200                           
   201                           	psect	idataBANK0
   202  0CAC                     __pidataBANK0:	
   203                           
   204                           ;initializer for _sync_interval
   205  0CAC  3480               	retlw	128
   206  0CAD  3451               	retlw	81
   207  0CAE  3401               	retlw	1
   208  0CAF  3400               	retlw	0
   209                           
   210                           	psect	strings
   211  0094                     __pstrings:	
   212  0094                     stringtab:	
   213  0094                     __stringtab:	
   214  0094                     stringcode:	
   215                           ;	String table - string pointers are 1 byte each
   216                           
   217  0094                     stringdir:	
   218  0094  3000               	movlw	high stringdir
   219  0095  008A               	movwf	10
   220  0096  0804               	movf	4,w
   221  0097  0A84               	incf	4,f
   222  0098  0782               	addwf	2,f
   223  0099                     __stringbase:	
   224  0099  3400               	retlw	0
   225  009A                     __end_of__stringtab:	
   226  009A                     _month_length:	
   227  009A  341F               	retlw	31
   228  009B  341C               	retlw	28
   229  009C  341F               	retlw	31
   230  009D  341E               	retlw	30
   231  009E  341F               	retlw	31
   232  009F  341E               	retlw	30
   233  00A0  341F               	retlw	31
   234  00A1  341F               	retlw	31
   235  00A2  341E               	retlw	30
   236  00A3  341F               	retlw	31
   237  00A4  341E               	retlw	30
   238  00A5  341F               	retlw	31
   239  00A6                     __end_of_month_length:	
   240  00A6                     _dpowers:	
   241  00A6  3401               	retlw	1
   242  00A7  3400               	retlw	0
   243  00A8  340A               	retlw	10
   244  00A9  3400               	retlw	0
   245  00AA  3464               	retlw	100
   246  00AB  3400               	retlw	0
   247  00AC  34E8               	retlw	232
   248  00AD  3403               	retlw	3
   249  00AE  3410               	retlw	16
   250  00AF  3427               	retlw	39
   251  00B0                     __end_of_dpowers:	
   252  00B0                     __stringdata:	
   253  00B0                     STR_2:	
   254  00B0  3454               	retlw	84	;'T'
   255  00B1  3469               	retlw	105	;'i'
   256  00B2  346D               	retlw	109	;'m'
   257  00B3  3465               	retlw	101	;'e'
   258  00B4  343A               	retlw	58	;':'
   259  00B5  3420               	retlw	32	;' '
   260  00B6  3425               	retlw	37	;'%'
   261  00B7  3430               	retlw	48	;'0'
   262  00B8  3432               	retlw	50	;'2'
   263  00B9  3464               	retlw	100	;'d'
   264  00BA  343A               	retlw	58	;':'
   265  00BB  3425               	retlw	37	;'%'
   266  00BC  3430               	retlw	48	;'0'
   267  00BD  3432               	retlw	50	;'2'
   268  00BE  3464               	retlw	100	;'d'
   269  00BF  343A               	retlw	58	;':'
   270  00C0  3425               	retlw	37	;'%'
   271  00C1  3430               	retlw	48	;'0'
   272  00C2  3432               	retlw	50	;'2'
   273  00C3  3464               	retlw	100	;'d'
   274  00C4  3420               	retlw	32	;' '
   275  00C5  3444               	retlw	68	;'D'
   276  00C6  3461               	retlw	97	;'a'
   277  00C7  3474               	retlw	116	;'t'
   278  00C8  3465               	retlw	101	;'e'
   279  00C9  343A               	retlw	58	;':'
   280  00CA  3420               	retlw	32	;' '
   281  00CB  3425               	retlw	37	;'%'
   282  00CC  3430               	retlw	48	;'0'
   283  00CD  3432               	retlw	50	;'2'
   284  00CE  3464               	retlw	100	;'d'
   285  00CF  342F               	retlw	47	;'/'
   286  00D0  3425               	retlw	37	;'%'
   287  00D1  3430               	retlw	48	;'0'
   288  00D2  3432               	retlw	50	;'2'
   289  00D3  3464               	retlw	100	;'d'
   290  00D4  342F               	retlw	47	;'/'
   291  00D5  3425               	retlw	37	;'%'
   292  00D6  3430               	retlw	48	;'0'
   293  00D7  3432               	retlw	50	;'2'
   294  00D8  3464               	retlw	100	;'d'
   295  00D9  340D               	retlw	13
   296  00DA  340A               	retlw	10
   297  00DB  3400               	retlw	0
   298  00DC                     STR_1:	
   299  00DC  3454               	retlw	84	;'T'
   300  00DD  3469               	retlw	105	;'i'
   301  00DE  346D               	retlw	109	;'m'
   302  00DF  3465               	retlw	101	;'e'
   303  00E0  344C               	retlw	76	;'L'
   304  00E1  3469               	retlw	105	;'i'
   305  00E2  3462               	retlw	98	;'b'
   306  00E3  3420               	retlw	32	;' '
   307  00E4  3454               	retlw	84	;'T'
   308  00E5  3465               	retlw	101	;'e'
   309  00E6  3473               	retlw	115	;'s'
   310  00E7  3474               	retlw	116	;'t'
   311  00E8  3420               	retlw	32	;' '
   312  00E9  3450               	retlw	80	;'P'
   313  00EA  3472               	retlw	114	;'r'
   314  00EB  346F               	retlw	111	;'o'
   315  00EC  3467               	retlw	103	;'g'
   316  00ED  3472               	retlw	114	;'r'
   317  00EE  3461               	retlw	97	;'a'
   318  00EF  346D               	retlw	109	;'m'
   319  00F0  340D               	retlw	13
   320  00F1  340A               	retlw	10
   321  00F2  3400               	retlw	0
   322  00F3                     __end_of__stringdata:	
   323                           
   324                           ; #config settings
   325  0000                     
   326                           	psect	nvBANK0
   327  0051                     __pnvBANK0:	
   328  0051                     _sys_time:	
   329  0051                     	ds	4
   330                           
   331                           	psect	nvBANK1
   332  00BA                     __pnvBANK1:	
   333  00BA                     _initialt:	
   334  00BA                     	ds	4
   335  00BE                     _last_update:	
   336  00BE                     	ds	4
   337  00C2                     _sync_next:	
   338  00C2                     	ds	4
   339  00C6                     _enTimeCurrentStatus:	
   340  00C6                     	ds	1
   341  000B                     _INTCONbits	set	11
   342  000C                     _PIR1bits	set	12
   343  0018                     _RCSTAbits	set	24
   344  0010                     _T1CON	set	16
   345  000F                     _TMR1H	set	15
   346  000E                     _TMR1L	set	14
   347  0019                     _TXREG	set	25
   348  009B                     _ANSEL	set	155
   349  008C                     _PIE1bits	set	140
   350  0085                     _TRISA	set	133
   351  0086                     _TRISB	set	134
   352  0098                     _TXSTA	set	152
   353                           
   354                           	psect	cinit
   355  0013                     start_initialization:	
   356  0013                     __initialization:	
   357                           
   358                           ; Clear objects allocated to COMMON
   359  0013  01F6               	clrf	__pbssCOMMON& (0+127)
   360  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   361  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   362  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   363                           
   364                           ; Clear objects allocated to BANK0
   365  0017  01D9               	clrf	__pbssBANK0& (0+127)
   366                           
   367                           ; Clear objects allocated to BANK1
   368  0018  1683               	bsf	3,5	;RP0=1, select bank1
   369  0019  1303               	bcf	3,6	;RP1=0, select bank1
   370  001A  01C7               	clrf	__pbssBANK1& (0+127)
   371  001B  01C8               	clrf	(__pbssBANK1+1)& (0+127)
   372  001C  01C9               	clrf	(__pbssBANK1+2)& (0+127)
   373  001D  01CA               	clrf	(__pbssBANK1+3)& (0+127)
   374  001E  01CB               	clrf	(__pbssBANK1+4)& (0+127)
   375  001F  01CC               	clrf	(__pbssBANK1+5)& (0+127)
   376                           
   377                           ; Initialize objects allocated to BANK0
   378  0020  1283               	bcf	3,5	;RP0=0, select bank0
   379  0021  1303               	bcf	3,6	;RP1=0, select bank0
   380  0022  158A  24AC  118A   	fcall	__pidataBANK0	;fetch initializer
   381  0025  00D5               	movwf	__pdataBANK0& (0+127)
   382  0026  158A  24AD  118A   	fcall	__pidataBANK0+1	;fetch initializer
   383  0029  00D6               	movwf	(__pdataBANK0+1)& (0+127)
   384  002A  158A  24AE  118A   	fcall	__pidataBANK0+2	;fetch initializer
   385  002D  00D7               	movwf	(__pdataBANK0+2)& (0+127)
   386  002E  158A  24AF         	fcall	__pidataBANK0+3	;fetch initializer
   387  0030  00D8               	movwf	(__pdataBANK0+3)& (0+127)
   388  0031                     end_of_initialization:	
   389                           ;End of C runtime variable initialization code
   390                           
   391  0031                     __end_of__initialization:	
   392  0031  0183               	clrf	3
   393  0032  118A  2E5D         	ljmp	_main	;jump to C main() function
   394                           
   395                           	psect	bssCOMMON
   396  0076                     __pbssCOMMON:	
   397  0076                     _tickcnt:	
   398  0076                     	ds	4
   399                           
   400                           	psect	bssBANK0
   401  0059                     __pbssBANK0:	
   402  0059                     _time_provider_callback:	
   403  0059                     	ds	1
   404                           
   405                           	psect	dataBANK0
   406  0055                     __pdataBANK0:	
   407  0055                     _sync_interval:	
   408  0055                     	ds	4
   409                           
   410                           	psect	bssBANK1
   411  00C7                     __pbssBANK1:	
   412  00C7                     _tickbuffer:	
   413  00C7                     	ds	6
   414                           
   415                           	psect	cstackBANK1
   416  00A0                     __pcstackBANK1:	
   417  00A0                     main@now:	
   418                           
   419                           ; 4 bytes @ 0x0
   420  00A0                     	ds	4
   421  00A4                     main@last:	
   422                           
   423                           ; 4 bytes @ 0x4
   424  00A4                     	ds	4
   425  00A8                     main@tinfo:	
   426                           
   427                           ; 18 bytes @ 0x8
   428  00A8                     	ds	18
   429                           
   430                           	psect	cstackCOMMON
   431  0070                     __pcstackCOMMON:	
   432  0070                     ?_tick_init:	
   433  0070                     ?_tick_update:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0070                     ??_tick_update:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0070                     ?_tick_read_internal:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0070                     ?_isdigit:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0070                     ?_main:	
   446                           ; 1 bit 
   447                           
   448  0070                     ?_putch:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0070                     ?_isr:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0070                     ??_isr:	
   455                           ; 0 bytes @ 0x0
   456                           
   457                           
   458                           ; 0 bytes @ 0x0
   459  0070                     	ds	4
   460  0074                     ??_tick_init:	
   461  0074                     ??_time_provider:	
   462                           ; 0 bytes @ 0x4
   463                           
   464  0074                     ??_tick_read_internal:	
   465                           ; 0 bytes @ 0x4
   466                           
   467  0074                     ??_isdigit:	
   468                           ; 0 bytes @ 0x4
   469                           
   470  0074                     ??_putch:	
   471                           ; 0 bytes @ 0x4
   472                           
   473  0074                     ??___wmul:	
   474                           ; 0 bytes @ 0x4
   475                           
   476  0074                     ??___lmul:	
   477                           ; 0 bytes @ 0x4
   478                           
   479  0074                     ??___lldiv:	
   480                           ; 0 bytes @ 0x4
   481                           
   482  0074                     ??___llmod:	
   483                           ; 0 bytes @ 0x4
   484                           
   485  0074                     ??___lwdiv:	
   486                           ; 0 bytes @ 0x4
   487                           
   488  0074                     putch@data:	
   489                           ; 0 bytes @ 0x4
   490                           
   491  0074                     _isdigit$562:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     ___wmul@product:	
   495                           ; 1 bytes @ 0x4
   496                           
   497                           
   498                           ; 2 bytes @ 0x4
   499  0074                     	ds	1
   500  0075                     ??_time_set_provider:	
   501  0075                     ??_tick_get:	
   502                           ; 0 bytes @ 0x5
   503                           
   504  0075                     ??___lwmod:	
   505                           ; 0 bytes @ 0x5
   506                           
   507  0075                     isdigit@c:	
   508                           ; 0 bytes @ 0x5
   509                           
   510  0075                     ___llmod@counter:	
   511                           ; 1 bytes @ 0x5
   512                           
   513                           
   514                           ; 1 bytes @ 0x5
   515  0075                     	ds	1
   516                           
   517                           	psect	cstackBANK0
   518  0020                     __pcstackBANK0:	
   519  0020                     ?___wmul:	
   520  0020                     ?___lwdiv:	
   521                           ; 2 bytes @ 0x0
   522                           
   523  0020                     ?_time_provider:	
   524                           ; 2 bytes @ 0x0
   525                           
   526  0020                     ?_tick_get:	
   527                           ; 4 bytes @ 0x0
   528                           
   529  0020                     ?___lmul:	
   530                           ; 4 bytes @ 0x0
   531                           
   532  0020                     ?___lldiv:	
   533                           ; 4 bytes @ 0x0
   534                           
   535  0020                     ?___llmod:	
   536                           ; 4 bytes @ 0x0
   537                           
   538  0020                     ___wmul@multiplier:	
   539                           ; 4 bytes @ 0x0
   540                           
   541  0020                     ___lwdiv@divisor:	
   542                           ; 2 bytes @ 0x0
   543                           
   544  0020                     ___lmul@multiplier:	
   545                           ; 2 bytes @ 0x0
   546                           
   547  0020                     ___lldiv@divisor:	
   548                           ; 4 bytes @ 0x0
   549                           
   550  0020                     ___llmod@divisor:	
   551                           ; 4 bytes @ 0x0
   552                           
   553                           
   554                           ; 4 bytes @ 0x0
   555  0020                     	ds	2
   556  0022                     ___wmul@multiplicand:	
   557  0022                     ___lwdiv@dividend:	
   558                           ; 2 bytes @ 0x2
   559                           
   560                           
   561                           ; 2 bytes @ 0x2
   562  0022                     	ds	2
   563  0024                     ?_time_set:	
   564  0024                     ___lwdiv@counter:	
   565                           ; 0 bytes @ 0x4
   566                           
   567  0024                     time_set@now:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0024                     ___lmul@multiplicand:	
   571                           ; 4 bytes @ 0x4
   572                           
   573  0024                     ___lldiv@dividend:	
   574                           ; 4 bytes @ 0x4
   575                           
   576  0024                     ___llmod@dividend:	
   577                           ; 4 bytes @ 0x4
   578                           
   579                           
   580                           ; 4 bytes @ 0x4
   581  0024                     	ds	1
   582  0025                     ___lwdiv@quotient:	
   583                           
   584                           ; 2 bytes @ 0x5
   585  0025                     	ds	2
   586  0027                     ?___lwmod:	
   587  0027                     ___lwmod@divisor:	
   588                           ; 2 bytes @ 0x7
   589                           
   590                           
   591                           ; 2 bytes @ 0x7
   592  0027                     	ds	1
   593  0028                     ??_time_set:	
   594  0028                     ___lmul@product:	
   595                           ; 0 bytes @ 0x8
   596                           
   597  0028                     ___lldiv@quotient:	
   598                           ; 4 bytes @ 0x8
   599                           
   600                           
   601                           ; 4 bytes @ 0x8
   602  0028                     	ds	1
   603  0029                     ___lwmod@dividend:	
   604                           
   605                           ; 2 bytes @ 0x9
   606  0029                     	ds	2
   607  002B                     ___lwmod@counter:	
   608                           
   609                           ; 1 bytes @ 0xB
   610  002B                     	ds	1
   611  002C                     ?_printf:	
   612  002C                     ?_time_is_leap:	
   613                           ; 2 bytes @ 0xC
   614                           
   615  002C                     ?_time_get:	
   616                           ; 2 bytes @ 0xC
   617                           
   618  002C                     ___lldiv@counter:	
   619                           ; 4 bytes @ 0xC
   620                           
   621  002C                     time_is_leap@year:	
   622                           ; 1 bytes @ 0xC
   623                           
   624                           
   625                           ; 2 bytes @ 0xC
   626  002C                     	ds	2
   627  002E                     ??_time_is_leap:	
   628                           
   629                           ; 0 bytes @ 0xE
   630  002E                     	ds	2
   631  0030                     ??_time_get:	
   632  0030                     _time_is_leap$210:	
   633                           ; 0 bytes @ 0x10
   634                           
   635                           
   636                           ; 1 bytes @ 0x10
   637  0030                     	ds	1
   638  0031                     ?_time_break:	
   639  0031                     ?_time_make:	
   640                           ; 0 bytes @ 0x11
   641                           
   642  0031                     time_break@timeinput:	
   643                           ; 4 bytes @ 0x11
   644                           
   645                           
   646                           ; 4 bytes @ 0x11
   647  0031                     	ds	3
   648  0034                     time_get@now:	
   649                           
   650                           ; 4 bytes @ 0x14
   651  0034                     	ds	1
   652  0035                     ??_time_make:	
   653  0035                     time_break@timeinfo:	
   654                           ; 0 bytes @ 0x15
   655                           
   656                           
   657                           ; 1 bytes @ 0x15
   658  0035                     	ds	1
   659  0036                     ??_time_break:	
   660                           
   661                           ; 0 bytes @ 0x16
   662  0036                     	ds	2
   663  0038                     ?_time_set_provider:	
   664  0038                     ??_printf:	
   665                           ; 0 bytes @ 0x18
   666                           
   667  0038                     time_set_provider@timespan:	
   668                           ; 0 bytes @ 0x18
   669                           
   670                           
   671                           ; 4 bytes @ 0x18
   672  0038                     	ds	3
   673  003B                     printf@ap:	
   674  003B                     time_make@tstamp:	
   675                           ; 1 bytes @ 0x1B
   676                           
   677                           
   678                           ; 4 bytes @ 0x1B
   679  003B                     	ds	1
   680  003C                     time_set_provider@callback:	
   681  003C                     printf@prec:	
   682                           ; 1 bytes @ 0x1C
   683                           
   684                           
   685                           ; 1 bytes @ 0x1C
   686  003C                     	ds	1
   687  003D                     printf@_val:	
   688                           
   689                           ; 4 bytes @ 0x1D
   690  003D                     	ds	1
   691  003E                     _time_break$247:	
   692                           
   693                           ; 2 bytes @ 0x1E
   694  003E                     	ds	1
   695  003F                     time_make@i:	
   696                           
   697                           ; 2 bytes @ 0x1F
   698  003F                     	ds	1
   699  0040                     _time_break$248:	
   700                           
   701                           ; 2 bytes @ 0x20
   702  0040                     	ds	1
   703  0041                     time_make@timeinfo:	
   704  0041                     printf@flag:	
   705                           ; 1 bytes @ 0x21
   706                           
   707                           
   708                           ; 1 bytes @ 0x21
   709  0041                     	ds	1
   710  0042                     printf@f:	
   711  0042                     time_break@days:	
   712                           ; 1 bytes @ 0x22
   713                           
   714                           
   715                           ; 4 bytes @ 0x22
   716  0042                     	ds	1
   717  0043                     printf@width:	
   718                           
   719                           ; 2 bytes @ 0x23
   720  0043                     	ds	2
   721  0045                     printf@c:	
   722                           
   723                           ; 1 bytes @ 0x25
   724  0045                     	ds	1
   725  0046                     time_break@monthLength:	
   726                           
   727                           ; 1 bytes @ 0x26
   728  0046                     	ds	1
   729  0047                     time_break@year:	
   730                           
   731                           ; 1 bytes @ 0x27
   732  0047                     	ds	1
   733  0048                     time_break@month:	
   734                           
   735                           ; 1 bytes @ 0x28
   736  0048                     	ds	1
   737  0049                     time_break@xTime:	
   738                           
   739                           ; 4 bytes @ 0x29
   740  0049                     	ds	4
   741  004D                     ??_main:	
   742                           
   743                           ; 0 bytes @ 0x2D
   744  004D                     	ds	4
   745                           
   746                           	psect	maintext
   747  065D                     __pmaintext:	
   748 ;;
   749 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   750 ;;
   751 ;; *************** function _main *****************
   752 ;; Defined at:
   753 ;;		line 39 in file "main.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  tinfo          18    8[BANK1 ] struct tm
   758 ;;  last            4    4[BANK1 ] unsigned long 
   759 ;;  now             4    0[BANK1 ] long 
   760 ;; Return value:  Size  Location     Type
   761 ;;		None               void
   762 ;; Registers used:
   763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 17F/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       0       0       0       0
   770 ;;      Locals:         0       0      26       0       0
   771 ;;      Temps:          0       4       0       0       0
   772 ;;      Totals:         0       4      26       0       0
   773 ;;Total ram usage:       30 bytes
   774 ;; Hardware stack levels required when called:    7
   775 ;; This function calls:
   776 ;;		_printf
   777 ;;		_tick_get
   778 ;;		_tick_init
   779 ;;		_time_break
   780 ;;		_time_get
   781 ;;		_time_make
   782 ;;		_time_set
   783 ;;		_time_set_provider
   784 ;; This function is called by:
   785 ;;		Startup code after reset
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           
   790                           ;psect for function _main
   791  065D                     _main:	
   792                           
   793                           ;main.c: 41: ANSEL = 0x00;
   794                           
   795                           ;incstack = 0
   796                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   797  065D  1683               	bsf	3,5	;RP0=1, select bank1
   798  065E  1303               	bcf	3,6	;RP1=0, select bank1
   799  065F  019B               	clrf	27	;volatile
   800                           
   801                           ;main.c: 42: TRISA = 0xFF;
   802  0660  30FF               	movlw	255
   803  0661  0085               	movwf	5	;volatile
   804                           
   805                           ;main.c: 43: TRISB = 0b00000100;
   806  0662  3004               	movlw	4
   807  0663  0086               	movwf	6	;volatile
   808                           
   809                           ;main.c: 46: struct tm tinfo;
   810                           ;main.c: 49: time_t now;
   811                           ;main.c: 52: uint32_t last = 0;
   812  0664  3000               	movlw	0
   813  0665  00A7               	movwf	(main@last+3)^(0+128)
   814  0666  3000               	movlw	0
   815  0667  00A6               	movwf	(main@last+2)^(0+128)
   816  0668  3000               	movlw	0
   817  0669  00A5               	movwf	(main@last+1)^(0+128)
   818  066A  3000               	movlw	0
   819  066B  00A4               	movwf	main@last^(0+128)
   820                           
   821                           ;main.c: 55: tinfo.tm_year = 14;
   822  066C  300E               	movlw	14
   823  066D  00B2               	movwf	(main@tinfo^(0+128)+10)
   824  066E  3000               	movlw	0
   825  066F  00B3               	movwf	(main@tinfo^(0+128)+11)
   826                           
   827                           ;main.c: 56: tinfo.tm_mon = 1;
   828  0670  3001               	movlw	1
   829  0671  00B0               	movwf	(main@tinfo^(0+128)+8)
   830  0672  3000               	movlw	0
   831  0673  00B1               	movwf	(main@tinfo^(0+128)+9)
   832                           
   833                           ;main.c: 57: tinfo.tm_mday = 1;
   834  0674  3001               	movlw	1
   835  0675  00AE               	movwf	(main@tinfo^(0+128)+6)
   836  0676  3000               	movlw	0
   837  0677  00AF               	movwf	(main@tinfo^(0+128)+7)
   838                           
   839                           ;main.c: 58: tinfo.tm_hour = 13;
   840  0678  300D               	movlw	13
   841  0679  00AC               	movwf	(main@tinfo^(0+128)+4)
   842  067A  3000               	movlw	0
   843  067B  00AD               	movwf	(main@tinfo^(0+128)+5)
   844                           
   845                           ;main.c: 59: tinfo.tm_min = 55;
   846  067C  3037               	movlw	55
   847  067D  00AA               	movwf	(main@tinfo^(0+128)+2)
   848  067E  3000               	movlw	0
   849  067F  00AB               	movwf	(main@tinfo^(0+128)+3)
   850                           
   851                           ;main.c: 60: tinfo.tm_sec = 30;
   852  0680  301E               	movlw	30
   853  0681  00A8               	movwf	main@tinfo^(0+128)
   854  0682  3000               	movlw	0
   855  0683  00A9               	movwf	(main@tinfo^(0+128)+1)
   856                           
   857                           ;main.c: 63: tick_init();
   858  0684  158A  24CE  118A   	fcall	_tick_init
   859                           
   860                           ;main.c: 65: initialt = time_make(&tinfo);
   861  0687  30A8               	movlw	main@tinfo& (0+255)
   862  0688  118A  232D  118A   	fcall	_time_make
   863  068B  1283               	bcf	3,5	;RP0=0, select bank0
   864  068C  1303               	bcf	3,6	;RP1=0, select bank0
   865  068D  0834               	movf	?_time_make+3,w
   866  068E  1683               	bsf	3,5	;RP0=1, select bank1
   867  068F  1303               	bcf	3,6	;RP1=0, select bank1
   868  0690  00BD               	movwf	(_initialt+3)^(0+128)
   869  0691  1283               	bcf	3,5	;RP0=0, select bank0
   870  0692  1303               	bcf	3,6	;RP1=0, select bank0
   871  0693  0833               	movf	?_time_make+2,w
   872  0694  1683               	bsf	3,5	;RP0=1, select bank1
   873  0695  1303               	bcf	3,6	;RP1=0, select bank1
   874  0696  00BC               	movwf	(_initialt+2)^(0+128)
   875  0697  1283               	bcf	3,5	;RP0=0, select bank0
   876  0698  1303               	bcf	3,6	;RP1=0, select bank0
   877  0699  0832               	movf	?_time_make+1,w
   878  069A  1683               	bsf	3,5	;RP0=1, select bank1
   879  069B  1303               	bcf	3,6	;RP1=0, select bank1
   880  069C  00BB               	movwf	(_initialt+1)^(0+128)
   881  069D  1283               	bcf	3,5	;RP0=0, select bank0
   882  069E  1303               	bcf	3,6	;RP1=0, select bank0
   883  069F  0831               	movf	?_time_make,w
   884  06A0  1683               	bsf	3,5	;RP0=1, select bank1
   885  06A1  1303               	bcf	3,6	;RP1=0, select bank1
   886  06A2  00BA               	movwf	_initialt^(0+128)
   887                           
   888                           ;main.c: 67: time_set(initialt);
   889  06A3  083D               	movf	(_initialt+3)^(0+128),w
   890  06A4  1283               	bcf	3,5	;RP0=0, select bank0
   891  06A5  1303               	bcf	3,6	;RP1=0, select bank0
   892  06A6  00A7               	movwf	time_set@now+3
   893  06A7  1683               	bsf	3,5	;RP0=1, select bank1
   894  06A8  1303               	bcf	3,6	;RP1=0, select bank1
   895  06A9  083C               	movf	(_initialt+2)^(0+128),w
   896  06AA  1283               	bcf	3,5	;RP0=0, select bank0
   897  06AB  1303               	bcf	3,6	;RP1=0, select bank0
   898  06AC  00A6               	movwf	time_set@now+2
   899  06AD  1683               	bsf	3,5	;RP0=1, select bank1
   900  06AE  1303               	bcf	3,6	;RP1=0, select bank1
   901  06AF  083B               	movf	(_initialt+1)^(0+128),w
   902  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   903  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   904  06B2  00A5               	movwf	time_set@now+1
   905  06B3  1683               	bsf	3,5	;RP0=1, select bank1
   906  06B4  1303               	bcf	3,6	;RP1=0, select bank1
   907  06B5  083A               	movf	_initialt^(0+128),w
   908  06B6  1283               	bcf	3,5	;RP0=0, select bank0
   909  06B7  1303               	bcf	3,6	;RP1=0, select bank0
   910  06B8  00A4               	movwf	time_set@now
   911  06B9  158A  26A2  118A   	fcall	_time_set
   912                           
   913                           ;main.c: 69: time_set_provider(&time_provider, (86400UL));
   914  06BC  3000               	movlw	0
   915  06BD  1283               	bcf	3,5	;RP0=0, select bank0
   916  06BE  1303               	bcf	3,6	;RP1=0, select bank0
   917  06BF  00BB               	movwf	time_set_provider@timespan+3
   918  06C0  3001               	movlw	1
   919  06C1  00BA               	movwf	time_set_provider@timespan+2
   920  06C2  3051               	movlw	81
   921  06C3  00B9               	movwf	time_set_provider@timespan+1
   922  06C4  3080               	movlw	128
   923  06C5  00B8               	movwf	time_set_provider@timespan
   924  06C6  3001               	movlw	(fp__time_provider-fpbase)& (0+255)
   925  06C7  158A  25A0  118A   	fcall	_time_set_provider
   926                           
   927                           ;main.c: 71: printf("TimeLib Test Program\r\n");
   928  06CA  3043               	movlw	(STR_1-__stringbase)& (0+255)
   929  06CB                     L1:	
   930  06CB  118A  24E8  118A   	fcall	_printf
   931  06CE                     l2030:	
   932                           ;main.c: 73: for (;;) {
   933                           
   934                           
   935                           ;main.c: 75: if (tick_get() - last > ((unsigned long long)((1000000 + 128ull)/8ull))) {
   936  06CE  1683               	bsf	3,5	;RP0=1, select bank1
   937  06CF  1303               	bcf	3,6	;RP1=0, select bank1
   938  06D0  0924               	comf	main@last^(0+128),w
   939  06D1  1283               	bcf	3,5	;RP0=0, select bank0
   940  06D2  1303               	bcf	3,6	;RP1=0, select bank0
   941  06D3  00CD               	movwf	??_main
   942  06D4  1683               	bsf	3,5	;RP0=1, select bank1
   943  06D5  1303               	bcf	3,6	;RP1=0, select bank1
   944  06D6  0925               	comf	(main@last+1)^(0+128),w
   945  06D7  1283               	bcf	3,5	;RP0=0, select bank0
   946  06D8  1303               	bcf	3,6	;RP1=0, select bank0
   947  06D9  00CE               	movwf	??_main+1
   948  06DA  1683               	bsf	3,5	;RP0=1, select bank1
   949  06DB  1303               	bcf	3,6	;RP1=0, select bank1
   950  06DC  0926               	comf	(main@last+2)^(0+128),w
   951  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   952  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   953  06DF  00CF               	movwf	??_main+2
   954  06E0  1683               	bsf	3,5	;RP0=1, select bank1
   955  06E1  1303               	bcf	3,6	;RP1=0, select bank1
   956  06E2  0927               	comf	(main@last+3)^(0+128),w
   957  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   958  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   959  06E5  00D0               	movwf	??_main+3
   960  06E6  0ACD               	incf	??_main,f
   961  06E7  1903               	skipnz
   962  06E8  0ACE               	incf	??_main+1,f
   963  06E9  1903               	skipnz
   964  06EA  0ACF               	incf	??_main+2,f
   965  06EB  1903               	skipnz
   966  06EC  0AD0               	incf	??_main+3,f
   967  06ED  158A  24DE  118A   	fcall	_tick_get
   968  06F0  1283               	bcf	3,5	;RP0=0, select bank0
   969  06F1  1303               	bcf	3,6	;RP1=0, select bank0
   970  06F2  0820               	movf	?_tick_get,w
   971  06F3  07CD               	addwf	??_main,f
   972  06F4  0821               	movf	?_tick_get+1,w
   973  06F5  1803               	skipnc
   974  06F6  0F21               	incfsz	?_tick_get+1,w
   975  06F7  2EF9               	goto	u2760
   976  06F8  2EFA               	goto	u2761
   977  06F9                     u2760:	
   978  06F9  07CE               	addwf	??_main+1,f
   979  06FA                     u2761:	
   980  06FA  0822               	movf	?_tick_get+2,w
   981  06FB  1803               	skipnc
   982  06FC  0F22               	incfsz	?_tick_get+2,w
   983  06FD  2EFF               	goto	u2762
   984  06FE  2F00               	goto	u2763
   985  06FF                     u2762:	
   986  06FF  07CF               	addwf	??_main+2,f
   987  0700                     u2763:	
   988  0700  0823               	movf	?_tick_get+3,w
   989  0701  1803               	skipnc
   990  0702  0A23               	incf	?_tick_get+3,w
   991  0703  07D0               	addwf	??_main+3,f
   992  0704  3000               	movlw	0
   993  0705  0250               	subwf	??_main+3,w
   994  0706  1D03               	skipz
   995  0707  2F12               	goto	u2775
   996  0708  3001               	movlw	1
   997  0709  024F               	subwf	??_main+2,w
   998  070A  1D03               	skipz
   999  070B  2F12               	goto	u2775
  1000  070C  30E8               	movlw	232
  1001  070D  024E               	subwf	??_main+1,w
  1002  070E  1D03               	skipz
  1003  070F  2F12               	goto	u2775
  1004  0710  3059               	movlw	89
  1005  0711  024D               	subwf	??_main,w
  1006  0712                     u2775:	
  1007  0712  1C03               	skipc
  1008  0713  2ECE               	goto	l2030
  1009                           
  1010                           ;main.c: 77: last = tick_get();
  1011  0714  158A  24DE  118A   	fcall	_tick_get
  1012  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0719  0823               	movf	?_tick_get+3,w
  1015  071A  1683               	bsf	3,5	;RP0=1, select bank1
  1016  071B  1303               	bcf	3,6	;RP1=0, select bank1
  1017  071C  00A7               	movwf	(main@last+3)^(0+128)
  1018  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1019  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1020  071F  0822               	movf	?_tick_get+2,w
  1021  0720  1683               	bsf	3,5	;RP0=1, select bank1
  1022  0721  1303               	bcf	3,6	;RP1=0, select bank1
  1023  0722  00A6               	movwf	(main@last+2)^(0+128)
  1024  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0725  0821               	movf	?_tick_get+1,w
  1027  0726  1683               	bsf	3,5	;RP0=1, select bank1
  1028  0727  1303               	bcf	3,6	;RP1=0, select bank1
  1029  0728  00A5               	movwf	(main@last+1)^(0+128)
  1030  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1031  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1032  072B  0820               	movf	?_tick_get,w
  1033  072C  1683               	bsf	3,5	;RP0=1, select bank1
  1034  072D  1303               	bcf	3,6	;RP1=0, select bank1
  1035  072E  00A4               	movwf	main@last^(0+128)
  1036                           
  1037                           ;main.c: 79: now = time_get();
  1038  072F  158A  2700  118A   	fcall	_time_get
  1039  0732  1283               	bcf	3,5	;RP0=0, select bank0
  1040  0733  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0734  082F               	movf	?_time_get+3,w
  1042  0735  1683               	bsf	3,5	;RP0=1, select bank1
  1043  0736  1303               	bcf	3,6	;RP1=0, select bank1
  1044  0737  00A3               	movwf	(main@now+3)^(0+128)
  1045  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1047  073A  082E               	movf	?_time_get+2,w
  1048  073B  1683               	bsf	3,5	;RP0=1, select bank1
  1049  073C  1303               	bcf	3,6	;RP1=0, select bank1
  1050  073D  00A2               	movwf	(main@now+2)^(0+128)
  1051  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1052  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0740  082D               	movf	?_time_get+1,w
  1054  0741  1683               	bsf	3,5	;RP0=1, select bank1
  1055  0742  1303               	bcf	3,6	;RP1=0, select bank1
  1056  0743  00A1               	movwf	(main@now+1)^(0+128)
  1057  0744  1283               	bcf	3,5	;RP0=0, select bank0
  1058  0745  1303               	bcf	3,6	;RP1=0, select bank0
  1059  0746  082C               	movf	?_time_get,w
  1060  0747  1683               	bsf	3,5	;RP0=1, select bank1
  1061  0748  1303               	bcf	3,6	;RP1=0, select bank1
  1062  0749  00A0               	movwf	main@now^(0+128)
  1063                           
  1064                           ;main.c: 81: time_break(now, &tinfo);
  1065  074A  0823               	movf	(main@now+3)^(0+128),w
  1066  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1067  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1068  074D  00B4               	movwf	time_break@timeinput+3
  1069  074E  1683               	bsf	3,5	;RP0=1, select bank1
  1070  074F  1303               	bcf	3,6	;RP1=0, select bank1
  1071  0750  0822               	movf	(main@now+2)^(0+128),w
  1072  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1073  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1074  0753  00B3               	movwf	time_break@timeinput+2
  1075  0754  1683               	bsf	3,5	;RP0=1, select bank1
  1076  0755  1303               	bcf	3,6	;RP1=0, select bank1
  1077  0756  0821               	movf	(main@now+1)^(0+128),w
  1078  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1079  0758  1303               	bcf	3,6	;RP1=0, select bank0
  1080  0759  00B2               	movwf	time_break@timeinput+1
  1081  075A  1683               	bsf	3,5	;RP0=1, select bank1
  1082  075B  1303               	bcf	3,6	;RP1=0, select bank1
  1083  075C  0820               	movf	main@now^(0+128),w
  1084  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1085  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1086  075F  00B1               	movwf	time_break@timeinput
  1087  0760  30A8               	movlw	main@tinfo& (0+255)
  1088  0761  00CD               	movwf	??_main
  1089  0762  084D               	movf	??_main,w
  1090  0763  00B5               	movwf	time_break@timeinfo
  1091  0764  118A  2108  118A   	fcall	_time_break
  1092                           
  1093                           ;main.c: 83: printf("Time: %02d:%02d:%02d Date: %02d/%02d/%02d\r\n", tinfo.tm_hour, tinf
      +                          o.tm_min, tinfo.tm_sec, tinfo.tm_mday, tinfo.tm_mon, tinfo.tm_year);
  1094  0767  1683               	bsf	3,5	;RP0=1, select bank1
  1095  0768  1303               	bcf	3,6	;RP1=0, select bank1
  1096  0769  082D               	movf	((main@tinfo+1)^(0+128)+4),w
  1097  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1098  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1099  076C  01AD               	clrf	?_printf+1
  1100  076D  07AD               	addwf	?_printf+1,f
  1101  076E  1683               	bsf	3,5	;RP0=1, select bank1
  1102  076F  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0770  082C               	movf	(main@tinfo^(0+128)+4),w
  1104  0771  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0772  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0773  01AC               	clrf	?_printf
  1107  0774  07AC               	addwf	?_printf,f
  1108  0775  1683               	bsf	3,5	;RP0=1, select bank1
  1109  0776  1303               	bcf	3,6	;RP1=0, select bank1
  1110  0777  082B               	movf	((main@tinfo+1)^(0+128)+2),w
  1111  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1113  077A  01AF               	clrf	?_printf+3
  1114  077B  07AF               	addwf	?_printf+3,f
  1115  077C  1683               	bsf	3,5	;RP0=1, select bank1
  1116  077D  1303               	bcf	3,6	;RP1=0, select bank1
  1117  077E  082A               	movf	(main@tinfo^(0+128)+2),w
  1118  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1119  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1120  0781  01AE               	clrf	?_printf+2
  1121  0782  07AE               	addwf	?_printf+2,f
  1122  0783  1683               	bsf	3,5	;RP0=1, select bank1
  1123  0784  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0785  0829               	movf	(main@tinfo+1)^(0+128),w
  1125  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0788  01B1               	clrf	?_printf+5
  1128  0789  07B1               	addwf	?_printf+5,f
  1129  078A  1683               	bsf	3,5	;RP0=1, select bank1
  1130  078B  1303               	bcf	3,6	;RP1=0, select bank1
  1131  078C  0828               	movf	main@tinfo^(0+128),w
  1132  078D  1283               	bcf	3,5	;RP0=0, select bank0
  1133  078E  1303               	bcf	3,6	;RP1=0, select bank0
  1134  078F  01B0               	clrf	?_printf+4
  1135  0790  07B0               	addwf	?_printf+4,f
  1136  0791  1683               	bsf	3,5	;RP0=1, select bank1
  1137  0792  1303               	bcf	3,6	;RP1=0, select bank1
  1138  0793  082F               	movf	((main@tinfo+1)^(0+128)+6),w
  1139  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0796  01B3               	clrf	?_printf+7
  1142  0797  07B3               	addwf	?_printf+7,f
  1143  0798  1683               	bsf	3,5	;RP0=1, select bank1
  1144  0799  1303               	bcf	3,6	;RP1=0, select bank1
  1145  079A  082E               	movf	(main@tinfo^(0+128)+6),w
  1146  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1147  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1148  079D  01B2               	clrf	?_printf+6
  1149  079E  07B2               	addwf	?_printf+6,f
  1150  079F  1683               	bsf	3,5	;RP0=1, select bank1
  1151  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  1152  07A1  0831               	movf	((main@tinfo+1)^(0+128)+8),w
  1153  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1154  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1155  07A4  01B5               	clrf	?_printf+9
  1156  07A5  07B5               	addwf	?_printf+9,f
  1157  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  1158  07A7  1303               	bcf	3,6	;RP1=0, select bank1
  1159  07A8  0830               	movf	(main@tinfo^(0+128)+8),w
  1160  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1161  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1162  07AB  01B4               	clrf	?_printf+8
  1163  07AC  07B4               	addwf	?_printf+8,f
  1164  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  1165  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  1166  07AF  0833               	movf	((main@tinfo+1)^(0+128)+10),w
  1167  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1168  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1169  07B2  01B7               	clrf	?_printf+11
  1170  07B3  07B7               	addwf	?_printf+11,f
  1171  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  1172  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  1173  07B6  0832               	movf	(main@tinfo^(0+128)+10),w
  1174  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  1175  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  1176  07B9  01B6               	clrf	?_printf+10
  1177  07BA  07B6               	addwf	?_printf+10,f
  1178  07BB  3017               	movlw	(STR_2-__stringbase)& (0+255)
  1179  07BC  2ECB               	goto	L1
  1180  07BD                     __end_of_main:	
  1181                           ;main.c: 84: }
  1182                           ;main.c: 85: }
  1183                           
  1184                           
  1185                           	psect	text1
  1186  0DA0                     __ptext1:	
  1187 ;; *************** function _time_set_provider *****************
  1188 ;; Defined at:
  1189 ;;		line 189 in file "../TimeLib.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  callback        1    wreg     PTR FTN()long 
  1192 ;;		 -> time_provider(4), 
  1193 ;;  timespan        4   24[BANK0 ] long 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  callback        1   28[BANK0 ] PTR FTN()long 
  1196 ;;		 -> time_provider(4), 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;		None               void
  1199 ;; Registers used:
  1200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       4       0       0       0
  1207 ;;      Locals:         0       1       0       0       0
  1208 ;;      Temps:          1       0       0       0       0
  1209 ;;      Totals:         1       5       0       0       0
  1210 ;;Total ram usage:        6 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    6
  1213 ;; This function calls:
  1214 ;;		_time_get
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _time_set_provider
  1222  0DA0                     _time_set_provider:	
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _time_set_provider: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1226                           ;time_set_provider@callback stored from wreg
  1227  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  1229  0DA2  00BC               	movwf	time_set_provider@callback
  1230                           
  1231                           ;TimeLib.c: 192: if (callback == 0)
  1232  0DA3  08BC               	movf	time_set_provider@callback,f
  1233  0DA4  1903               	btfsc	3,2
  1234  0DA5  0008               	return
  1235                           
  1236                           ;TimeLib.c: 195: time_provider_callback = callback;
  1237                           
  1238                           ;TimeLib.c: 193: return;
  1239  0DA6  083C               	movf	time_set_provider@callback,w
  1240  0DA7  00F5               	movwf	??_time_set_provider
  1241  0DA8  0875               	movf	??_time_set_provider,w
  1242  0DA9  00D9               	movwf	_time_provider_callback
  1243                           
  1244                           ;TimeLib.c: 197: sync_interval = (timespan == 0) ? (86400UL) : timespan;
  1245  0DAA  083B               	movf	time_set_provider@timespan+3,w
  1246  0DAB  043A               	iorwf	time_set_provider@timespan+2,w
  1247  0DAC  0439               	iorwf	time_set_provider@timespan+1,w
  1248  0DAD  0438               	iorwf	time_set_provider@timespan,w
  1249  0DAE  1903               	skipnz
  1250  0DAF  2DB8               	goto	l1836
  1251  0DB0  083B               	movf	time_set_provider@timespan+3,w
  1252  0DB1  00D8               	movwf	_sync_interval+3
  1253  0DB2  083A               	movf	time_set_provider@timespan+2,w
  1254  0DB3  00D7               	movwf	_sync_interval+2
  1255  0DB4  0839               	movf	time_set_provider@timespan+1,w
  1256  0DB5  00D6               	movwf	_sync_interval+1
  1257  0DB6  0838               	movf	time_set_provider@timespan,w
  1258  0DB7  2DBF               	goto	L2
  1259  0DB8                     l1836:	
  1260  0DB8  3000               	movlw	0
  1261  0DB9  00D8               	movwf	_sync_interval+3
  1262  0DBA  3001               	movlw	1
  1263  0DBB  00D7               	movwf	_sync_interval+2
  1264  0DBC  3051               	movlw	81
  1265  0DBD  00D6               	movwf	_sync_interval+1
  1266  0DBE  3080               	movlw	128
  1267  0DBF                     L2:	
  1268  0DBF  00D5               	movwf	_sync_interval
  1269                           
  1270                           ;TimeLib.c: 199: sync_next = sys_time;
  1271  0DC0  0854               	movf	_sys_time+3,w
  1272  0DC1  1683               	bsf	3,5	;RP0=1, select bank1
  1273  0DC2  1303               	bcf	3,6	;RP1=0, select bank1
  1274  0DC3  00C5               	movwf	(_sync_next+3)^(0+128)
  1275  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0DC6  0853               	movf	_sys_time+2,w
  1278  0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0DC9  00C4               	movwf	(_sync_next+2)^(0+128)
  1281  0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0DCC  0852               	movf	_sys_time+1,w
  1284  0DCD  1683               	bsf	3,5	;RP0=1, select bank1
  1285  0DCE  1303               	bcf	3,6	;RP1=0, select bank1
  1286  0DCF  00C3               	movwf	(_sync_next+1)^(0+128)
  1287  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  1288  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  1289  0DD2  0851               	movf	_sys_time,w
  1290  0DD3  1683               	bsf	3,5	;RP0=1, select bank1
  1291  0DD4  1303               	bcf	3,6	;RP1=0, select bank1
  1292  0DD5  00C2               	movwf	_sync_next^(0+128)
  1293                           
  1294                           ;TimeLib.c: 201: time_get();
  1295  0DD6  158A  2700         	fcall	_time_get
  1296  0DD8  0008               	return
  1297  0DD9                     __end_of_time_set_provider:	
  1298                           
  1299                           	psect	text2
  1300  0F00                     __ptext2:	
  1301 ;; *************** function _time_get *****************
  1302 ;; Defined at:
  1303 ;;		line 74 in file "../TimeLib.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  now             4   20[BANK0 ] long 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  4   12[BANK0 ] long 
  1310 ;; Registers used:
  1311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/0
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1317 ;;      Params:         0       4       0       0       0
  1318 ;;      Locals:         0       4       0       0       0
  1319 ;;      Temps:          0       4       0       0       0
  1320 ;;      Totals:         0      12       0       0       0
  1321 ;;Total ram usage:       12 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:    5
  1324 ;; This function calls:
  1325 ;;		Absolute function
  1326 ;;		_tick_get
  1327 ;;		_time_provider
  1328 ;;		_time_set
  1329 ;; This function is called by:
  1330 ;;		_main
  1331 ;;		_time_set_provider
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _time_get
  1337  0F00                     _time_get:	
  1338                           
  1339                           ;TimeLib.c: 76: time_t now = 0;
  1340                           
  1341                           ;incstack = 0
  1342                           ; Regs used in _time_get: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1343  0F00  3000               	movlw	0
  1344  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0F03  00B7               	movwf	time_get@now+3
  1347  0F04  3000               	movlw	0
  1348  0F05  00B6               	movwf	time_get@now+2
  1349  0F06  3000               	movlw	0
  1350  0F07  00B5               	movwf	time_get@now+1
  1351  0F08  3000               	movlw	0
  1352  0F09  00B4               	movwf	time_get@now
  1353                           
  1354                           ;TimeLib.c: 79: if (sync_next <= sys_time) {
  1355  0F0A  0854               	movf	_sys_time+3,w
  1356  0F0B  3A80               	xorlw	128
  1357  0F0C  00FF               	movwf	127
  1358  0F0D  1683               	bsf	3,5	;RP0=1, select bank1
  1359  0F0E  1303               	bcf	3,6	;RP1=0, select bank1
  1360  0F0F  0845               	movf	(_sync_next+3)^(0+128),w
  1361  0F10  3A80               	xorlw	128
  1362  0F11  027F               	subwf	127,w
  1363  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  1364  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  1365  0F14  1D03               	skipz
  1366  0F15  2F2C               	goto	u1933
  1367  0F16  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0F17  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0F18  0844               	movf	(_sync_next+2)^(0+128),w
  1370  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0F1B  0253               	subwf	_sys_time+2,w
  1373  0F1C  1D03               	skipz
  1374  0F1D  2F2C               	goto	u1933
  1375  0F1E  1683               	bsf	3,5	;RP0=1, select bank1
  1376  0F1F  1303               	bcf	3,6	;RP1=0, select bank1
  1377  0F20  0843               	movf	(_sync_next+1)^(0+128),w
  1378  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0F23  0252               	subwf	_sys_time+1,w
  1381  0F24  1D03               	skipz
  1382  0F25  2F2C               	goto	u1933
  1383  0F26  1683               	bsf	3,5	;RP0=1, select bank1
  1384  0F27  1303               	bcf	3,6	;RP1=0, select bank1
  1385  0F28  0842               	movf	_sync_next^(0+128),w
  1386  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0F2B  0251               	subwf	_sys_time,w
  1389  0F2C                     u1933:	
  1390  0F2C  1C03               	skipc
  1391  0F2D  2FB1               	goto	l1652
  1392                           
  1393                           ;TimeLib.c: 81: if (time_provider_callback != 0) {
  1394  0F2E  0859               	movf	_time_provider_callback,w
  1395  0F2F  1903               	btfsc	3,2
  1396  0F30  2FB1               	goto	l1652
  1397                           
  1398                           ;TimeLib.c: 83: now = time_provider_callback();
  1399  0F31  0859               	movf	_time_provider_callback,w
  1400  0F32  118A  2100  158A   	fcall	fptable
  1401  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0F37  0823               	movf	?_time_provider+3,w
  1404  0F38  00B7               	movwf	time_get@now+3
  1405  0F39  0822               	movf	?_time_provider+2,w
  1406  0F3A  00B6               	movwf	time_get@now+2
  1407  0F3B  0821               	movf	?_time_provider+1,w
  1408  0F3C  00B5               	movwf	time_get@now+1
  1409  0F3D  0820               	movf	?_time_provider,w
  1410  0F3E  00B4               	movwf	time_get@now
  1411                           
  1412                           ;TimeLib.c: 85: if (now != 0)
  1413  0F3F  0837               	movf	time_get@now+3,w
  1414  0F40  0436               	iorwf	time_get@now+2,w
  1415  0F41  0435               	iorwf	time_get@now+1,w
  1416  0F42  0434               	iorwf	time_get@now,w
  1417  0F43  1903               	skipnz
  1418  0F44  2F51               	goto	l1646
  1419                           
  1420                           ;TimeLib.c: 86: time_set(now);
  1421  0F45  0837               	movf	time_get@now+3,w
  1422  0F46  00A7               	movwf	time_set@now+3
  1423  0F47  0836               	movf	time_get@now+2,w
  1424  0F48  00A6               	movwf	time_set@now+2
  1425  0F49  0835               	movf	time_get@now+1,w
  1426  0F4A  00A5               	movwf	time_set@now+1
  1427  0F4B  0834               	movf	time_get@now,w
  1428  0F4C  00A4               	movwf	time_set@now
  1429  0F4D  158A  26A2  158A   	fcall	_time_set
  1430  0F50  2FAF               	goto	L4
  1431  0F51                     l1646:	
  1432                           
  1433                           ;TimeLib.c: 87: else {
  1434                           ;TimeLib.c: 88: sync_next = sys_time + sync_interval;
  1435  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0F53  0851               	movf	_sys_time,w
  1438  0F54  0755               	addwf	_sync_interval,w
  1439  0F55  00B0               	movwf	??_time_get
  1440  0F56  3000               	movlw	0
  1441  0F57  1803               	skipnc
  1442  0F58  3001               	movlw	1
  1443  0F59  0752               	addwf	_sys_time+1,w
  1444  0F5A  01B2               	clrf	??_time_get+2
  1445  0F5B  1803               	skipnc
  1446  0F5C  0AB2               	incf	??_time_get+2,f
  1447  0F5D  0756               	addwf	_sync_interval+1,w
  1448  0F5E  00B1               	movwf	??_time_get+1
  1449  0F5F  1803               	skipnc
  1450  0F60  0AB2               	incf	??_time_get+2,f
  1451  0F61  0853               	movf	_sys_time+2,w
  1452  0F62  0732               	addwf	??_time_get+2,w
  1453  0F63  01B3               	clrf	??_time_get+3
  1454  0F64  1803               	skipnc
  1455  0F65  0AB3               	incf	??_time_get+3,f
  1456  0F66  0757               	addwf	_sync_interval+2,w
  1457  0F67  00B2               	movwf	??_time_get+2
  1458  0F68  1803               	skipnc
  1459  0F69  0AB3               	incf	??_time_get+3,f
  1460  0F6A  0854               	movf	_sys_time+3,w
  1461  0F6B  0733               	addwf	??_time_get+3,w
  1462  0F6C  0758               	addwf	_sync_interval+3,w
  1463  0F6D  00B3               	movwf	??_time_get+3
  1464  0F6E  0833               	movf	??_time_get+3,w
  1465  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  1466  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  1467  0F71  00C5               	movwf	(_sync_next+3)^(0+128)
  1468  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0F74  0832               	movf	??_time_get+2,w
  1471  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  1472  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  1473  0F77  00C4               	movwf	(_sync_next+2)^(0+128)
  1474  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  1476  0F7A  0831               	movf	??_time_get+1,w
  1477  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  1479  0F7D  00C3               	movwf	(_sync_next+1)^(0+128)
  1480  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0F80  0830               	movf	??_time_get,w
  1483  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  1484  0F82  1303               	bcf	3,6	;RP1=0, select bank1
  1485  0F83  00C2               	movwf	_sync_next^(0+128)
  1486                           
  1487                           ;TimeLib.c: 89: enTimeCurrentStatus = (enTimeCurrentStatus == E_TIME_NOT_SET) ? E_TIME_N
      +                          OT_SET : E_TIME_NEEDS_SYNC;
  1488  0F84  3000               	movlw	0
  1489  0F85  08C6               	movf	_enTimeCurrentStatus^(0+128),f
  1490  0F86  1D03               	skipz
  1491  0F87  3001               	movlw	1
  1492  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  1493  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  1494  0F8A  00B0               	movwf	??_time_get
  1495  0F8B  0830               	movf	??_time_get,w
  1496  0F8C  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0F8D  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0F8E  00C6               	movwf	_enTimeCurrentStatus^(0+128)
  1499  0F8F  2FAF               	goto	L4
  1500  0F90                     l1650:	
  1501                           ;TimeLib.c: 90: }
  1502                           ;TimeLib.c: 91: }
  1503                           ;TimeLib.c: 92: }
  1504                           ;TimeLib.c: 96: while (tick_get() - last_update >= ((unsigned long long)((1000000 + 128u
      +                          ll)/8ull))) {
  1505                           
  1506                           
  1507                           ;TimeLib.c: 98: sys_time++;
  1508  0F90  3001               	movlw	1
  1509  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0F92  07D1               	addwf	_sys_time,f
  1511  0F93  3000               	movlw	0
  1512  0F94  1803               	skipnc
  1513  0F95  3001               	movlw	1
  1514  0F96  07D2               	addwf	_sys_time+1,f
  1515  0F97  3000               	movlw	0
  1516  0F98  1803               	skipnc
  1517  0F99  3001               	movlw	1
  1518  0F9A  07D3               	addwf	_sys_time+2,f
  1519  0F9B  3000               	movlw	0
  1520  0F9C  1803               	skipnc
  1521  0F9D  3001               	movlw	1
  1522  0F9E  07D4               	addwf	_sys_time+3,f
  1523                           
  1524                           ;TimeLib.c: 99: last_update += ((unsigned long long)((1000000 + 128ull)/8ull));
  1525  0F9F  3058               	movlw	88
  1526  0FA0  1683               	bsf	3,5	;RP0=1, select bank1
  1527  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  1528  0FA2  07BE               	addwf	_last_update^(0+128),f
  1529  0FA3  30E8               	movlw	232
  1530  0FA4  1803               	skipnc
  1531  0FA5  30E9               	movlw	233
  1532  0FA6  07BF               	addwf	(_last_update+1)^(0+128),f
  1533  0FA7  3001               	movlw	1
  1534  0FA8  1803               	skipnc
  1535  0FA9  3002               	movlw	2
  1536  0FAA  07C0               	addwf	(_last_update+2)^(0+128),f
  1537  0FAB  3000               	movlw	0
  1538  0FAC  1803               	skipnc
  1539  0FAD  3001               	movlw	1
  1540  0FAE  07C1               	addwf	(_last_update+3)^(0+128),f
  1541  0FAF                     L4:	
  1542  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0FB1                     l1652:	
  1545  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0FB3  093E               	comf	_last_update^(0+128),w
  1548  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0FB6  00B0               	movwf	??_time_get
  1551  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0FB9  093F               	comf	(_last_update+1)^(0+128),w
  1554  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0FBC  00B1               	movwf	??_time_get+1
  1557  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  1558  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  1559  0FBF  0940               	comf	(_last_update+2)^(0+128),w
  1560  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0FC2  00B2               	movwf	??_time_get+2
  1563  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0FC4  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0FC5  0941               	comf	(_last_update+3)^(0+128),w
  1566  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0FC8  00B3               	movwf	??_time_get+3
  1569  0FC9  0AB0               	incf	??_time_get,f
  1570  0FCA  1903               	skipnz
  1571  0FCB  0AB1               	incf	??_time_get+1,f
  1572  0FCC  1903               	skipnz
  1573  0FCD  0AB2               	incf	??_time_get+2,f
  1574  0FCE  1903               	skipnz
  1575  0FCF  0AB3               	incf	??_time_get+3,f
  1576  0FD0  158A  24DE  158A   	fcall	_tick_get
  1577  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0FD5  0820               	movf	?_tick_get,w
  1580  0FD6  07B0               	addwf	??_time_get,f
  1581  0FD7  0821               	movf	?_tick_get+1,w
  1582  0FD8  1803               	skipnc
  1583  0FD9  0F21               	incfsz	?_tick_get+1,w
  1584  0FDA  2FDC               	goto	u1960
  1585  0FDB  2FDD               	goto	u1961
  1586  0FDC                     u1960:	
  1587  0FDC  07B1               	addwf	??_time_get+1,f
  1588  0FDD                     u1961:	
  1589  0FDD  0822               	movf	?_tick_get+2,w
  1590  0FDE  1803               	skipnc
  1591  0FDF  0F22               	incfsz	?_tick_get+2,w
  1592  0FE0  2FE2               	goto	u1962
  1593  0FE1  2FE3               	goto	u1963
  1594  0FE2                     u1962:	
  1595  0FE2  07B2               	addwf	??_time_get+2,f
  1596  0FE3                     u1963:	
  1597  0FE3  0823               	movf	?_tick_get+3,w
  1598  0FE4  1803               	skipnc
  1599  0FE5  0A23               	incf	?_tick_get+3,w
  1600  0FE6  07B3               	addwf	??_time_get+3,f
  1601  0FE7  3000               	movlw	0
  1602  0FE8  0233               	subwf	??_time_get+3,w
  1603  0FE9  1D03               	skipz
  1604  0FEA  2FF5               	goto	u1975
  1605  0FEB  3001               	movlw	1
  1606  0FEC  0232               	subwf	??_time_get+2,w
  1607  0FED  1D03               	skipz
  1608  0FEE  2FF5               	goto	u1975
  1609  0FEF  30E8               	movlw	232
  1610  0FF0  0231               	subwf	??_time_get+1,w
  1611  0FF1  1D03               	skipz
  1612  0FF2  2FF5               	goto	u1975
  1613  0FF3  3058               	movlw	88
  1614  0FF4  0230               	subwf	??_time_get,w
  1615  0FF5                     u1975:	
  1616  0FF5  1803               	skipnc
  1617  0FF6  2F90               	goto	l1650
  1618                           
  1619                           ;TimeLib.c: 100: }
  1620                           ;TimeLib.c: 102: return sys_time;
  1621  0FF7  0854               	movf	_sys_time+3,w
  1622  0FF8  00AF               	movwf	?_time_get+3
  1623  0FF9  0853               	movf	_sys_time+2,w
  1624  0FFA  00AE               	movwf	?_time_get+2
  1625  0FFB  0852               	movf	_sys_time+1,w
  1626  0FFC  00AD               	movwf	?_time_get+1
  1627  0FFD  0851               	movf	_sys_time,w
  1628  0FFE  00AC               	movwf	?_time_get
  1629  0FFF  0008               	return
  1630  1000                     __end_of_time_get:	
  1631                           
  1632                           	psect	text3
  1633  0EA2                     __ptext3:	
  1634 ;; *************** function _time_set *****************
  1635 ;; Defined at:
  1636 ;;		line 66 in file "../TimeLib.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  now             4    4[BANK0 ] long 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;		None               void
  1643 ;; Registers used:
  1644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         0       4       0       0       0
  1651 ;;      Locals:         0       0       0       0       0
  1652 ;;      Temps:          0       4       0       0       0
  1653 ;;      Totals:         0       8       0       0       0
  1654 ;;Total ram usage:        8 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    4
  1657 ;; This function calls:
  1658 ;;		_tick_get
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;;		_time_get
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           
  1666                           ;psect for function _time_set
  1667  0EA2                     _time_set:	
  1668                           
  1669                           ;TimeLib.c: 68: sys_time = now;
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in _time_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1673  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  1674  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  1675  0EA4  0827               	movf	time_set@now+3,w
  1676  0EA5  00D4               	movwf	_sys_time+3
  1677  0EA6  0826               	movf	time_set@now+2,w
  1678  0EA7  00D3               	movwf	_sys_time+2
  1679  0EA8  0825               	movf	time_set@now+1,w
  1680  0EA9  00D2               	movwf	_sys_time+1
  1681  0EAA  0824               	movf	time_set@now,w
  1682  0EAB  00D1               	movwf	_sys_time
  1683                           
  1684                           ;TimeLib.c: 69: sync_next = now + sync_interval;
  1685  0EAC  0824               	movf	time_set@now,w
  1686  0EAD  0755               	addwf	_sync_interval,w
  1687  0EAE  00A8               	movwf	??_time_set
  1688  0EAF  3000               	movlw	0
  1689  0EB0  1803               	skipnc
  1690  0EB1  3001               	movlw	1
  1691  0EB2  0725               	addwf	time_set@now+1,w
  1692  0EB3  01AA               	clrf	??_time_set+2
  1693  0EB4  1803               	skipnc
  1694  0EB5  0AAA               	incf	??_time_set+2,f
  1695  0EB6  0756               	addwf	_sync_interval+1,w
  1696  0EB7  00A9               	movwf	??_time_set+1
  1697  0EB8  1803               	skipnc
  1698  0EB9  0AAA               	incf	??_time_set+2,f
  1699  0EBA  0826               	movf	time_set@now+2,w
  1700  0EBB  072A               	addwf	??_time_set+2,w
  1701  0EBC  01AB               	clrf	??_time_set+3
  1702  0EBD  1803               	skipnc
  1703  0EBE  0AAB               	incf	??_time_set+3,f
  1704  0EBF  0757               	addwf	_sync_interval+2,w
  1705  0EC0  00AA               	movwf	??_time_set+2
  1706  0EC1  1803               	skipnc
  1707  0EC2  0AAB               	incf	??_time_set+3,f
  1708  0EC3  0827               	movf	time_set@now+3,w
  1709  0EC4  072B               	addwf	??_time_set+3,w
  1710  0EC5  0758               	addwf	_sync_interval+3,w
  1711  0EC6  00AB               	movwf	??_time_set+3
  1712  0EC7  082B               	movf	??_time_set+3,w
  1713  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  1714  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  1715  0ECA  00C5               	movwf	(_sync_next+3)^(0+128)
  1716  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0ECD  082A               	movf	??_time_set+2,w
  1719  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  1721  0ED0  00C4               	movwf	(_sync_next+2)^(0+128)
  1722  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  1723  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  1724  0ED3  0829               	movf	??_time_set+1,w
  1725  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0ED6  00C3               	movwf	(_sync_next+1)^(0+128)
  1728  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0ED9  0828               	movf	??_time_set,w
  1731  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  1732  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  1733  0EDC  00C2               	movwf	_sync_next^(0+128)
  1734                           
  1735                           ;TimeLib.c: 70: enTimeCurrentStatus = E_TIME_OK;
  1736  0EDD  3002               	movlw	2
  1737  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0EE0  00A8               	movwf	??_time_set
  1740  0EE1  0828               	movf	??_time_set,w
  1741  0EE2  1683               	bsf	3,5	;RP0=1, select bank1
  1742  0EE3  1303               	bcf	3,6	;RP1=0, select bank1
  1743  0EE4  00C6               	movwf	_enTimeCurrentStatus^(0+128)
  1744                           
  1745                           ;TimeLib.c: 71: last_update = tick_get();
  1746  0EE5  158A  24DE         	fcall	_tick_get
  1747  0EE7  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0EE8  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0EE9  0823               	movf	?_tick_get+3,w
  1750  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  1751  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  1752  0EEC  00C1               	movwf	(_last_update+3)^(0+128)
  1753  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  1755  0EEF  0822               	movf	?_tick_get+2,w
  1756  0EF0  1683               	bsf	3,5	;RP0=1, select bank1
  1757  0EF1  1303               	bcf	3,6	;RP1=0, select bank1
  1758  0EF2  00C0               	movwf	(_last_update+2)^(0+128)
  1759  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  1760  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  1761  0EF5  0821               	movf	?_tick_get+1,w
  1762  0EF6  1683               	bsf	3,5	;RP0=1, select bank1
  1763  0EF7  1303               	bcf	3,6	;RP1=0, select bank1
  1764  0EF8  00BF               	movwf	(_last_update+1)^(0+128)
  1765  0EF9  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0EFA  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0EFB  0820               	movf	?_tick_get,w
  1768  0EFC  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0EFD  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0EFE  00BE               	movwf	_last_update^(0+128)
  1771  0EFF  0008               	return
  1772  0F00                     __end_of_time_set:	
  1773                           
  1774                           	psect	text4
  1775  0CDE                     __ptext4:	
  1776 ;; *************** function _tick_get *****************
  1777 ;; Defined at:
  1778 ;;		line 44 in file "../Tick/Tick-PIC16.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  4    0[BANK0 ] unsigned long 
  1785 ;; Registers used:
  1786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       4       0       0       0
  1793 ;;      Locals:         0       0       0       0       0
  1794 ;;      Temps:          0       0       0       0       0
  1795 ;;      Totals:         0       4       0       0       0
  1796 ;;Total ram usage:        4 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    3
  1799 ;; This function calls:
  1800 ;;		_tick_read_internal
  1801 ;; This function is called by:
  1802 ;;		_main
  1803 ;;		_time_set
  1804 ;;		_time_get
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _tick_get
  1810  0CDE                     _tick_get:	
  1811                           
  1812                           ;Tick-PIC16.c: 46: tick_read_internal();
  1813                           
  1814                           ;incstack = 0
  1815                           ; Regs used in _tick_get: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1816  0CDE  158A  2543         	fcall	_tick_read_internal
  1817                           
  1818                           ;Tick-PIC16.c: 47: return *((uint32_t *) & tickbuffer[0]);
  1819  0CE0  30C7               	movlw	low _tickbuffer
  1820  0CE1  0084               	movwf	4
  1821  0CE2  1383               	bcf	3,7	;select IRP bank1
  1822  0CE3  0800               	movf	0,w
  1823  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0CE6  00A0               	movwf	?_tick_get
  1826  0CE7  0A84               	incf	4,f
  1827  0CE8  0800               	movf	0,w
  1828  0CE9  00A1               	movwf	?_tick_get+1
  1829  0CEA  0A84               	incf	4,f
  1830  0CEB  0800               	movf	0,w
  1831  0CEC  00A2               	movwf	?_tick_get+2
  1832  0CED  0A84               	incf	4,f
  1833  0CEE  0800               	movf	0,w
  1834  0CEF  00A3               	movwf	?_tick_get+3
  1835  0CF0  0008               	return
  1836  0CF1                     __end_of_tick_get:	
  1837                           
  1838                           	psect	text5
  1839  0D43                     __ptext5:	
  1840 ;; *************** function _tick_read_internal *****************
  1841 ;; Defined at:
  1842 ;;		line 58 in file "../Tick/Tick-PIC16.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;		None               void
  1849 ;; Registers used:
  1850 ;;		wreg
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0
  1858 ;;      Temps:          1       0       0       0       0
  1859 ;;      Totals:         1       0       0       0       0
  1860 ;;Total ram usage:        1 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    2
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_tick_get
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function _tick_read_internal
  1872  0D43                     _tick_read_internal:	
  1873  0D43                     l161:	
  1874                           ;incstack = 0
  1875                           ; Regs used in _tick_read_internal: [wreg]
  1876                           ;Tick-PIC16.c: 60: do {
  1877                           
  1878                           
  1879                           ;Tick-PIC16.c: 61: PIE1bits.TMR1IE = 1;
  1880  0D43  1683               	bsf	3,5	;RP0=1, select bank1
  1881  0D44  1303               	bcf	3,6	;RP1=0, select bank1
  1882  0D45  140C               	bsf	12,0	;volatile
  1883  0D46  0000               	nop	;# 
  1884                           
  1885                           ;Tick-PIC16.c: 63: PIE1bits.TMR1IE = 0;
  1886  0D47  1683               	bsf	3,5	;RP0=1, select bank1
  1887  0D48  1303               	bcf	3,6	;RP1=0, select bank1
  1888  0D49  100C               	bcf	12,0	;volatile
  1889                           
  1890                           ;Tick-PIC16.c: 65: tickbuffer[0] = TMR1L;
  1891  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0D4C  080E               	movf	14,w	;volatile
  1894  0D4D  00F4               	movwf	??_tick_read_internal
  1895  0D4E  0874               	movf	??_tick_read_internal,w
  1896  0D4F  1683               	bsf	3,5	;RP0=1, select bank1
  1897  0D50  1303               	bcf	3,6	;RP1=0, select bank1
  1898  0D51  00C7               	movwf	_tickbuffer^(0+128)
  1899                           
  1900                           ;Tick-PIC16.c: 66: tickbuffer[1] = TMR1H;
  1901  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0D54  080F               	movf	15,w	;volatile
  1904  0D55  00F4               	movwf	??_tick_read_internal
  1905  0D56  0874               	movf	??_tick_read_internal,w
  1906  0D57  1683               	bsf	3,5	;RP0=1, select bank1
  1907  0D58  1303               	bcf	3,6	;RP1=0, select bank1
  1908  0D59  00C8               	movwf	(_tickbuffer^(0+128)+1)
  1909                           
  1910                           ;Tick-PIC16.c: 68: *((uint32_t*) & tickbuffer[2]) = tickcnt;
  1911  0D5A  0879               	movf	_tickcnt+3,w	;volatile
  1912  0D5B  00CC               	movwf	((_tickbuffer+3)^(0+128)+2)
  1913  0D5C  0878               	movf	_tickcnt+2,w	;volatile
  1914  0D5D  00CB               	movwf	((_tickbuffer+2)^(0+128)+2)
  1915  0D5E  0877               	movf	_tickcnt+1,w	;volatile
  1916  0D5F  00CA               	movwf	((_tickbuffer+1)^(0+128)+2)
  1917  0D60  0876               	movf	_tickcnt,w	;volatile
  1918  0D61  00C9               	movwf	(_tickbuffer^(0+128)+2)
  1919                           
  1920                           ;Tick-PIC16.c: 69: } while (PIR1bits.TMR1IF);
  1921  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0D64  180C               	btfsc	12,0	;volatile
  1924  0D65  2D43               	goto	l161
  1925                           
  1926                           ;Tick-PIC16.c: 70: PIE1bits.TMR1IE = 1;
  1927  0D66  1683               	bsf	3,5	;RP0=1, select bank1
  1928  0D67  1303               	bcf	3,6	;RP1=0, select bank1
  1929  0D68  140C               	bsf	12,0	;volatile
  1930  0D69  0008               	return
  1931  0D6A                     __end_of_tick_read_internal:	
  1932                           
  1933                           	psect	text6
  1934  0D05                     __ptext6:	
  1935 ;; *************** function _time_provider *****************
  1936 ;; Defined at:
  1937 ;;		line 89 in file "main.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  4    0[BANK0 ] long 
  1944 ;; Registers used:
  1945 ;;		wreg
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1951 ;;      Params:         0       4       0       0       0
  1952 ;;      Locals:         0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0
  1954 ;;      Totals:         0       4       0       0       0
  1955 ;;Total ram usage:        4 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    2
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;;		_time_get
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           
  1967                           ;psect for function _time_provider
  1968  0D05                     _time_provider:	
  1969                           
  1970                           ;main.c: 95: return initialt;
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _time_provider: [wreg]
  1974  0D05  1683               	bsf	3,5	;RP0=1, select bank1
  1975  0D06  1303               	bcf	3,6	;RP1=0, select bank1
  1976  0D07  083D               	movf	(_initialt+3)^(0+128),w
  1977  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0D0A  00A3               	movwf	?_time_provider+3
  1980  0D0B  1683               	bsf	3,5	;RP0=1, select bank1
  1981  0D0C  1303               	bcf	3,6	;RP1=0, select bank1
  1982  0D0D  083C               	movf	(_initialt+2)^(0+128),w
  1983  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0D10  00A2               	movwf	?_time_provider+2
  1986  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  1987  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  1988  0D13  083B               	movf	(_initialt+1)^(0+128),w
  1989  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0D16  00A1               	movwf	?_time_provider+1
  1992  0D17  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0D18  1303               	bcf	3,6	;RP1=0, select bank1
  1994  0D19  083A               	movf	_initialt^(0+128),w
  1995  0D1A  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0D1B  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0D1C  00A0               	movwf	?_time_provider
  1998  0D1D  0008               	return
  1999  0D1E                     __end_of_time_provider:	
  2000                           
  2001                           	psect	text7
  2002  032D                     __ptext7:	
  2003 ;; *************** function _time_make *****************
  2004 ;; Defined at:
  2005 ;;		line 105 in file "../TimeLib.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  timeinfo        1    wreg     PTR struct tm
  2008 ;;		 -> main@tinfo(18), 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  timeinfo        1   33[BANK0 ] PTR struct tm
  2011 ;;		 -> main@tinfo(18), 
  2012 ;;  tstamp          4   27[BANK0 ] unsigned long 
  2013 ;;  i               2   31[BANK0 ] int 
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  4   17[BANK0 ] long 
  2016 ;; Registers used:
  2017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2023 ;;      Params:         0       4       0       0       0
  2024 ;;      Locals:         0       7       0       0       0
  2025 ;;      Temps:          0       6       0       0       0
  2026 ;;      Totals:         0      17       0       0       0
  2027 ;;Total ram usage:       17 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    4
  2030 ;; This function calls:
  2031 ;;		___lmul
  2032 ;;		_time_is_leap
  2033 ;; This function is called by:
  2034 ;;		_main
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function _time_make
  2040  032D                     _time_make:	
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _time_make: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2044                           ;time_make@timeinfo stored from wreg
  2045  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2046  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2047  032F  00C1               	movwf	time_make@timeinfo
  2048                           
  2049                           ;TimeLib.c: 107: int i;
  2050                           ;TimeLib.c: 108: uint32_t tstamp;
  2051                           ;TimeLib.c: 112: tstamp = timeinfo->tm_year * ((86400UL) * 365);
  2052  0330  0841               	movf	time_make@timeinfo,w
  2053  0331  3E0A               	addlw	10
  2054  0332  0084               	movwf	4
  2055  0333  1383               	bcf	3,7	;select IRP bank0
  2056  0334  0800               	movf	0,w
  2057  0335  00B5               	movwf	??_time_make
  2058  0336  0A84               	incf	4,f
  2059  0337  0800               	movf	0,w
  2060  0338  00B6               	movwf	??_time_make+1
  2061  0339  0835               	movf	??_time_make,w
  2062  033A  00A0               	movwf	___lmul@multiplier
  2063  033B  0836               	movf	??_time_make+1,w
  2064  033C  00A1               	movwf	___lmul@multiplier+1
  2065  033D  3000               	movlw	0
  2066  033E  1BA1               	btfsc	___lmul@multiplier+1,7
  2067  033F  30FF               	movlw	255
  2068  0340  00A2               	movwf	___lmul@multiplier+2
  2069  0341  00A3               	movwf	___lmul@multiplier+3
  2070  0342  3001               	movlw	1
  2071  0343  00A7               	movwf	___lmul@multiplicand+3
  2072  0344  30E1               	movlw	225
  2073  0345  00A6               	movwf	___lmul@multiplicand+2
  2074  0346  3033               	movlw	51
  2075  0347  00A5               	movwf	___lmul@multiplicand+1
  2076  0348  3080               	movlw	128
  2077  0349  00A4               	movwf	___lmul@multiplicand
  2078  034A  118A  27BD  118A   	fcall	___lmul
  2079  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2080  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2081  034F  0823               	movf	?___lmul+3,w
  2082  0350  00BE               	movwf	time_make@tstamp+3
  2083  0351  0822               	movf	?___lmul+2,w
  2084  0352  00BD               	movwf	time_make@tstamp+2
  2085  0353  0821               	movf	?___lmul+1,w
  2086  0354  00BC               	movwf	time_make@tstamp+1
  2087  0355  0820               	movf	?___lmul,w
  2088  0356  00BB               	movwf	time_make@tstamp
  2089                           
  2090                           ;TimeLib.c: 114: for (i = 0; i < timeinfo->tm_year; i++) {
  2091  0357  01BF               	clrf	time_make@i
  2092  0358  01C0               	clrf	time_make@i+1
  2093  0359                     l1804:	
  2094  0359  0841               	movf	time_make@timeinfo,w
  2095  035A  3E0A               	addlw	10
  2096  035B  0084               	movwf	4
  2097  035C  1383               	bcf	3,7	;select IRP bank0
  2098  035D  0800               	movf	0,w
  2099  035E  00B5               	movwf	??_time_make
  2100  035F  0A84               	incf	4,f
  2101  0360  0800               	movf	0,w
  2102  0361  00B6               	movwf	??_time_make+1
  2103  0362  0840               	movf	time_make@i+1,w
  2104  0363  3A80               	xorlw	128
  2105  0364  00B7               	movwf	??_time_make+2
  2106  0365  0836               	movf	??_time_make+1,w
  2107  0366  3A80               	xorlw	128
  2108  0367  0237               	subwf	??_time_make+2,w
  2109  0368  1D03               	skipz
  2110  0369  2B6C               	goto	u2345
  2111  036A  0835               	movf	??_time_make,w
  2112  036B  023F               	subwf	time_make@i,w
  2113  036C                     u2345:	
  2114  036C  1803               	btfsc	3,0
  2115  036D  2B96               	goto	l1806
  2116                           
  2117                           ;TimeLib.c: 115: if (time_is_leap(i + 1970))
  2118  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2119  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2120  0370  083F               	movf	time_make@i,w
  2121  0371  3EB2               	addlw	178
  2122  0372  00AC               	movwf	time_is_leap@year
  2123  0373  0840               	movf	time_make@i+1,w
  2124  0374  1803               	skipnc
  2125  0375  3E01               	addlw	1
  2126  0376  3E07               	addlw	7
  2127  0377  00AD               	movwf	time_is_leap@year+1
  2128  0378  158A  25D9  118A   	fcall	_time_is_leap
  2129  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2130  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2131  037D  082D               	movf	?_time_is_leap+1,w
  2132  037E  042C               	iorwf	?_time_is_leap,w
  2133  037F  1903               	skipnz
  2134  0380  2B8F               	goto	l93
  2135                           
  2136                           ;TimeLib.c: 116: tstamp += (86400UL);
  2137  0381  3080               	movlw	128
  2138  0382  07BB               	addwf	time_make@tstamp,f
  2139  0383  3051               	movlw	81
  2140  0384  1803               	skipnc
  2141  0385  3052               	movlw	82
  2142  0386  07BC               	addwf	time_make@tstamp+1,f
  2143  0387  3001               	movlw	1
  2144  0388  1803               	skipnc
  2145  0389  3002               	movlw	2
  2146  038A  07BD               	addwf	time_make@tstamp+2,f
  2147  038B  3000               	movlw	0
  2148  038C  1803               	skipnc
  2149  038D  3001               	movlw	1
  2150  038E  07BE               	addwf	time_make@tstamp+3,f
  2151  038F                     l93:	
  2152  038F  3001               	movlw	1
  2153  0390  07BF               	addwf	time_make@i,f
  2154  0391  1803               	skipnc
  2155  0392  0AC0               	incf	time_make@i+1,f
  2156  0393  3000               	movlw	0
  2157  0394  07C0               	addwf	time_make@i+1,f
  2158  0395  2B59               	goto	l1804
  2159  0396                     l1806:	
  2160                           
  2161                           ;TimeLib.c: 117: }
  2162                           ;TimeLib.c: 119: for (i = 1; i < timeinfo->tm_mon; i++) {
  2163  0396  3001               	movlw	1
  2164  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0399  00BF               	movwf	time_make@i
  2167  039A  3000               	movlw	0
  2168  039B  00C0               	movwf	time_make@i+1
  2169  039C                     l1818:	
  2170  039C  0841               	movf	time_make@timeinfo,w
  2171  039D  3E08               	addlw	8
  2172  039E  0084               	movwf	4
  2173  039F  1383               	bcf	3,7	;select IRP bank0
  2174  03A0  0800               	movf	0,w
  2175  03A1  00B5               	movwf	??_time_make
  2176  03A2  0A84               	incf	4,f
  2177  03A3  0800               	movf	0,w
  2178  03A4  00B6               	movwf	??_time_make+1
  2179  03A5  0840               	movf	time_make@i+1,w
  2180  03A6  3A80               	xorlw	128
  2181  03A7  00B7               	movwf	??_time_make+2
  2182  03A8  0836               	movf	??_time_make+1,w
  2183  03A9  3A80               	xorlw	128
  2184  03AA  0237               	subwf	??_time_make+2,w
  2185  03AB  1D03               	skipz
  2186  03AC  2BAF               	goto	u2385
  2187  03AD  0835               	movf	??_time_make,w
  2188  03AE  023F               	subwf	time_make@i,w
  2189  03AF                     u2385:	
  2190  03AF  1803               	btfsc	3,0
  2191  03B0  2C1B               	goto	l1820
  2192                           
  2193                           ;TimeLib.c: 120: if (i == 2 && time_is_leap(timeinfo->tm_year + 1970))
  2194  03B1  3002               	movlw	2
  2195  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2196  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2197  03B4  063F               	xorwf	time_make@i,w
  2198  03B5  0440               	iorwf	time_make@i+1,w
  2199  03B6  1D03               	skipz
  2200  03B7  2BE0               	goto	l1814
  2201  03B8  0841               	movf	time_make@timeinfo,w
  2202  03B9  3E0A               	addlw	10
  2203  03BA  0084               	movwf	4
  2204  03BB  1383               	bcf	3,7	;select IRP bank0
  2205  03BC  0800               	movf	0,w
  2206  03BD  00B5               	movwf	??_time_make
  2207  03BE  0A84               	incf	4,f
  2208  03BF  0800               	movf	0,w
  2209  03C0  00B6               	movwf	??_time_make+1
  2210  03C1  0835               	movf	??_time_make,w
  2211  03C2  3EB2               	addlw	178
  2212  03C3  00AC               	movwf	time_is_leap@year
  2213  03C4  0836               	movf	??_time_make+1,w
  2214  03C5  1803               	skipnc
  2215  03C6  3E01               	addlw	1
  2216  03C7  3E07               	addlw	7
  2217  03C8  00AD               	movwf	time_is_leap@year+1
  2218  03C9  158A  25D9  118A   	fcall	_time_is_leap
  2219  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2220  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2221  03CE  082D               	movf	?_time_is_leap+1,w
  2222  03CF  042C               	iorwf	?_time_is_leap,w
  2223  03D0  1903               	skipnz
  2224  03D1  2BE0               	goto	l1814
  2225                           
  2226                           ;TimeLib.c: 121: tstamp += (86400UL) * 29;
  2227  03D2  3080               	movlw	128
  2228  03D3  07BB               	addwf	time_make@tstamp,f
  2229  03D4  303B               	movlw	59
  2230  03D5  1803               	skipnc
  2231  03D6  303C               	movlw	60
  2232  03D7  07BC               	addwf	time_make@tstamp+1,f
  2233  03D8  3026               	movlw	38
  2234  03D9  1803               	skipnc
  2235  03DA  3027               	movlw	39
  2236  03DB  07BD               	addwf	time_make@tstamp+2,f
  2237  03DC  3000               	movlw	0
  2238  03DD  1803               	skipnc
  2239  03DE  3001               	movlw	1
  2240  03DF  2C13               	goto	L5
  2241  03E0                     l1814:	
  2242                           
  2243                           ;TimeLib.c: 122: else
  2244                           ;TimeLib.c: 123: tstamp += (86400UL) * month_length[i - 1];
  2245  03E0  083F               	movf	time_make@i,w
  2246  03E1  3EFF               	addlw	255
  2247  03E2  3E01               	addlw	low (_month_length-__stringbase)
  2248  03E3  0084               	movwf	4
  2249  03E4  118A  2094  118A   	fcall	stringdir
  2250  03E7  00B5               	movwf	??_time_make
  2251  03E8  01B6               	clrf	??_time_make+1
  2252  03E9  01B7               	clrf	??_time_make+2
  2253  03EA  01B8               	clrf	??_time_make+3
  2254  03EB  0838               	movf	??_time_make+3,w
  2255  03EC  00A3               	movwf	___lmul@multiplier+3
  2256  03ED  0837               	movf	??_time_make+2,w
  2257  03EE  00A2               	movwf	___lmul@multiplier+2
  2258  03EF  0836               	movf	??_time_make+1,w
  2259  03F0  00A1               	movwf	___lmul@multiplier+1
  2260  03F1  0835               	movf	??_time_make,w
  2261  03F2  00A0               	movwf	___lmul@multiplier
  2262  03F3  3000               	movlw	0
  2263  03F4  00A7               	movwf	___lmul@multiplicand+3
  2264  03F5  3001               	movlw	1
  2265  03F6  00A6               	movwf	___lmul@multiplicand+2
  2266  03F7  3051               	movlw	81
  2267  03F8  00A5               	movwf	___lmul@multiplicand+1
  2268  03F9  3080               	movlw	128
  2269  03FA  00A4               	movwf	___lmul@multiplicand
  2270  03FB  118A  27BD  118A   	fcall	___lmul
  2271  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2272  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2273  0400  0820               	movf	?___lmul,w
  2274  0401  07BB               	addwf	time_make@tstamp,f
  2275  0402  0821               	movf	?___lmul+1,w
  2276  0403  1103               	clrz
  2277  0404  1803               	skipnc
  2278  0405  3E01               	addlw	1
  2279  0406  1D03               	btfss	3,2
  2280  0407  07BC               	addwf	time_make@tstamp+1,f
  2281  0408  0822               	movf	?___lmul+2,w
  2282  0409  1103               	clrz
  2283  040A  1803               	skipnc
  2284  040B  3E01               	addlw	1
  2285  040C  1D03               	btfss	3,2
  2286  040D  07BD               	addwf	time_make@tstamp+2,f
  2287  040E  0823               	movf	?___lmul+3,w
  2288  040F  1103               	clrz
  2289  0410  1803               	skipnc
  2290  0411  3E01               	addlw	1
  2291  0412  1D03               	btfss	3,2
  2292  0413                     L5:	
  2293  0413  07BE               	addwf	time_make@tstamp+3,f
  2294  0414  3001               	movlw	1
  2295  0415  07BF               	addwf	time_make@i,f
  2296  0416  1803               	skipnc
  2297  0417  0AC0               	incf	time_make@i+1,f
  2298  0418  3000               	movlw	0
  2299  0419  07C0               	addwf	time_make@i+1,f
  2300  041A  2B9C               	goto	l1818
  2301  041B                     l1820:	
  2302                           
  2303                           ;TimeLib.c: 124: }
  2304                           ;TimeLib.c: 126: tstamp += (uint32_t) (timeinfo->tm_mday - 1) * (uint32_t) (86400UL);
  2305  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2306  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2307  041D  0841               	movf	time_make@timeinfo,w
  2308  041E  3E06               	addlw	6
  2309  041F  0084               	movwf	4
  2310  0420  1383               	bcf	3,7	;select IRP bank0
  2311  0421  0800               	movf	0,w
  2312  0422  00B5               	movwf	??_time_make
  2313  0423  0A84               	incf	4,f
  2314  0424  0800               	movf	0,w
  2315  0425  00B6               	movwf	??_time_make+1
  2316  0426  0835               	movf	??_time_make,w
  2317  0427  3EFF               	addlw	255
  2318  0428  00A0               	movwf	___lmul@multiplier
  2319  0429  0836               	movf	??_time_make+1,w
  2320  042A  1803               	skipnc
  2321  042B  3E01               	addlw	1
  2322  042C  3EFF               	addlw	255
  2323  042D  00A1               	movwf	___lmul@multiplier+1
  2324  042E  01A2               	clrf	___lmul@multiplier+2
  2325  042F  1BA1               	btfsc	___lmul@multiplier+1,7
  2326  0430  03A2               	decf	___lmul@multiplier+2,f
  2327  0431  0822               	movf	___lmul@multiplier+2,w
  2328  0432  00A3               	movwf	___lmul@multiplier+3
  2329  0433  3000               	movlw	0
  2330  0434  00A7               	movwf	___lmul@multiplicand+3
  2331  0435  3001               	movlw	1
  2332  0436  00A6               	movwf	___lmul@multiplicand+2
  2333  0437  3051               	movlw	81
  2334  0438  00A5               	movwf	___lmul@multiplicand+1
  2335  0439  3080               	movlw	128
  2336  043A  00A4               	movwf	___lmul@multiplicand
  2337  043B  118A  27BD  118A   	fcall	___lmul
  2338  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2339  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0440  0820               	movf	?___lmul,w
  2341  0441  07BB               	addwf	time_make@tstamp,f
  2342  0442  0821               	movf	?___lmul+1,w
  2343  0443  1103               	clrz
  2344  0444  1803               	skipnc
  2345  0445  3E01               	addlw	1
  2346  0446  1D03               	btfss	3,2
  2347  0447  07BC               	addwf	time_make@tstamp+1,f
  2348  0448  0822               	movf	?___lmul+2,w
  2349  0449  1103               	clrz
  2350  044A  1803               	skipnc
  2351  044B  3E01               	addlw	1
  2352  044C  1D03               	btfss	3,2
  2353  044D  07BD               	addwf	time_make@tstamp+2,f
  2354  044E  0823               	movf	?___lmul+3,w
  2355  044F  1103               	clrz
  2356  0450  1803               	skipnc
  2357  0451  3E01               	addlw	1
  2358  0452  1D03               	btfss	3,2
  2359  0453  07BE               	addwf	time_make@tstamp+3,f
  2360                           
  2361                           ;TimeLib.c: 128: tstamp += (uint32_t) timeinfo->tm_hour * (uint32_t) (3600UL);
  2362  0454  0841               	movf	time_make@timeinfo,w
  2363  0455  3E04               	addlw	4
  2364  0456  0084               	movwf	4
  2365  0457  1383               	bcf	3,7	;select IRP bank0
  2366  0458  0800               	movf	0,w
  2367  0459  00B5               	movwf	??_time_make
  2368  045A  0A84               	incf	4,f
  2369  045B  0800               	movf	0,w
  2370  045C  00B6               	movwf	??_time_make+1
  2371  045D  0835               	movf	??_time_make,w
  2372  045E  00A0               	movwf	___lmul@multiplier
  2373  045F  0836               	movf	??_time_make+1,w
  2374  0460  00A1               	movwf	___lmul@multiplier+1
  2375  0461  3000               	movlw	0
  2376  0462  1BA1               	btfsc	___lmul@multiplier+1,7
  2377  0463  30FF               	movlw	255
  2378  0464  00A2               	movwf	___lmul@multiplier+2
  2379  0465  00A3               	movwf	___lmul@multiplier+3
  2380  0466  3000               	movlw	0
  2381  0467  00A7               	movwf	___lmul@multiplicand+3
  2382  0468  3000               	movlw	0
  2383  0469  00A6               	movwf	___lmul@multiplicand+2
  2384  046A  300E               	movlw	14
  2385  046B  00A5               	movwf	___lmul@multiplicand+1
  2386  046C  3010               	movlw	16
  2387  046D  00A4               	movwf	___lmul@multiplicand
  2388  046E  118A  27BD  118A   	fcall	___lmul
  2389  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0473  0820               	movf	?___lmul,w
  2392  0474  07BB               	addwf	time_make@tstamp,f
  2393  0475  0821               	movf	?___lmul+1,w
  2394  0476  1103               	clrz
  2395  0477  1803               	skipnc
  2396  0478  3E01               	addlw	1
  2397  0479  1D03               	btfss	3,2
  2398  047A  07BC               	addwf	time_make@tstamp+1,f
  2399  047B  0822               	movf	?___lmul+2,w
  2400  047C  1103               	clrz
  2401  047D  1803               	skipnc
  2402  047E  3E01               	addlw	1
  2403  047F  1D03               	btfss	3,2
  2404  0480  07BD               	addwf	time_make@tstamp+2,f
  2405  0481  0823               	movf	?___lmul+3,w
  2406  0482  1103               	clrz
  2407  0483  1803               	skipnc
  2408  0484  3E01               	addlw	1
  2409  0485  1D03               	btfss	3,2
  2410  0486  07BE               	addwf	time_make@tstamp+3,f
  2411                           
  2412                           ;TimeLib.c: 129: tstamp += (uint32_t) timeinfo->tm_min * (uint32_t) (60UL);
  2413  0487  0841               	movf	time_make@timeinfo,w
  2414  0488  3E02               	addlw	2
  2415  0489  0084               	movwf	4
  2416  048A  1383               	bcf	3,7	;select IRP bank0
  2417  048B  0800               	movf	0,w
  2418  048C  00B5               	movwf	??_time_make
  2419  048D  0A84               	incf	4,f
  2420  048E  0800               	movf	0,w
  2421  048F  00B6               	movwf	??_time_make+1
  2422  0490  0835               	movf	??_time_make,w
  2423  0491  00A0               	movwf	___lmul@multiplier
  2424  0492  0836               	movf	??_time_make+1,w
  2425  0493  00A1               	movwf	___lmul@multiplier+1
  2426  0494  3000               	movlw	0
  2427  0495  1BA1               	btfsc	___lmul@multiplier+1,7
  2428  0496  30FF               	movlw	255
  2429  0497  00A2               	movwf	___lmul@multiplier+2
  2430  0498  00A3               	movwf	___lmul@multiplier+3
  2431  0499  3000               	movlw	0
  2432  049A  00A7               	movwf	___lmul@multiplicand+3
  2433  049B  3000               	movlw	0
  2434  049C  00A6               	movwf	___lmul@multiplicand+2
  2435  049D  3000               	movlw	0
  2436  049E  00A5               	movwf	___lmul@multiplicand+1
  2437  049F  303C               	movlw	60
  2438  04A0  00A4               	movwf	___lmul@multiplicand
  2439  04A1  118A  27BD  118A   	fcall	___lmul
  2440  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2441  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2442  04A6  0820               	movf	?___lmul,w
  2443  04A7  07BB               	addwf	time_make@tstamp,f
  2444  04A8  0821               	movf	?___lmul+1,w
  2445  04A9  1103               	clrz
  2446  04AA  1803               	skipnc
  2447  04AB  3E01               	addlw	1
  2448  04AC  1D03               	btfss	3,2
  2449  04AD  07BC               	addwf	time_make@tstamp+1,f
  2450  04AE  0822               	movf	?___lmul+2,w
  2451  04AF  1103               	clrz
  2452  04B0  1803               	skipnc
  2453  04B1  3E01               	addlw	1
  2454  04B2  1D03               	btfss	3,2
  2455  04B3  07BD               	addwf	time_make@tstamp+2,f
  2456  04B4  0823               	movf	?___lmul+3,w
  2457  04B5  1103               	clrz
  2458  04B6  1803               	skipnc
  2459  04B7  3E01               	addlw	1
  2460  04B8  1D03               	btfss	3,2
  2461  04B9  07BE               	addwf	time_make@tstamp+3,f
  2462                           
  2463                           ;TimeLib.c: 130: tstamp += (uint32_t) timeinfo->tm_sec;
  2464  04BA  0841               	movf	time_make@timeinfo,w
  2465  04BB  0084               	movwf	4
  2466  04BC  1383               	bcf	3,7	;select IRP bank0
  2467  04BD  0800               	movf	0,w
  2468  04BE  00B5               	movwf	??_time_make
  2469  04BF  0A84               	incf	4,f
  2470  04C0  0800               	movf	0,w
  2471  04C1  00B6               	movwf	??_time_make+1
  2472  04C2  0835               	movf	??_time_make,w
  2473  04C3  00B7               	movwf	??_time_make+2
  2474  04C4  0836               	movf	??_time_make+1,w
  2475  04C5  00B8               	movwf	??_time_make+3
  2476  04C6  3000               	movlw	0
  2477  04C7  1BB8               	btfsc	??_time_make+3,7
  2478  04C8  30FF               	movlw	255
  2479  04C9  00B9               	movwf	??_time_make+4
  2480  04CA  00BA               	movwf	??_time_make+5
  2481  04CB  0837               	movf	??_time_make+2,w
  2482  04CC  07BB               	addwf	time_make@tstamp,f
  2483  04CD  0838               	movf	??_time_make+3,w
  2484  04CE  1103               	clrz
  2485  04CF  1803               	skipnc
  2486  04D0  3E01               	addlw	1
  2487  04D1  1D03               	btfss	3,2
  2488  04D2  07BC               	addwf	time_make@tstamp+1,f
  2489  04D3  0839               	movf	??_time_make+4,w
  2490  04D4  1103               	clrz
  2491  04D5  1803               	skipnc
  2492  04D6  3E01               	addlw	1
  2493  04D7  1D03               	btfss	3,2
  2494  04D8  07BD               	addwf	time_make@tstamp+2,f
  2495  04D9  083A               	movf	??_time_make+5,w
  2496  04DA  1103               	clrz
  2497  04DB  1803               	skipnc
  2498  04DC  3E01               	addlw	1
  2499  04DD  1D03               	btfss	3,2
  2500  04DE  07BE               	addwf	time_make@tstamp+3,f
  2501                           
  2502                           ;TimeLib.c: 132: return tstamp;
  2503  04DF  083E               	movf	time_make@tstamp+3,w
  2504  04E0  00B4               	movwf	?_time_make+3
  2505  04E1  083D               	movf	time_make@tstamp+2,w
  2506  04E2  00B3               	movwf	?_time_make+2
  2507  04E3  083C               	movf	time_make@tstamp+1,w
  2508  04E4  00B2               	movwf	?_time_make+1
  2509  04E5  083B               	movf	time_make@tstamp,w
  2510  04E6  00B1               	movwf	?_time_make
  2511  04E7  0008               	return
  2512  04E8                     __end_of_time_make:	
  2513                           
  2514                           	psect	text8
  2515  07BD                     __ptext8:	
  2516 ;; *************** function ___lmul *****************
  2517 ;; Defined at:
  2518 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2521 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  product         4    8[BANK0 ] unsigned long 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  4    0[BANK0 ] unsigned long 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2533 ;;      Params:         0       8       0       0       0
  2534 ;;      Locals:         0       4       0       0       0
  2535 ;;      Temps:          1       0       0       0       0
  2536 ;;      Totals:         1      12       0       0       0
  2537 ;;Total ram usage:       13 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    2
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_time_make
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           
  2548                           ;psect for function ___lmul
  2549  07BD                     ___lmul:	
  2550                           
  2551                           ;incstack = 0
  2552                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2553  07BD  3000               	movlw	0
  2554  07BE  1283               	bcf	3,5	;RP0=0, select bank0
  2555  07BF  1303               	bcf	3,6	;RP1=0, select bank0
  2556  07C0  00AB               	movwf	___lmul@product+3
  2557  07C1  3000               	movlw	0
  2558  07C2  00AA               	movwf	___lmul@product+2
  2559  07C3  3000               	movlw	0
  2560  07C4  00A9               	movwf	___lmul@product+1
  2561  07C5  3000               	movlw	0
  2562  07C6  00A8               	movwf	___lmul@product
  2563  07C7                     l1702:	
  2564  07C7  1C20               	btfss	___lmul@multiplier,0
  2565  07C8  2FDD               	goto	l1706
  2566  07C9  0824               	movf	___lmul@multiplicand,w
  2567  07CA  07A8               	addwf	___lmul@product,f
  2568  07CB  0825               	movf	___lmul@multiplicand+1,w
  2569  07CC  1103               	clrz
  2570  07CD  1803               	skipnc
  2571  07CE  3E01               	addlw	1
  2572  07CF  1D03               	btfss	3,2
  2573  07D0  07A9               	addwf	___lmul@product+1,f
  2574  07D1  0826               	movf	___lmul@multiplicand+2,w
  2575  07D2  1103               	clrz
  2576  07D3  1803               	skipnc
  2577  07D4  3E01               	addlw	1
  2578  07D5  1D03               	btfss	3,2
  2579  07D6  07AA               	addwf	___lmul@product+2,f
  2580  07D7  0827               	movf	___lmul@multiplicand+3,w
  2581  07D8  1103               	clrz
  2582  07D9  1803               	skipnc
  2583  07DA  3E01               	addlw	1
  2584  07DB  1D03               	btfss	3,2
  2585  07DC  07AB               	addwf	___lmul@product+3,f
  2586  07DD                     l1706:	
  2587  07DD  3001               	movlw	1
  2588  07DE  00F4               	movwf	??___lmul
  2589  07DF                     u2105:	
  2590  07DF  1003               	clrc
  2591  07E0  0DA4               	rlf	___lmul@multiplicand,f
  2592  07E1  0DA5               	rlf	___lmul@multiplicand+1,f
  2593  07E2  0DA6               	rlf	___lmul@multiplicand+2,f
  2594  07E3  0DA7               	rlf	___lmul@multiplicand+3,f
  2595  07E4  0BF4               	decfsz	??___lmul,f
  2596  07E5  2FDF               	goto	u2105
  2597  07E6  3001               	movlw	1
  2598  07E7                     u2115:	
  2599  07E7  1003               	clrc
  2600  07E8  0CA3               	rrf	___lmul@multiplier+3,f
  2601  07E9  0CA2               	rrf	___lmul@multiplier+2,f
  2602  07EA  0CA1               	rrf	___lmul@multiplier+1,f
  2603  07EB  0CA0               	rrf	___lmul@multiplier,f
  2604  07EC  3EFF               	addlw	-1
  2605  07ED  1D03               	skipz
  2606  07EE  2FE7               	goto	u2115
  2607  07EF  0823               	movf	___lmul@multiplier+3,w
  2608  07F0  0422               	iorwf	___lmul@multiplier+2,w
  2609  07F1  0421               	iorwf	___lmul@multiplier+1,w
  2610  07F2  0420               	iorwf	___lmul@multiplier,w
  2611  07F3  1D03               	skipz
  2612  07F4  2FC7               	goto	l1702
  2613  07F5  082B               	movf	___lmul@product+3,w
  2614  07F6  00A3               	movwf	?___lmul+3
  2615  07F7  082A               	movf	___lmul@product+2,w
  2616  07F8  00A2               	movwf	?___lmul+2
  2617  07F9  0829               	movf	___lmul@product+1,w
  2618  07FA  00A1               	movwf	?___lmul+1
  2619  07FB  0828               	movf	___lmul@product,w
  2620  07FC  00A0               	movwf	?___lmul
  2621  07FD  0008               	return
  2622  07FE                     __end_of___lmul:	
  2623                           
  2624                           	psect	text9
  2625  0108                     __ptext9:	
  2626 ;; *************** function _time_break *****************
  2627 ;; Defined at:
  2628 ;;		line 135 in file "../TimeLib.c"
  2629 ;; Parameters:    Size  Location     Type
  2630 ;;  timeinput       4   17[BANK0 ] long 
  2631 ;;  timeinfo        1   21[BANK0 ] PTR struct tm
  2632 ;;		 -> main@tinfo(18), 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;  xTime           4   41[BANK0 ] unsigned long 
  2635 ;;  days            4   34[BANK0 ] unsigned long 
  2636 ;;  month           1   40[BANK0 ] unsigned char 
  2637 ;;  year            1   39[BANK0 ] unsigned char 
  2638 ;;  monthLength     1   38[BANK0 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;		None               void
  2641 ;; Registers used:
  2642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       5       0       0       0
  2649 ;;      Locals:         0      15       0       0       0
  2650 ;;      Temps:          0       8       0       0       0
  2651 ;;      Totals:         0      28       0       0       0
  2652 ;;Total ram usage:       28 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    4
  2655 ;; This function calls:
  2656 ;;		___lldiv
  2657 ;;		___llmod
  2658 ;;		_time_is_leap
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _time_break
  2666  0108                     _time_break:	
  2667                           
  2668                           ;TimeLib.c: 137: uint8_t year;
  2669                           ;TimeLib.c: 138: uint8_t month, monthLength;
  2670                           ;TimeLib.c: 139: uint32_t xTime;
  2671                           ;TimeLib.c: 140: unsigned long days;
  2672                           ;TimeLib.c: 142: xTime = (uint32_t) timeinput;
  2673                           
  2674                           ;incstack = 0
  2675                           ; Regs used in _time_break: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2676  0108  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0109  1303               	bcf	3,6	;RP1=0, select bank0
  2678  010A  0834               	movf	time_break@timeinput+3,w
  2679  010B  00CC               	movwf	time_break@xTime+3
  2680  010C  0833               	movf	time_break@timeinput+2,w
  2681  010D  00CB               	movwf	time_break@xTime+2
  2682  010E  0832               	movf	time_break@timeinput+1,w
  2683  010F  00CA               	movwf	time_break@xTime+1
  2684  0110  0831               	movf	time_break@timeinput,w
  2685  0111  00C9               	movwf	time_break@xTime
  2686                           
  2687                           ;TimeLib.c: 143: timeinfo->tm_sec = xTime % 60;
  2688  0112  3000               	movlw	0
  2689  0113  00A3               	movwf	___llmod@divisor+3
  2690  0114  3000               	movlw	0
  2691  0115  00A2               	movwf	___llmod@divisor+2
  2692  0116  3000               	movlw	0
  2693  0117  00A1               	movwf	___llmod@divisor+1
  2694  0118  303C               	movlw	60
  2695  0119  00A0               	movwf	___llmod@divisor
  2696  011A  084C               	movf	time_break@xTime+3,w
  2697  011B  00A7               	movwf	___llmod@dividend+3
  2698  011C  084B               	movf	time_break@xTime+2,w
  2699  011D  00A6               	movwf	___llmod@dividend+2
  2700  011E  084A               	movf	time_break@xTime+1,w
  2701  011F  00A5               	movwf	___llmod@dividend+1
  2702  0120  0849               	movf	time_break@xTime,w
  2703  0121  00A4               	movwf	___llmod@dividend
  2704  0122  158A  2654  118A   	fcall	___llmod
  2705  0125  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0126  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0127  0835               	movf	time_break@timeinfo,w
  2708  0128  0084               	movwf	4
  2709  0129  0820               	movf	?___llmod,w
  2710  012A  1383               	bcf	3,7	;select IRP bank0
  2711  012B  0080               	movwf	0
  2712  012C  0A84               	incf	4,f
  2713  012D  0821               	movf	?___llmod+1,w
  2714  012E  0080               	movwf	0
  2715                           
  2716                           ;TimeLib.c: 145: xTime /= 60;
  2717  012F  3000               	movlw	0
  2718  0130  00A3               	movwf	___lldiv@divisor+3
  2719  0131  3000               	movlw	0
  2720  0132  00A2               	movwf	___lldiv@divisor+2
  2721  0133  3000               	movlw	0
  2722  0134  00A1               	movwf	___lldiv@divisor+1
  2723  0135  303C               	movlw	60
  2724  0136  00A0               	movwf	___lldiv@divisor
  2725  0137  084C               	movf	time_break@xTime+3,w
  2726  0138  00A7               	movwf	___lldiv@dividend+3
  2727  0139  084B               	movf	time_break@xTime+2,w
  2728  013A  00A6               	movwf	___lldiv@dividend+2
  2729  013B  084A               	movf	time_break@xTime+1,w
  2730  013C  00A5               	movwf	___lldiv@dividend+1
  2731  013D  0849               	movf	time_break@xTime,w
  2732  013E  00A4               	movwf	___lldiv@dividend
  2733  013F  118A  2034  118A   	fcall	___lldiv
  2734  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2735  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2736  0144  0823               	movf	?___lldiv+3,w
  2737  0145  00CC               	movwf	time_break@xTime+3
  2738  0146  0822               	movf	?___lldiv+2,w
  2739  0147  00CB               	movwf	time_break@xTime+2
  2740  0148  0821               	movf	?___lldiv+1,w
  2741  0149  00CA               	movwf	time_break@xTime+1
  2742  014A  0820               	movf	?___lldiv,w
  2743  014B  00C9               	movwf	time_break@xTime
  2744                           
  2745                           ;TimeLib.c: 146: timeinfo->tm_min = xTime % 60;
  2746  014C  3000               	movlw	0
  2747  014D  00A3               	movwf	___llmod@divisor+3
  2748  014E  3000               	movlw	0
  2749  014F  00A2               	movwf	___llmod@divisor+2
  2750  0150  3000               	movlw	0
  2751  0151  00A1               	movwf	___llmod@divisor+1
  2752  0152  303C               	movlw	60
  2753  0153  00A0               	movwf	___llmod@divisor
  2754  0154  084C               	movf	time_break@xTime+3,w
  2755  0155  00A7               	movwf	___llmod@dividend+3
  2756  0156  084B               	movf	time_break@xTime+2,w
  2757  0157  00A6               	movwf	___llmod@dividend+2
  2758  0158  084A               	movf	time_break@xTime+1,w
  2759  0159  00A5               	movwf	___llmod@dividend+1
  2760  015A  0849               	movf	time_break@xTime,w
  2761  015B  00A4               	movwf	___llmod@dividend
  2762  015C  158A  2654  118A   	fcall	___llmod
  2763  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0160  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0161  0835               	movf	time_break@timeinfo,w
  2766  0162  3E02               	addlw	2
  2767  0163  0084               	movwf	4
  2768  0164  0820               	movf	?___llmod,w
  2769  0165  1383               	bcf	3,7	;select IRP bank0
  2770  0166  0080               	movwf	0
  2771  0167  0A84               	incf	4,f
  2772  0168  0821               	movf	?___llmod+1,w
  2773  0169  0080               	movwf	0
  2774                           
  2775                           ;TimeLib.c: 148: xTime /= 60;
  2776  016A  3000               	movlw	0
  2777  016B  00A3               	movwf	___lldiv@divisor+3
  2778  016C  3000               	movlw	0
  2779  016D  00A2               	movwf	___lldiv@divisor+2
  2780  016E  3000               	movlw	0
  2781  016F  00A1               	movwf	___lldiv@divisor+1
  2782  0170  303C               	movlw	60
  2783  0171  00A0               	movwf	___lldiv@divisor
  2784  0172  084C               	movf	time_break@xTime+3,w
  2785  0173  00A7               	movwf	___lldiv@dividend+3
  2786  0174  084B               	movf	time_break@xTime+2,w
  2787  0175  00A6               	movwf	___lldiv@dividend+2
  2788  0176  084A               	movf	time_break@xTime+1,w
  2789  0177  00A5               	movwf	___lldiv@dividend+1
  2790  0178  0849               	movf	time_break@xTime,w
  2791  0179  00A4               	movwf	___lldiv@dividend
  2792  017A  118A  2034  118A   	fcall	___lldiv
  2793  017D  1283               	bcf	3,5	;RP0=0, select bank0
  2794  017E  1303               	bcf	3,6	;RP1=0, select bank0
  2795  017F  0823               	movf	?___lldiv+3,w
  2796  0180  00CC               	movwf	time_break@xTime+3
  2797  0181  0822               	movf	?___lldiv+2,w
  2798  0182  00CB               	movwf	time_break@xTime+2
  2799  0183  0821               	movf	?___lldiv+1,w
  2800  0184  00CA               	movwf	time_break@xTime+1
  2801  0185  0820               	movf	?___lldiv,w
  2802  0186  00C9               	movwf	time_break@xTime
  2803                           
  2804                           ;TimeLib.c: 149: timeinfo->tm_hour = xTime % 24;
  2805  0187  3000               	movlw	0
  2806  0188  00A3               	movwf	___llmod@divisor+3
  2807  0189  3000               	movlw	0
  2808  018A  00A2               	movwf	___llmod@divisor+2
  2809  018B  3000               	movlw	0
  2810  018C  00A1               	movwf	___llmod@divisor+1
  2811  018D  3018               	movlw	24
  2812  018E  00A0               	movwf	___llmod@divisor
  2813  018F  084C               	movf	time_break@xTime+3,w
  2814  0190  00A7               	movwf	___llmod@dividend+3
  2815  0191  084B               	movf	time_break@xTime+2,w
  2816  0192  00A6               	movwf	___llmod@dividend+2
  2817  0193  084A               	movf	time_break@xTime+1,w
  2818  0194  00A5               	movwf	___llmod@dividend+1
  2819  0195  0849               	movf	time_break@xTime,w
  2820  0196  00A4               	movwf	___llmod@dividend
  2821  0197  158A  2654  118A   	fcall	___llmod
  2822  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2823  019B  1303               	bcf	3,6	;RP1=0, select bank0
  2824  019C  0835               	movf	time_break@timeinfo,w
  2825  019D  3E04               	addlw	4
  2826  019E  0084               	movwf	4
  2827  019F  0820               	movf	?___llmod,w
  2828  01A0  1383               	bcf	3,7	;select IRP bank0
  2829  01A1  0080               	movwf	0
  2830  01A2  0A84               	incf	4,f
  2831  01A3  0821               	movf	?___llmod+1,w
  2832  01A4  0080               	movwf	0
  2833                           
  2834                           ;TimeLib.c: 151: xTime /= 24;
  2835  01A5  3000               	movlw	0
  2836  01A6  00A3               	movwf	___lldiv@divisor+3
  2837  01A7  3000               	movlw	0
  2838  01A8  00A2               	movwf	___lldiv@divisor+2
  2839  01A9  3000               	movlw	0
  2840  01AA  00A1               	movwf	___lldiv@divisor+1
  2841  01AB  3018               	movlw	24
  2842  01AC  00A0               	movwf	___lldiv@divisor
  2843  01AD  084C               	movf	time_break@xTime+3,w
  2844  01AE  00A7               	movwf	___lldiv@dividend+3
  2845  01AF  084B               	movf	time_break@xTime+2,w
  2846  01B0  00A6               	movwf	___lldiv@dividend+2
  2847  01B1  084A               	movf	time_break@xTime+1,w
  2848  01B2  00A5               	movwf	___lldiv@dividend+1
  2849  01B3  0849               	movf	time_break@xTime,w
  2850  01B4  00A4               	movwf	___lldiv@dividend
  2851  01B5  118A  2034  118A   	fcall	___lldiv
  2852  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2853  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2854  01BA  0823               	movf	?___lldiv+3,w
  2855  01BB  00CC               	movwf	time_break@xTime+3
  2856  01BC  0822               	movf	?___lldiv+2,w
  2857  01BD  00CB               	movwf	time_break@xTime+2
  2858  01BE  0821               	movf	?___lldiv+1,w
  2859  01BF  00CA               	movwf	time_break@xTime+1
  2860  01C0  0820               	movf	?___lldiv,w
  2861  01C1  00C9               	movwf	time_break@xTime
  2862                           
  2863                           ;TimeLib.c: 152: timeinfo->tm_wday = ((xTime + 4) % 7) + 1;
  2864  01C2  3000               	movlw	0
  2865  01C3  00A3               	movwf	___llmod@divisor+3
  2866  01C4  3000               	movlw	0
  2867  01C5  00A2               	movwf	___llmod@divisor+2
  2868  01C6  3000               	movlw	0
  2869  01C7  00A1               	movwf	___llmod@divisor+1
  2870  01C8  3007               	movlw	7
  2871  01C9  00A0               	movwf	___llmod@divisor
  2872  01CA  3004               	movlw	4
  2873  01CB  00B6               	movwf	??_time_break
  2874  01CC  3000               	movlw	0
  2875  01CD  00B7               	movwf	??_time_break+1
  2876  01CE  3000               	movlw	0
  2877  01CF  00B8               	movwf	??_time_break+2
  2878  01D0  3000               	movlw	0
  2879  01D1  00B9               	movwf	??_time_break+3
  2880  01D2  0849               	movf	time_break@xTime,w
  2881  01D3  07B6               	addwf	??_time_break,f
  2882  01D4  084A               	movf	time_break@xTime+1,w
  2883  01D5  1803               	skipnc
  2884  01D6  0F4A               	incfsz	time_break@xTime+1,w
  2885  01D7  29D9               	goto	u2640
  2886  01D8  29DA               	goto	u2641
  2887  01D9                     u2640:	
  2888  01D9  07B7               	addwf	??_time_break+1,f
  2889  01DA                     u2641:	
  2890  01DA  084B               	movf	time_break@xTime+2,w
  2891  01DB  1803               	skipnc
  2892  01DC  0F4B               	incfsz	time_break@xTime+2,w
  2893  01DD  29DF               	goto	u2642
  2894  01DE  29E0               	goto	u2643
  2895  01DF                     u2642:	
  2896  01DF  07B8               	addwf	??_time_break+2,f
  2897  01E0                     u2643:	
  2898  01E0  084C               	movf	time_break@xTime+3,w
  2899  01E1  1803               	skipnc
  2900  01E2  0A4C               	incf	time_break@xTime+3,w
  2901  01E3  07B9               	addwf	??_time_break+3,f
  2902  01E4  0839               	movf	??_time_break+3,w
  2903  01E5  00A7               	movwf	___llmod@dividend+3
  2904  01E6  0838               	movf	??_time_break+2,w
  2905  01E7  00A6               	movwf	___llmod@dividend+2
  2906  01E8  0837               	movf	??_time_break+1,w
  2907  01E9  00A5               	movwf	___llmod@dividend+1
  2908  01EA  0836               	movf	??_time_break,w
  2909  01EB  00A4               	movwf	___llmod@dividend
  2910  01EC  158A  2654  118A   	fcall	___llmod
  2911  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2912  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2913  01F1  0820               	movf	?___llmod,w
  2914  01F2  3E01               	addlw	1
  2915  01F3  00BA               	movwf	??_time_break+4
  2916  01F4  0821               	movf	?___llmod+1,w
  2917  01F5  1803               	skipnc
  2918  01F6  3E01               	addlw	1
  2919  01F7  3E00               	addlw	0
  2920  01F8  00BB               	movwf	??_time_break+5
  2921  01F9  0835               	movf	time_break@timeinfo,w
  2922  01FA  3E0C               	addlw	12
  2923  01FB  0084               	movwf	4
  2924  01FC  083A               	movf	??_time_break+4,w
  2925  01FD  1383               	bcf	3,7	;select IRP bank0
  2926  01FE  0080               	movwf	0
  2927  01FF  0A84               	incf	4,f
  2928  0200  083B               	movf	??_time_break+5,w
  2929  0201  0080               	movwf	0
  2930                           
  2931                           ;TimeLib.c: 154: year = 0;
  2932  0202  01C7               	clrf	time_break@year
  2933                           
  2934                           ;TimeLib.c: 155: days = 0;
  2935  0203  3000               	movlw	0
  2936  0204  00C5               	movwf	time_break@days+3
  2937  0205  3000               	movlw	0
  2938  0206  00C4               	movwf	time_break@days+2
  2939  0207  3000               	movlw	0
  2940  0208  00C3               	movwf	time_break@days+1
  2941  0209  3000               	movlw	0
  2942  020A  00C2               	movwf	time_break@days
  2943                           
  2944                           ;TimeLib.c: 156: while ((unsigned) (days += (time_is_leap(1970 + year) ? 366 : 365)) <= 
      +                          xTime)
  2945  020B  2A10               	goto	l1956
  2946  020C                     l1954:	
  2947                           
  2948                           ;TimeLib.c: 157: year++;
  2949  020C  3001               	movlw	1
  2950  020D  00B6               	movwf	??_time_break
  2951  020E  0836               	movf	??_time_break,w
  2952  020F  07C7               	addwf	time_break@year,f
  2953  0210                     l1956:	
  2954  0210  0847               	movf	time_break@year,w
  2955  0211  3EB2               	addlw	178
  2956  0212  00AC               	movwf	time_is_leap@year
  2957  0213  3007               	movlw	7
  2958  0214  1803               	skipnc
  2959  0215  3008               	movlw	8
  2960  0216  00AD               	movwf	time_is_leap@year+1
  2961  0217  158A  25D9  118A   	fcall	_time_is_leap
  2962  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2963  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2964  021C  082D               	movf	?_time_is_leap+1,w
  2965  021D  042C               	iorwf	?_time_is_leap,w
  2966  021E  1D03               	skipz
  2967  021F  2A22               	goto	l1960
  2968  0220  306D               	movlw	109
  2969  0221  2A23               	goto	L6
  2970  0222                     l1960:	
  2971  0222  306E               	movlw	110
  2972  0223                     L6:	
  2973  0223  00BE               	movwf	_time_break$247
  2974  0224  3001               	movlw	1
  2975  0225  00BF               	movwf	_time_break$247+1
  2976  0226  083E               	movf	_time_break$247,w
  2977  0227  00B6               	movwf	??_time_break
  2978  0228  083F               	movf	_time_break$247+1,w
  2979  0229  00B7               	movwf	??_time_break+1
  2980  022A  3000               	movlw	0
  2981  022B  1BB7               	btfsc	??_time_break+1,7
  2982  022C  30FF               	movlw	255
  2983  022D  00B8               	movwf	??_time_break+2
  2984  022E  00B9               	movwf	??_time_break+3
  2985  022F  0836               	movf	??_time_break,w
  2986  0230  07C2               	addwf	time_break@days,f
  2987  0231  0837               	movf	??_time_break+1,w
  2988  0232  1103               	clrz
  2989  0233  1803               	skipnc
  2990  0234  3E01               	addlw	1
  2991  0235  1D03               	btfss	3,2
  2992  0236  07C3               	addwf	time_break@days+1,f
  2993  0237  0838               	movf	??_time_break+2,w
  2994  0238  1103               	clrz
  2995  0239  1803               	skipnc
  2996  023A  3E01               	addlw	1
  2997  023B  1D03               	btfss	3,2
  2998  023C  07C4               	addwf	time_break@days+2,f
  2999  023D  0839               	movf	??_time_break+3,w
  3000  023E  1103               	clrz
  3001  023F  1803               	skipnc
  3002  0240  3E01               	addlw	1
  3003  0241  1D03               	btfss	3,2
  3004  0242  07C5               	addwf	time_break@days+3,f
  3005  0243  0842               	movf	time_break@days,w
  3006  0244  00BA               	movwf	??_time_break+4
  3007  0245  0843               	movf	time_break@days+1,w
  3008  0246  00BB               	movwf	??_time_break+5
  3009  0247  01BC               	clrf	??_time_break+6
  3010  0248  01BD               	clrf	??_time_break+7
  3011  0249  083D               	movf	??_time_break+7,w
  3012  024A  024C               	subwf	time_break@xTime+3,w
  3013  024B  1D03               	skipz
  3014  024C  2A57               	goto	u2675
  3015  024D  083C               	movf	??_time_break+6,w
  3016  024E  024B               	subwf	time_break@xTime+2,w
  3017  024F  1D03               	skipz
  3018  0250  2A57               	goto	u2675
  3019  0251  083B               	movf	??_time_break+5,w
  3020  0252  024A               	subwf	time_break@xTime+1,w
  3021  0253  1D03               	skipz
  3022  0254  2A57               	goto	u2675
  3023  0255  083A               	movf	??_time_break+4,w
  3024  0256  0249               	subwf	time_break@xTime,w
  3025  0257                     u2675:	
  3026  0257  1803               	skipnc
  3027  0258  2A0C               	goto	l1954
  3028                           
  3029                           ;TimeLib.c: 159: timeinfo->tm_year = year;
  3030  0259  0847               	movf	time_break@year,w
  3031  025A  00B6               	movwf	??_time_break
  3032  025B  01B7               	clrf	??_time_break+1
  3033  025C  0835               	movf	time_break@timeinfo,w
  3034  025D  3E0A               	addlw	10
  3035  025E  0084               	movwf	4
  3036  025F  0836               	movf	??_time_break,w
  3037  0260  1383               	bcf	3,7	;select IRP bank0
  3038  0261  0080               	movwf	0
  3039  0262  0A84               	incf	4,f
  3040  0263  0837               	movf	??_time_break+1,w
  3041  0264  0080               	movwf	0
  3042                           
  3043                           ;TimeLib.c: 161: days -= time_is_leap(1970 + year) ? 366 : 365;
  3044  0265  0847               	movf	time_break@year,w
  3045  0266  3EB2               	addlw	178
  3046  0267  00AC               	movwf	time_is_leap@year
  3047  0268  3007               	movlw	7
  3048  0269  1803               	skipnc
  3049  026A  3008               	movlw	8
  3050  026B  00AD               	movwf	time_is_leap@year+1
  3051  026C  158A  25D9  118A   	fcall	_time_is_leap
  3052  026F  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0270  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0271  082D               	movf	?_time_is_leap+1,w
  3055  0272  042C               	iorwf	?_time_is_leap,w
  3056  0273  1D03               	skipz
  3057  0274  2A77               	goto	l1968
  3058  0275  306D               	movlw	109
  3059  0276  2A78               	goto	L7
  3060  0277                     l1968:	
  3061  0277  306E               	movlw	110
  3062  0278                     L7:	
  3063  0278  00C0               	movwf	_time_break$248
  3064  0279  3001               	movlw	1
  3065  027A  00C1               	movwf	_time_break$248+1
  3066  027B  0840               	movf	_time_break$248,w
  3067  027C  00B6               	movwf	??_time_break
  3068  027D  0841               	movf	_time_break$248+1,w
  3069  027E  00B7               	movwf	??_time_break+1
  3070  027F  3000               	movlw	0
  3071  0280  1BB7               	btfsc	??_time_break+1,7
  3072  0281  30FF               	movlw	255
  3073  0282  00B8               	movwf	??_time_break+2
  3074  0283  00B9               	movwf	??_time_break+3
  3075  0284  0836               	movf	??_time_break,w
  3076  0285  02C2               	subwf	time_break@days,f
  3077  0286  0837               	movf	??_time_break+1,w
  3078  0287  1C03               	skipc
  3079  0288  0F37               	incfsz	??_time_break+1,w
  3080  0289  2A8B               	goto	u2695
  3081  028A  2A8C               	goto	u2696
  3082  028B                     u2695:	
  3083  028B  02C3               	subwf	time_break@days+1,f
  3084  028C                     u2696:	
  3085  028C  0838               	movf	??_time_break+2,w
  3086  028D  1C03               	skipc
  3087  028E  0F38               	incfsz	??_time_break+2,w
  3088  028F  2A91               	goto	u2697
  3089  0290  2A92               	goto	u2698
  3090  0291                     u2697:	
  3091  0291  02C4               	subwf	time_break@days+2,f
  3092  0292                     u2698:	
  3093  0292  0839               	movf	??_time_break+3,w
  3094  0293  1C03               	skipc
  3095  0294  0F39               	incfsz	??_time_break+3,w
  3096  0295  2A97               	goto	u2699
  3097  0296  2A98               	goto	u2690
  3098  0297                     u2699:	
  3099  0297  02C5               	subwf	time_break@days+3,f
  3100  0298                     u2690:	
  3101                           
  3102                           ;TimeLib.c: 162: xTime -= days;
  3103  0298  0842               	movf	time_break@days,w
  3104  0299  02C9               	subwf	time_break@xTime,f
  3105  029A  0843               	movf	time_break@days+1,w
  3106  029B  1C03               	skipc
  3107  029C  0F43               	incfsz	time_break@days+1,w
  3108  029D  02CA               	subwf	time_break@xTime+1,f
  3109  029E  0844               	movf	time_break@days+2,w
  3110  029F  1C03               	skipc
  3111  02A0  0F44               	incfsz	time_break@days+2,w
  3112  02A1  02CB               	subwf	time_break@xTime+2,f
  3113  02A2  0845               	movf	time_break@days+3,w
  3114  02A3  1C03               	skipc
  3115  02A4  0F45               	incfsz	time_break@days+3,w
  3116  02A5  02CC               	subwf	time_break@xTime+3,f
  3117                           
  3118                           ;TimeLib.c: 164: days = 0;
  3119  02A6  3000               	movlw	0
  3120  02A7  00C5               	movwf	time_break@days+3
  3121  02A8  3000               	movlw	0
  3122  02A9  00C4               	movwf	time_break@days+2
  3123  02AA  3000               	movlw	0
  3124  02AB  00C3               	movwf	time_break@days+1
  3125  02AC  3000               	movlw	0
  3126  02AD  00C2               	movwf	time_break@days
  3127                           
  3128                           ;TimeLib.c: 165: month = 0;
  3129  02AE  01C8               	clrf	time_break@month
  3130                           
  3131                           ;TimeLib.c: 166: monthLength = 0;
  3132  02AF  01C6               	clrf	time_break@monthLength
  3133                           
  3134                           ;TimeLib.c: 167: for (month = 0; month < 12; month++) {
  3135  02B0  01C8               	clrf	time_break@month
  3136  02B1  300C               	movlw	12
  3137  02B2  0248               	subwf	time_break@month,w
  3138  02B3  1803               	btfsc	3,0
  3139  02B4  2B0C               	goto	l1998
  3140  02B5                     l1980:	
  3141                           
  3142                           ;TimeLib.c: 169: if (month == 1) {
  3143  02B5  0848               	movf	time_break@month,w
  3144  02B6  3A01               	xorlw	1
  3145  02B7  1D03               	skipz
  3146  02B8  2ACD               	goto	l1988
  3147                           
  3148                           ;TimeLib.c: 170: if (time_is_leap(1970 + year)) {
  3149  02B9  0847               	movf	time_break@year,w
  3150  02BA  3EB2               	addlw	178
  3151  02BB  00AC               	movwf	time_is_leap@year
  3152  02BC  3007               	movlw	7
  3153  02BD  1803               	skipnc
  3154  02BE  3008               	movlw	8
  3155  02BF  00AD               	movwf	time_is_leap@year+1
  3156  02C0  158A  25D9  118A   	fcall	_time_is_leap
  3157  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  3158  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  3159  02C5  082D               	movf	?_time_is_leap+1,w
  3160  02C6  042C               	iorwf	?_time_is_leap,w
  3161  02C7  1903               	skipnz
  3162  02C8  2ACB               	goto	l1986
  3163                           
  3164                           ;TimeLib.c: 171: monthLength = 29;
  3165  02C9  301D               	movlw	29
  3166  02CA  2AD3               	goto	L9
  3167  02CB                     l1986:	
  3168                           ;TimeLib.c: 172: } else {
  3169                           
  3170                           
  3171                           ;TimeLib.c: 173: monthLength = 28;
  3172  02CB  301C               	movlw	28
  3173  02CC  2AD3               	goto	L9
  3174  02CD                     l1988:	
  3175                           ;TimeLib.c: 174: }
  3176                           ;TimeLib.c: 175: } else {
  3177                           
  3178                           
  3179                           ;TimeLib.c: 176: monthLength = month_length[month];
  3180  02CD  0848               	movf	time_break@month,w
  3181  02CE  3E01               	addlw	low (_month_length-__stringbase)
  3182  02CF  0084               	movwf	4
  3183  02D0  118A  2094  118A   	fcall	stringdir
  3184  02D3                     L9:	
  3185  02D3  00B6               	movwf	??_time_break
  3186  02D4  0836               	movf	??_time_break,w
  3187  02D5  00C6               	movwf	time_break@monthLength
  3188                           
  3189                           ;TimeLib.c: 177: }
  3190                           ;TimeLib.c: 179: if (xTime >= monthLength) {
  3191  02D6  0846               	movf	time_break@monthLength,w
  3192  02D7  00B6               	movwf	??_time_break
  3193  02D8  01B7               	clrf	??_time_break+1
  3194  02D9  01B8               	clrf	??_time_break+2
  3195  02DA  01B9               	clrf	??_time_break+3
  3196  02DB  0839               	movf	??_time_break+3,w
  3197  02DC  024C               	subwf	time_break@xTime+3,w
  3198  02DD  1D03               	skipz
  3199  02DE  2AE9               	goto	u2735
  3200  02DF  0838               	movf	??_time_break+2,w
  3201  02E0  024B               	subwf	time_break@xTime+2,w
  3202  02E1  1D03               	skipz
  3203  02E2  2AE9               	goto	u2735
  3204  02E3  0837               	movf	??_time_break+1,w
  3205  02E4  024A               	subwf	time_break@xTime+1,w
  3206  02E5  1D03               	skipz
  3207  02E6  2AE9               	goto	u2735
  3208  02E7  0836               	movf	??_time_break,w
  3209  02E8  0249               	subwf	time_break@xTime,w
  3210  02E9                     u2735:	
  3211  02E9  1C03               	skipc
  3212  02EA  2B0C               	goto	l1998
  3213                           
  3214                           ;TimeLib.c: 180: xTime -= monthLength;
  3215  02EB  0846               	movf	time_break@monthLength,w
  3216  02EC  00B6               	movwf	??_time_break
  3217  02ED  01B7               	clrf	??_time_break+1
  3218  02EE  01B8               	clrf	??_time_break+2
  3219  02EF  01B9               	clrf	??_time_break+3
  3220  02F0  0836               	movf	??_time_break,w
  3221  02F1  02C9               	subwf	time_break@xTime,f
  3222  02F2  0837               	movf	??_time_break+1,w
  3223  02F3  1C03               	skipc
  3224  02F4  0F37               	incfsz	??_time_break+1,w
  3225  02F5  2AF7               	goto	u2745
  3226  02F6  2AF8               	goto	u2746
  3227  02F7                     u2745:	
  3228  02F7  02CA               	subwf	time_break@xTime+1,f
  3229  02F8                     u2746:	
  3230  02F8  0838               	movf	??_time_break+2,w
  3231  02F9  1C03               	skipc
  3232  02FA  0F38               	incfsz	??_time_break+2,w
  3233  02FB  2AFD               	goto	u2747
  3234  02FC  2AFE               	goto	u2748
  3235  02FD                     u2747:	
  3236  02FD  02CB               	subwf	time_break@xTime+2,f
  3237  02FE                     u2748:	
  3238  02FE  0839               	movf	??_time_break+3,w
  3239  02FF  1C03               	skipc
  3240  0300  0F39               	incfsz	??_time_break+3,w
  3241  0301  2B03               	goto	u2749
  3242  0302  2B04               	goto	l1994
  3243  0303                     u2749:	
  3244  0303  02CC               	subwf	time_break@xTime+3,f
  3245  0304                     l1994:	
  3246                           ;TimeLib.c: 182: break;
  3247                           
  3248                           ;TimeLib.c: 181: } else {
  3249                           
  3250  0304  3001               	movlw	1
  3251  0305  00B6               	movwf	??_time_break
  3252  0306  0836               	movf	??_time_break,w
  3253  0307  07C8               	addwf	time_break@month,f
  3254  0308  300C               	movlw	12
  3255  0309  0248               	subwf	time_break@month,w
  3256  030A  1C03               	skipc
  3257  030B  2AB5               	goto	l1980
  3258  030C                     l1998:	
  3259                           
  3260                           ;TimeLib.c: 183: }
  3261                           ;TimeLib.c: 184: }
  3262                           ;TimeLib.c: 185: timeinfo->tm_mon = month + 1;
  3263  030C  0848               	movf	time_break@month,w
  3264  030D  3E01               	addlw	1
  3265  030E  00B6               	movwf	??_time_break
  3266  030F  3000               	movlw	0
  3267  0310  1803               	skipnc
  3268  0311  3001               	movlw	1
  3269  0312  00B7               	movwf	??_time_break+1
  3270  0313  0835               	movf	time_break@timeinfo,w
  3271  0314  3E08               	addlw	8
  3272  0315  0084               	movwf	4
  3273  0316  0836               	movf	??_time_break,w
  3274  0317  1383               	bcf	3,7	;select IRP bank0
  3275  0318  0080               	movwf	0
  3276  0319  0A84               	incf	4,f
  3277  031A  0837               	movf	??_time_break+1,w
  3278  031B  0080               	movwf	0
  3279                           
  3280                           ;TimeLib.c: 186: timeinfo->tm_mday = xTime + 1;
  3281  031C  0849               	movf	time_break@xTime,w
  3282  031D  3E01               	addlw	1
  3283  031E  00B6               	movwf	??_time_break
  3284  031F  084A               	movf	time_break@xTime+1,w
  3285  0320  1803               	skipnc
  3286  0321  3E01               	addlw	1
  3287  0322  3E00               	addlw	0
  3288  0323  00B7               	movwf	??_time_break+1
  3289  0324  0835               	movf	time_break@timeinfo,w
  3290  0325  3E06               	addlw	6
  3291  0326  0084               	movwf	4
  3292  0327  0836               	movf	??_time_break,w
  3293  0328  0080               	movwf	0
  3294  0329  0A84               	incf	4,f
  3295  032A  0837               	movf	??_time_break+1,w
  3296  032B  0080               	movwf	0
  3297  032C  0008               	return
  3298  032D                     __end_of_time_break:	
  3299                           
  3300                           	psect	text10
  3301  0DD9                     __ptext10:	
  3302 ;; *************** function _time_is_leap *****************
  3303 ;; Defined at:
  3304 ;;		line 56 in file "../TimeLib.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  year            2   12[BANK0 ] unsigned int 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  2   12[BANK0 ] int 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0, pclath, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3318 ;;      Params:         0       2       0       0       0
  3319 ;;      Locals:         0       1       0       0       0
  3320 ;;      Temps:          0       2       0       0       0
  3321 ;;      Totals:         0       5       0       0       0
  3322 ;;Total ram usage:        5 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    3
  3325 ;; This function calls:
  3326 ;;		___lwmod
  3327 ;; This function is called by:
  3328 ;;		_time_make
  3329 ;;		_time_break
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _time_is_leap
  3335  0DD9                     _time_is_leap:	
  3336                           
  3337                           ;TimeLib.c: 59: return((year % 4 == 0 && year % 100 != 0) || year % 400 == 0);
  3338                           
  3339                           ;incstack = 0
  3340                           ; Regs used in _time_is_leap: [wreg+status,2+status,0+pclath+cstack]
  3341  0DD9  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0DDA  1303               	bcf	3,6	;RP1=0, select bank0
  3343  0DDB  01B0               	clrf	_time_is_leap$210
  3344  0DDC  0AB0               	incf	_time_is_leap$210,f
  3345  0DDD  3003               	movlw	3
  3346  0DDE  052C               	andwf	time_is_leap@year,w
  3347  0DDF  00AE               	movwf	??_time_is_leap
  3348  0DE0  3000               	movlw	0
  3349  0DE1  052D               	andwf	time_is_leap@year+1,w
  3350  0DE2  00AF               	movwf	??_time_is_leap+1
  3351  0DE3  082F               	movf	??_time_is_leap+1,w
  3352  0DE4  042E               	iorwf	??_time_is_leap,w
  3353  0DE5  1D03               	skipz
  3354  0DE6  2DFA               	goto	l1668
  3355  0DE7  3064               	movlw	100
  3356  0DE8  00A7               	movwf	___lwmod@divisor
  3357  0DE9  3000               	movlw	0
  3358  0DEA  00A8               	movwf	___lwmod@divisor+1
  3359  0DEB  082D               	movf	time_is_leap@year+1,w
  3360  0DEC  01AA               	clrf	___lwmod@dividend+1
  3361  0DED  07AA               	addwf	___lwmod@dividend+1,f
  3362  0DEE  082C               	movf	time_is_leap@year,w
  3363  0DEF  01A9               	clrf	___lwmod@dividend
  3364  0DF0  07A9               	addwf	___lwmod@dividend,f
  3365  0DF1  158A  256A  158A   	fcall	___lwmod
  3366  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  3368  0DF6  0828               	movf	?___lwmod+1,w
  3369  0DF7  0427               	iorwf	?___lwmod,w
  3370  0DF8  1D03               	skipz
  3371  0DF9  2E0C               	goto	l1672
  3372  0DFA                     l1668:	
  3373  0DFA  3090               	movlw	144
  3374  0DFB  00A7               	movwf	___lwmod@divisor
  3375  0DFC  3001               	movlw	1
  3376  0DFD  00A8               	movwf	___lwmod@divisor+1
  3377  0DFE  082D               	movf	time_is_leap@year+1,w
  3378  0DFF  01AA               	clrf	___lwmod@dividend+1
  3379  0E00  07AA               	addwf	___lwmod@dividend+1,f
  3380  0E01  082C               	movf	time_is_leap@year,w
  3381  0E02  01A9               	clrf	___lwmod@dividend
  3382  0E03  07A9               	addwf	___lwmod@dividend,f
  3383  0E04  158A  256A         	fcall	___lwmod
  3384  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0E08  0828               	movf	?___lwmod+1,w
  3387  0E09  0427               	iorwf	?___lwmod,w
  3388  0E0A  1D03               	btfss	3,2
  3389  0E0B  01B0               	clrf	_time_is_leap$210
  3390  0E0C                     l1672:	
  3391  0E0C  0830               	movf	_time_is_leap$210,w
  3392  0E0D  00AE               	movwf	??_time_is_leap
  3393  0E0E  01AF               	clrf	??_time_is_leap+1
  3394  0E0F  082E               	movf	??_time_is_leap,w
  3395  0E10  00AC               	movwf	?_time_is_leap
  3396  0E11  082F               	movf	??_time_is_leap+1,w
  3397  0E12  00AD               	movwf	?_time_is_leap+1
  3398  0E13  0008               	return
  3399  0E14                     __end_of_time_is_leap:	
  3400                           
  3401                           	psect	text11
  3402  0E54                     __ptext11:	
  3403 ;; *************** function ___llmod *****************
  3404 ;; Defined at:
  3405 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;  divisor         4    0[BANK0 ] unsigned long 
  3408 ;;  dividend        4    4[BANK0 ] unsigned long 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  counter         1    5[COMMON] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  4    0[BANK0 ] unsigned long 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3420 ;;      Params:         0       8       0       0       0
  3421 ;;      Locals:         1       0       0       0       0
  3422 ;;      Temps:          1       0       0       0       0
  3423 ;;      Totals:         2       8       0       0       0
  3424 ;;Total ram usage:       10 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    2
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_time_break
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           
  3435                           ;psect for function ___llmod
  3436  0E54                     ___llmod:	
  3437                           
  3438                           ;incstack = 0
  3439                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3440  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0E56  0823               	movf	___llmod@divisor+3,w
  3443  0E57  0422               	iorwf	___llmod@divisor+2,w
  3444  0E58  0421               	iorwf	___llmod@divisor+1,w
  3445  0E59  0420               	iorwf	___llmod@divisor,w
  3446  0E5A  1903               	skipnz
  3447  0E5B  2E99               	goto	l1754
  3448  0E5C  01F5               	clrf	___llmod@counter
  3449  0E5D  0AF5               	incf	___llmod@counter,f
  3450  0E5E                     l1744:	
  3451  0E5E  1BA3               	btfsc	___llmod@divisor+3,7
  3452  0E5F  2E6E               	goto	l1746
  3453  0E60  3001               	movlw	1
  3454  0E61  00F4               	movwf	??___llmod
  3455  0E62                     u2215:	
  3456  0E62  1003               	clrc
  3457  0E63  0DA0               	rlf	___llmod@divisor,f
  3458  0E64  0DA1               	rlf	___llmod@divisor+1,f
  3459  0E65  0DA2               	rlf	___llmod@divisor+2,f
  3460  0E66  0DA3               	rlf	___llmod@divisor+3,f
  3461  0E67  0BF4               	decfsz	??___llmod,f
  3462  0E68  2E62               	goto	u2215
  3463  0E69  3001               	movlw	1
  3464  0E6A  00F4               	movwf	??___llmod
  3465  0E6B  0874               	movf	??___llmod,w
  3466  0E6C  07F5               	addwf	___llmod@counter,f
  3467  0E6D  2E5E               	goto	l1744
  3468  0E6E                     l1746:	
  3469  0E6E  0823               	movf	___llmod@divisor+3,w
  3470  0E6F  0227               	subwf	___llmod@dividend+3,w
  3471  0E70  1D03               	skipz
  3472  0E71  2E7C               	goto	u2235
  3473  0E72  0822               	movf	___llmod@divisor+2,w
  3474  0E73  0226               	subwf	___llmod@dividend+2,w
  3475  0E74  1D03               	skipz
  3476  0E75  2E7C               	goto	u2235
  3477  0E76  0821               	movf	___llmod@divisor+1,w
  3478  0E77  0225               	subwf	___llmod@dividend+1,w
  3479  0E78  1D03               	skipz
  3480  0E79  2E7C               	goto	u2235
  3481  0E7A  0820               	movf	___llmod@divisor,w
  3482  0E7B  0224               	subwf	___llmod@dividend,w
  3483  0E7C                     u2235:	
  3484  0E7C  1C03               	skipc
  3485  0E7D  2E8C               	goto	l1750
  3486  0E7E  0820               	movf	___llmod@divisor,w
  3487  0E7F  02A4               	subwf	___llmod@dividend,f
  3488  0E80  0821               	movf	___llmod@divisor+1,w
  3489  0E81  1C03               	skipc
  3490  0E82  0F21               	incfsz	___llmod@divisor+1,w
  3491  0E83  02A5               	subwf	___llmod@dividend+1,f
  3492  0E84  0822               	movf	___llmod@divisor+2,w
  3493  0E85  1C03               	skipc
  3494  0E86  0F22               	incfsz	___llmod@divisor+2,w
  3495  0E87  02A6               	subwf	___llmod@dividend+2,f
  3496  0E88  0823               	movf	___llmod@divisor+3,w
  3497  0E89  1C03               	skipc
  3498  0E8A  0F23               	incfsz	___llmod@divisor+3,w
  3499  0E8B  02A7               	subwf	___llmod@dividend+3,f
  3500  0E8C                     l1750:	
  3501  0E8C  3001               	movlw	1
  3502  0E8D                     u2245:	
  3503  0E8D  1003               	clrc
  3504  0E8E  0CA3               	rrf	___llmod@divisor+3,f
  3505  0E8F  0CA2               	rrf	___llmod@divisor+2,f
  3506  0E90  0CA1               	rrf	___llmod@divisor+1,f
  3507  0E91  0CA0               	rrf	___llmod@divisor,f
  3508  0E92  3EFF               	addlw	-1
  3509  0E93  1D03               	skipz
  3510  0E94  2E8D               	goto	u2245
  3511  0E95  3001               	movlw	1
  3512  0E96  02F5               	subwf	___llmod@counter,f
  3513  0E97  1D03               	btfss	3,2
  3514  0E98  2E6E               	goto	l1746
  3515  0E99                     l1754:	
  3516  0E99  0827               	movf	___llmod@dividend+3,w
  3517  0E9A  00A3               	movwf	?___llmod+3
  3518  0E9B  0826               	movf	___llmod@dividend+2,w
  3519  0E9C  00A2               	movwf	?___llmod+2
  3520  0E9D  0825               	movf	___llmod@dividend+1,w
  3521  0E9E  00A1               	movwf	?___llmod+1
  3522  0E9F  0824               	movf	___llmod@dividend,w
  3523  0EA0  00A0               	movwf	?___llmod
  3524  0EA1  0008               	return
  3525  0EA2                     __end_of___llmod:	
  3526                           
  3527                           	psect	text12
  3528  0034                     __ptext12:	
  3529 ;; *************** function ___lldiv *****************
  3530 ;; Defined at:
  3531 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  divisor         4    0[BANK0 ] unsigned long 
  3534 ;;  dividend        4    4[BANK0 ] unsigned long 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  quotient        4    8[BANK0 ] unsigned long 
  3537 ;;  counter         1   12[BANK0 ] unsigned char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  4    0[BANK0 ] unsigned long 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3547 ;;      Params:         0       8       0       0       0
  3548 ;;      Locals:         0       5       0       0       0
  3549 ;;      Temps:          1       0       0       0       0
  3550 ;;      Totals:         1      13       0       0       0
  3551 ;;Total ram usage:       14 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:    2
  3554 ;; This function calls:
  3555 ;;		Nothing
  3556 ;; This function is called by:
  3557 ;;		_time_break
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           
  3562                           ;psect for function ___lldiv
  3563  0034                     ___lldiv:	
  3564                           
  3565                           ;incstack = 0
  3566                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3567  0034  3000               	movlw	0
  3568  0035  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0036  1303               	bcf	3,6	;RP1=0, select bank0
  3570  0037  00AB               	movwf	___lldiv@quotient+3
  3571  0038  3000               	movlw	0
  3572  0039  00AA               	movwf	___lldiv@quotient+2
  3573  003A  3000               	movlw	0
  3574  003B  00A9               	movwf	___lldiv@quotient+1
  3575  003C  3000               	movlw	0
  3576  003D  00A8               	movwf	___lldiv@quotient
  3577  003E  0823               	movf	___lldiv@divisor+3,w
  3578  003F  0422               	iorwf	___lldiv@divisor+2,w
  3579  0040  0421               	iorwf	___lldiv@divisor+1,w
  3580  0041  0420               	iorwf	___lldiv@divisor,w
  3581  0042  1903               	skipnz
  3582  0043  288B               	goto	l1734
  3583  0044  01AC               	clrf	___lldiv@counter
  3584  0045  0AAC               	incf	___lldiv@counter,f
  3585  0046                     l1720:	
  3586  0046  1BA3               	btfsc	___lldiv@divisor+3,7
  3587  0047  2856               	goto	l1722
  3588  0048  3001               	movlw	1
  3589  0049  00F4               	movwf	??___lldiv
  3590  004A                     u2145:	
  3591  004A  1003               	clrc
  3592  004B  0DA0               	rlf	___lldiv@divisor,f
  3593  004C  0DA1               	rlf	___lldiv@divisor+1,f
  3594  004D  0DA2               	rlf	___lldiv@divisor+2,f
  3595  004E  0DA3               	rlf	___lldiv@divisor+3,f
  3596  004F  0BF4               	decfsz	??___lldiv,f
  3597  0050  284A               	goto	u2145
  3598  0051  3001               	movlw	1
  3599  0052  00F4               	movwf	??___lldiv
  3600  0053  0874               	movf	??___lldiv,w
  3601  0054  07AC               	addwf	___lldiv@counter,f
  3602  0055  2846               	goto	l1720
  3603  0056                     l1722:	
  3604  0056  3001               	movlw	1
  3605  0057  00F4               	movwf	??___lldiv
  3606  0058                     u2165:	
  3607  0058  1003               	clrc
  3608  0059  0DA8               	rlf	___lldiv@quotient,f
  3609  005A  0DA9               	rlf	___lldiv@quotient+1,f
  3610  005B  0DAA               	rlf	___lldiv@quotient+2,f
  3611  005C  0DAB               	rlf	___lldiv@quotient+3,f
  3612  005D  0BF4               	decfsz	??___lldiv,f
  3613  005E  2858               	goto	u2165
  3614  005F  0823               	movf	___lldiv@divisor+3,w
  3615  0060  0227               	subwf	___lldiv@dividend+3,w
  3616  0061  1D03               	skipz
  3617  0062  286D               	goto	u2175
  3618  0063  0822               	movf	___lldiv@divisor+2,w
  3619  0064  0226               	subwf	___lldiv@dividend+2,w
  3620  0065  1D03               	skipz
  3621  0066  286D               	goto	u2175
  3622  0067  0821               	movf	___lldiv@divisor+1,w
  3623  0068  0225               	subwf	___lldiv@dividend+1,w
  3624  0069  1D03               	skipz
  3625  006A  286D               	goto	u2175
  3626  006B  0820               	movf	___lldiv@divisor,w
  3627  006C  0224               	subwf	___lldiv@dividend,w
  3628  006D                     u2175:	
  3629  006D  1C03               	skipc
  3630  006E  287E               	goto	l1730
  3631  006F  0820               	movf	___lldiv@divisor,w
  3632  0070  02A4               	subwf	___lldiv@dividend,f
  3633  0071  0821               	movf	___lldiv@divisor+1,w
  3634  0072  1C03               	skipc
  3635  0073  0F21               	incfsz	___lldiv@divisor+1,w
  3636  0074  02A5               	subwf	___lldiv@dividend+1,f
  3637  0075  0822               	movf	___lldiv@divisor+2,w
  3638  0076  1C03               	skipc
  3639  0077  0F22               	incfsz	___lldiv@divisor+2,w
  3640  0078  02A6               	subwf	___lldiv@dividend+2,f
  3641  0079  0823               	movf	___lldiv@divisor+3,w
  3642  007A  1C03               	skipc
  3643  007B  0F23               	incfsz	___lldiv@divisor+3,w
  3644  007C  02A7               	subwf	___lldiv@dividend+3,f
  3645  007D  1428               	bsf	___lldiv@quotient,0
  3646  007E                     l1730:	
  3647  007E  3001               	movlw	1
  3648  007F                     u2185:	
  3649  007F  1003               	clrc
  3650  0080  0CA3               	rrf	___lldiv@divisor+3,f
  3651  0081  0CA2               	rrf	___lldiv@divisor+2,f
  3652  0082  0CA1               	rrf	___lldiv@divisor+1,f
  3653  0083  0CA0               	rrf	___lldiv@divisor,f
  3654  0084  3EFF               	addlw	-1
  3655  0085  1D03               	skipz
  3656  0086  287F               	goto	u2185
  3657  0087  3001               	movlw	1
  3658  0088  02AC               	subwf	___lldiv@counter,f
  3659  0089  1D03               	btfss	3,2
  3660  008A  2856               	goto	l1722
  3661  008B                     l1734:	
  3662  008B  082B               	movf	___lldiv@quotient+3,w
  3663  008C  00A3               	movwf	?___lldiv+3
  3664  008D  082A               	movf	___lldiv@quotient+2,w
  3665  008E  00A2               	movwf	?___lldiv+2
  3666  008F  0829               	movf	___lldiv@quotient+1,w
  3667  0090  00A1               	movwf	?___lldiv+1
  3668  0091  0828               	movf	___lldiv@quotient,w
  3669  0092  00A0               	movwf	?___lldiv
  3670  0093  0008               	return
  3671  0094                     __end_of___lldiv:	
  3672                           
  3673                           	psect	text13
  3674  0CCE                     __ptext13:	
  3675 ;; *************** function _tick_init *****************
  3676 ;; Defined at:
  3677 ;;		line 30 in file "../Tick/Tick-PIC16.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;		None
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;		None
  3682 ;; Return value:  Size  Location     Type
  3683 ;;		None               void
  3684 ;; Registers used:
  3685 ;;		wreg, status,2
  3686 ;; Tracked objects:
  3687 ;;		On entry : 0/0
  3688 ;;		On exit  : 0/0
  3689 ;;		Unchanged: 0/0
  3690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3691 ;;      Params:         0       0       0       0       0
  3692 ;;      Locals:         0       0       0       0       0
  3693 ;;      Temps:          0       0       0       0       0
  3694 ;;      Totals:         0       0       0       0       0
  3695 ;;Total ram usage:        0 bytes
  3696 ;; Hardware stack levels used:    1
  3697 ;; Hardware stack levels required when called:    2
  3698 ;; This function calls:
  3699 ;;		Nothing
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function _tick_init
  3707  0CCE                     _tick_init:	
  3708                           
  3709                           ;Tick-PIC16.c: 32: T1CON = 0;
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in _tick_init: [wreg+status,2]
  3713  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0CD0  0190               	clrf	16	;volatile
  3716                           
  3717                           ;Tick-PIC16.c: 33: TMR1L = 0;
  3718  0CD1  018E               	clrf	14	;volatile
  3719                           
  3720                           ;Tick-PIC16.c: 34: TMR1H = 0;
  3721  0CD2  018F               	clrf	15	;volatile
  3722                           
  3723                           ;Tick-PIC16.c: 36: PIR1bits.TMR1IF = 0;
  3724  0CD3  100C               	bcf	12,0	;volatile
  3725                           
  3726                           ;Tick-PIC16.c: 37: PIE1bits.TMR1IE = 1;
  3727  0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  3728  0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  3729  0CD6  140C               	bsf	12,0	;volatile
  3730                           
  3731                           ;Tick-PIC16.c: 38: INTCONbits.GIE = 1;
  3732  0CD7  178B               	bsf	11,7	;volatile
  3733                           
  3734                           ;Tick-PIC16.c: 39: INTCONbits.PEIE = 1;
  3735  0CD8  170B               	bsf	11,6	;volatile
  3736                           
  3737                           ;Tick-PIC16.c: 41: T1CON = 0x31;
  3738  0CD9  3031               	movlw	49
  3739  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  3741  0CDC  0090               	movwf	16	;volatile
  3742  0CDD  0008               	return
  3743  0CDE                     __end_of_tick_init:	
  3744                           
  3745                           	psect	text14
  3746  04E8                     __ptext14:	
  3747 ;; *************** function _printf *****************
  3748 ;; Defined at:
  3749 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  f               1    wreg     PTR const unsigned char 
  3752 ;;		 -> STR_2(44), STR_1(23), 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  f               1   34[BANK0 ] PTR const unsigned char 
  3755 ;;		 -> STR_2(44), STR_1(23), 
  3756 ;;  _val            4   29[BANK0 ] struct .
  3757 ;;  width           2   35[BANK0 ] int 
  3758 ;;  c               1   37[BANK0 ] char 
  3759 ;;  flag            1   33[BANK0 ] unsigned char 
  3760 ;;  prec            1   28[BANK0 ] char 
  3761 ;;  ap              1   27[BANK0 ] PTR void [1]
  3762 ;;		 -> ?_printf(2), 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  2   12[BANK0 ] int 
  3765 ;; Registers used:
  3766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0      12       0       0       0
  3773 ;;      Locals:         0      11       0       0       0
  3774 ;;      Temps:          0       3       0       0       0
  3775 ;;      Totals:         0      26       0       0       0
  3776 ;;Total ram usage:       26 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    3
  3779 ;; This function calls:
  3780 ;;		___lwdiv
  3781 ;;		___lwmod
  3782 ;;		___wmul
  3783 ;;		_isdigit
  3784 ;;		_putch
  3785 ;; This function is called by:
  3786 ;;		_main
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _printf
  3792  04E8                     _printf:	
  3793                           
  3794                           ;incstack = 0
  3795                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3796                           ;printf@f stored from wreg
  3797  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  3798  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  3799  04EA  00C2               	movwf	printf@f
  3800                           
  3801                           ;doprnt.c: 466: va_list ap;
  3802                           ;doprnt.c: 499: signed char c;
  3803                           ;doprnt.c: 501: int width;
  3804                           ;doprnt.c: 506: signed char prec;
  3805                           ;doprnt.c: 508: unsigned char flag;
  3806                           ;doprnt.c: 527: union {
  3807                           ;doprnt.c: 528: unsigned int _val;
  3808                           ;doprnt.c: 529: struct {
  3809                           ;doprnt.c: 530: const char * _cp;
  3810                           ;doprnt.c: 531: unsigned _len;
  3811                           ;doprnt.c: 532: } _str;
  3812                           ;doprnt.c: 533: } _val;
  3813                           ;doprnt.c: 542: *ap = __va_start();
  3814  04EB  302C               	movlw	?_printf& (0+255)
  3815  04EC  00B8               	movwf	??_printf
  3816  04ED  0838               	movf	??_printf,w
  3817  04EE  00BB               	movwf	printf@ap
  3818  04EF                     l1932:	
  3819                           ;doprnt.c: 545: while(c = *f++) {
  3820                           
  3821  04EF  3001               	movlw	1
  3822  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  3823  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  3824  04F2  07C2               	addwf	printf@f,f
  3825  04F3  30FF               	movlw	-1
  3826  04F4  0742               	addwf	printf@f,w
  3827  04F5  0084               	movwf	4
  3828  04F6  118A  2094  118A   	fcall	stringdir
  3829  04F9  00B8               	movwf	??_printf
  3830  04FA  0838               	movf	??_printf,w
  3831  04FB  00C5               	movwf	printf@c
  3832  04FC  08C5               	movf	printf@c,f
  3833  04FD  1903               	btfsc	3,2
  3834  04FE  0008               	return
  3835                           
  3836                           ;doprnt.c: 547: if(c != '%')
  3837  04FF  0845               	movf	printf@c,w
  3838  0500  3A25               	xorlw	37
  3839  0501  1903               	skipnz
  3840  0502  2D08               	goto	l1846
  3841                           
  3842                           ;doprnt.c: 549: {
  3843                           ;doprnt.c: 550: (putch(c) );
  3844  0503  0845               	movf	printf@c,w
  3845  0504  118A  20F3  118A   	fcall	_putch
  3846                           
  3847                           ;doprnt.c: 551: continue;
  3848  0507  2CEF               	goto	l1932
  3849  0508                     l1846:	
  3850                           
  3851                           ;doprnt.c: 552: }
  3852                           ;doprnt.c: 555: width = 0;
  3853  0508  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0509  1303               	bcf	3,6	;RP1=0, select bank0
  3855  050A  01C3               	clrf	printf@width
  3856  050B  01C4               	clrf	printf@width+1
  3857                           
  3858                           ;doprnt.c: 557: flag = 0;
  3859  050C  01C1               	clrf	printf@flag
  3860                           
  3861                           ;doprnt.c: 560: switch(*f) {
  3862                           
  3863                           ;doprnt.c: 559: for(;;) {
  3864  050D  2D13               	goto	l1852
  3865  050E                     l181:	
  3866                           ;doprnt.c: 588: case '0':
  3867                           
  3868                           
  3869                           ;doprnt.c: 589: flag |= 0x04;
  3870  050E  1541               	bsf	printf@flag,2
  3871                           
  3872                           ;doprnt.c: 590: f++;
  3873  050F  3001               	movlw	1
  3874  0510  00B8               	movwf	??_printf
  3875  0511  0838               	movf	??_printf,w
  3876  0512  07C2               	addwf	printf@f,f
  3877  0513                     l1852:	
  3878                           ;doprnt.c: 593: }
  3879                           
  3880                           ;doprnt.c: 591: continue;
  3881                           
  3882  0513  0842               	movf	printf@f,w
  3883  0514  0084               	movwf	4
  3884  0515  118A  2094  118A   	fcall	stringdir
  3885                           
  3886                           ; Switch size 1, requested type "space"
  3887                           ; Number of cases is 1, Range of values is 48 to 48
  3888                           ; switch strategies available:
  3889                           ; Name         Instructions Cycles
  3890                           ; simple_byte            4     3 (average)
  3891                           ; direct_byte           12    10 (fixed)
  3892                           ; jumptable            263     9 (fixed)
  3893                           ;	Chosen strategy is simple_byte
  3894  0518  3A30               	xorlw	48	; case 48
  3895  0519  1903               	skipnz
  3896  051A  2D0E               	goto	l181
  3897  051B  2D1C               	goto	l1854
  3898  051C                     l1854:	
  3899                           ;doprnt.c: 595: }
  3900                           
  3901                           ;doprnt.c: 594: break;
  3902                           
  3903                           
  3904                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  3905  051C  0842               	movf	printf@f,w
  3906  051D  0084               	movwf	4
  3907  051E  118A  2094  118A   	fcall	stringdir
  3908  0521  158A  24B0  118A   	fcall	_isdigit
  3909  0524  1C03               	btfss	3,0
  3910  0525  2D60               	goto	l1868
  3911                           
  3912                           ;doprnt.c: 607: width = 0;
  3913  0526  1283               	bcf	3,5	;RP0=0, select bank0
  3914  0527  1303               	bcf	3,6	;RP1=0, select bank0
  3915  0528  01C3               	clrf	printf@width
  3916  0529  01C4               	clrf	printf@width+1
  3917  052A                     l1858:	
  3918                           ;doprnt.c: 608: do {
  3919                           
  3920                           
  3921                           ;doprnt.c: 609: width *= 10;
  3922  052A  300A               	movlw	10
  3923  052B  1283               	bcf	3,5	;RP0=0, select bank0
  3924  052C  1303               	bcf	3,6	;RP1=0, select bank0
  3925  052D  00A0               	movwf	___wmul@multiplier
  3926  052E  3000               	movlw	0
  3927  052F  00A1               	movwf	___wmul@multiplier+1
  3928  0530  0844               	movf	printf@width+1,w
  3929  0531  01A3               	clrf	___wmul@multiplicand+1
  3930  0532  07A3               	addwf	___wmul@multiplicand+1,f
  3931  0533  0843               	movf	printf@width,w
  3932  0534  01A2               	clrf	___wmul@multiplicand
  3933  0535  07A2               	addwf	___wmul@multiplicand,f
  3934  0536  158A  251E  118A   	fcall	___wmul
  3935  0539  1283               	bcf	3,5	;RP0=0, select bank0
  3936  053A  1303               	bcf	3,6	;RP1=0, select bank0
  3937  053B  0821               	movf	?___wmul+1,w
  3938  053C  01C4               	clrf	printf@width+1
  3939  053D  07C4               	addwf	printf@width+1,f
  3940  053E  0820               	movf	?___wmul,w
  3941  053F  01C3               	clrf	printf@width
  3942  0540  07C3               	addwf	printf@width,f
  3943                           
  3944                           ;doprnt.c: 610: width += *f++ - '0';
  3945  0541  0842               	movf	printf@f,w
  3946  0542  0084               	movwf	4
  3947  0543  118A  2094  118A   	fcall	stringdir
  3948  0546  3ED0               	addlw	208
  3949  0547  00B8               	movwf	??_printf
  3950  0548  30FF               	movlw	255
  3951  0549  1803               	skipnc
  3952  054A  3000               	movlw	0
  3953  054B  00B9               	movwf	??_printf+1
  3954  054C  0838               	movf	??_printf,w
  3955  054D  07C3               	addwf	printf@width,f
  3956  054E  1803               	skipnc
  3957  054F  0AC4               	incf	printf@width+1,f
  3958  0550  0839               	movf	??_printf+1,w
  3959  0551  07C4               	addwf	printf@width+1,f
  3960  0552  3001               	movlw	1
  3961  0553  00B8               	movwf	??_printf
  3962  0554  0838               	movf	??_printf,w
  3963  0555  07C2               	addwf	printf@f,f
  3964                           
  3965                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  3966  0556  0842               	movf	printf@f,w
  3967  0557  0084               	movwf	4
  3968  0558  118A  2094  118A   	fcall	stringdir
  3969  055B  158A  24B0  118A   	fcall	_isdigit
  3970  055E  1803               	btfsc	3,0
  3971  055F  2D2A               	goto	l1858
  3972  0560                     l1868:	
  3973                           ;doprnt.c: 831: }
  3974                           
  3975                           ;doprnt.c: 822: continue;
  3976                           
  3977                           ;doprnt.c: 811: default:
  3978                           
  3979                           ;doprnt.c: 707: case 'i':
  3980                           ;doprnt.c: 708: break;
  3981                           
  3982                           ;doprnt.c: 706: case 'd':
  3983                           
  3984                           ;doprnt.c: 647: goto alldone;
  3985                           
  3986                           ;doprnt.c: 646: case 0:
  3987                           
  3988                           ;doprnt.c: 617: }
  3989                           ;doprnt.c: 644: switch(c = *f++) {
  3990                           
  3991  0560  3001               	movlw	1
  3992  0561  1283               	bcf	3,5	;RP0=0, select bank0
  3993  0562  1303               	bcf	3,6	;RP1=0, select bank0
  3994  0563  07C2               	addwf	printf@f,f
  3995  0564  30FF               	movlw	-1
  3996  0565  0742               	addwf	printf@f,w
  3997  0566  0084               	movwf	4
  3998  0567  118A  2094  118A   	fcall	stringdir
  3999  056A  00C5               	movwf	printf@c
  4000                           
  4001                           ; Switch size 1, requested type "space"
  4002                           ; Number of cases is 3, Range of values is 0 to 105
  4003                           ; switch strategies available:
  4004                           ; Name         Instructions Cycles
  4005                           ; simple_byte           10     6 (average)
  4006                           ; direct_byte          219     7 (fixed)
  4007                           ; jumptable            260     6 (fixed)
  4008                           ;	Chosen strategy is simple_byte
  4009  056B  3A00               	xorlw	0	; case 0
  4010  056C  1903               	skipnz
  4011  056D  2E5C               	goto	l216
  4012  056E  3A64               	xorlw	100	; case 100
  4013  056F  1903               	skipnz
  4014  0570  2D75               	goto	l1870
  4015  0571  3A0D               	xorlw	13	; case 105
  4016  0572  1903               	skipnz
  4017  0573  2D75               	goto	l1870
  4018  0574  2CEF               	goto	l1932
  4019  0575                     l1870:	
  4020                           
  4021                           ;doprnt.c: 1262: {
  4022                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4023  0575  1283               	bcf	3,5	;RP0=0, select bank0
  4024  0576  1303               	bcf	3,6	;RP1=0, select bank0
  4025  0577  083B               	movf	printf@ap,w
  4026  0578  0084               	movwf	4
  4027  0579  1383               	bcf	3,7	;select IRP bank0
  4028  057A  0800               	movf	0,w
  4029  057B  00BD               	movwf	printf@_val
  4030  057C  0A84               	incf	4,f
  4031  057D  0800               	movf	0,w
  4032  057E  00BE               	movwf	printf@_val+1
  4033  057F  3002               	movlw	2
  4034  0580  00B8               	movwf	??_printf
  4035  0581  0838               	movf	??_printf,w
  4036  0582  07BB               	addwf	printf@ap,f
  4037                           
  4038                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  4039  0583  1FBE               	btfss	printf@_val+1,7
  4040  0584  2D8E               	goto	l1880
  4041                           
  4042                           ;doprnt.c: 1271: flag |= 0x03;
  4043  0585  3003               	movlw	3
  4044  0586  00B8               	movwf	??_printf
  4045  0587  0838               	movf	??_printf,w
  4046  0588  04C1               	iorwf	printf@flag,f
  4047                           
  4048                           ;doprnt.c: 1272: _val._val = -_val._val;
  4049  0589  09BD               	comf	printf@_val,f
  4050  058A  09BE               	comf	printf@_val+1,f
  4051  058B  0ABD               	incf	printf@_val,f
  4052  058C  1903               	skipnz
  4053  058D  0ABE               	incf	printf@_val+1,f
  4054  058E                     l1880:	
  4055                           
  4056                           ;doprnt.c: 1273: }
  4057                           ;doprnt.c: 1275: }
  4058                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4059  058E  01C5               	clrf	printf@c
  4060  058F  0AC5               	incf	printf@c,f
  4061  0590  0845               	movf	printf@c,w
  4062  0591  3A05               	xorlw	5
  4063  0592  1903               	btfsc	3,2
  4064  0593  2DB1               	goto	l1892
  4065  0594                     l1884:	
  4066                           
  4067                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  4068  0594  0845               	movf	printf@c,w
  4069  0595  00B8               	movwf	??_printf
  4070  0596  0738               	addwf	??_printf,w
  4071  0597  3E0D               	addlw	low (_dpowers-__stringbase)
  4072  0598  0084               	movwf	4
  4073  0599  118A  2094  118A   	fcall	stringdir
  4074  059C  00B9               	movwf	??_printf+1
  4075  059D  118A  2094  118A   	fcall	stringdir
  4076  05A0  00BA               	movwf	??_printf+2
  4077  05A1  083A               	movf	??_printf+2,w
  4078  05A2  023E               	subwf	printf@_val+1,w
  4079  05A3  1D03               	skipz
  4080  05A4  2DA7               	goto	u2505
  4081  05A5  0839               	movf	??_printf+1,w
  4082  05A6  023D               	subwf	printf@_val,w
  4083  05A7                     u2505:	
  4084  05A7  1C03               	btfss	3,0
  4085  05A8  2DB1               	goto	l1892
  4086                           
  4087                           ;doprnt.c: 1316: break;
  4088  05A9  3001               	movlw	1
  4089  05AA  00B8               	movwf	??_printf
  4090  05AB  0838               	movf	??_printf,w
  4091  05AC  07C5               	addwf	printf@c,f
  4092  05AD  0845               	movf	printf@c,w
  4093  05AE  3A05               	xorlw	5
  4094  05AF  1D03               	skipz
  4095  05B0  2D94               	goto	l1884
  4096  05B1                     l1892:	
  4097                           
  4098                           ;doprnt.c: 1354: if(width && flag & 0x03)
  4099  05B1  0844               	movf	printf@width+1,w
  4100  05B2  0443               	iorwf	printf@width,w
  4101  05B3  1903               	skipnz
  4102  05B4  2DBF               	goto	l199
  4103  05B5  0841               	movf	printf@flag,w
  4104  05B6  3903               	andlw	3
  4105  05B7  1903               	btfsc	3,2
  4106  05B8  2DBF               	goto	l199
  4107                           
  4108                           ;doprnt.c: 1355: width--;
  4109  05B9  30FF               	movlw	255
  4110  05BA  07C3               	addwf	printf@width,f
  4111  05BB  1803               	skipnc
  4112  05BC  0AC4               	incf	printf@width+1,f
  4113  05BD  30FF               	movlw	255
  4114  05BE  07C4               	addwf	printf@width+1,f
  4115  05BF                     l199:	
  4116                           
  4117                           ;doprnt.c: 1390: if(width > c)
  4118  05BF  0845               	movf	printf@c,w
  4119  05C0  00B8               	movwf	??_printf
  4120  05C1  01B9               	clrf	??_printf+1
  4121  05C2  1BB8               	btfsc	??_printf,7
  4122  05C3  03B9               	decf	??_printf+1,f
  4123  05C4  0839               	movf	??_printf+1,w
  4124  05C5  3A80               	xorlw	128
  4125  05C6  00BA               	movwf	??_printf+2
  4126  05C7  0844               	movf	printf@width+1,w
  4127  05C8  3A80               	xorlw	128
  4128  05C9  023A               	subwf	??_printf+2,w
  4129  05CA  1D03               	skipz
  4130  05CB  2DCE               	goto	u2545
  4131  05CC  0843               	movf	printf@width,w
  4132  05CD  0238               	subwf	??_printf,w
  4133  05CE                     u2545:	
  4134  05CE  1803               	skipnc
  4135  05CF  2DDE               	goto	l1900
  4136                           
  4137                           ;doprnt.c: 1391: width -= c;
  4138  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  4139  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  4140  05D2  0845               	movf	printf@c,w
  4141  05D3  00B8               	movwf	??_printf
  4142  05D4  01B9               	clrf	??_printf+1
  4143  05D5  1BB8               	btfsc	??_printf,7
  4144  05D6  03B9               	decf	??_printf+1,f
  4145  05D7  0838               	movf	??_printf,w
  4146  05D8  02C3               	subwf	printf@width,f
  4147  05D9  0839               	movf	??_printf+1,w
  4148  05DA  1C03               	skipc
  4149  05DB  03C4               	decf	printf@width+1,f
  4150  05DC  02C4               	subwf	printf@width+1,f
  4151  05DD  2DE2               	goto	l1902
  4152  05DE                     l1900:	
  4153                           
  4154                           ;doprnt.c: 1392: else
  4155                           ;doprnt.c: 1393: width = 0;
  4156  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  4157  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  4158  05E0  01C3               	clrf	printf@width
  4159  05E1  01C4               	clrf	printf@width+1
  4160  05E2                     l1902:	
  4161                           
  4162                           ;doprnt.c: 1396: if(flag & 0x04) {
  4163  05E2  1D41               	btfss	printf@flag,2
  4164  05E3  2DFF               	goto	l1914
  4165                           
  4166                           ;doprnt.c: 1401: if(flag & 0x03)
  4167  05E4  0841               	movf	printf@flag,w
  4168  05E5  3903               	andlw	3
  4169  05E6  1903               	btfsc	3,2
  4170  05E7  2DEC               	goto	l1908
  4171                           
  4172                           ;doprnt.c: 1402: (putch('-') );
  4173  05E8  302D               	movlw	45
  4174  05E9  118A  20F3  118A   	fcall	_putch
  4175  05EC                     l1908:	
  4176                           
  4177                           ;doprnt.c: 1424: if(width)
  4178  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  4179  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  4180  05EE                     L11:	
  4181  05EE  0844               	movf	printf@width+1,w
  4182  05EF  0443               	iorwf	printf@width,w
  4183  05F0  1903               	skipnz
  4184  05F1  2E1B               	goto	l1924
  4185                           
  4186                           ;doprnt.c: 1426: (putch('0') );
  4187                           
  4188                           ;doprnt.c: 1425: do
  4189  05F2  3030               	movlw	48
  4190  05F3  118A  20F3  118A   	fcall	_putch
  4191                           
  4192                           ;doprnt.c: 1427: while(--width);
  4193  05F6  30FF               	movlw	255
  4194  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  4195  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  4196  05F9  07C3               	addwf	printf@width,f
  4197  05FA  1803               	skipnc
  4198  05FB  0AC4               	incf	printf@width+1,f
  4199  05FC  30FF               	movlw	255
  4200  05FD  07C4               	addwf	printf@width+1,f
  4201  05FE  2DEE               	goto	L11
  4202  05FF                     l1914:	
  4203                           ;doprnt.c: 1429: } else
  4204                           
  4205                           
  4206                           ;doprnt.c: 1431: {
  4207                           ;doprnt.c: 1433: if(width
  4208                           ;doprnt.c: 1437: )
  4209  05FF  0844               	movf	printf@width+1,w
  4210  0600  0443               	iorwf	printf@width,w
  4211  0601  1903               	skipnz
  4212  0602  2E13               	goto	l1920
  4213  0603                     l1916:	
  4214                           ;doprnt.c: 1438: do
  4215                           
  4216                           
  4217                           ;doprnt.c: 1439: (putch(' ') );
  4218  0603  3020               	movlw	32
  4219  0604  118A  20F3  118A   	fcall	_putch
  4220                           
  4221                           ;doprnt.c: 1440: while(--width);
  4222  0607  30FF               	movlw	255
  4223  0608  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0609  1303               	bcf	3,6	;RP1=0, select bank0
  4225  060A  07C3               	addwf	printf@width,f
  4226  060B  1803               	skipnc
  4227  060C  0AC4               	incf	printf@width+1,f
  4228  060D  30FF               	movlw	255
  4229  060E  07C4               	addwf	printf@width+1,f
  4230  060F  0844               	movf	printf@width+1,w
  4231  0610  0443               	iorwf	printf@width,w
  4232  0611  1D03               	skipz
  4233  0612  2E03               	goto	l1916
  4234  0613                     l1920:	
  4235                           
  4236                           ;doprnt.c: 1447: if(flag & 0x03)
  4237  0613  0841               	movf	printf@flag,w
  4238  0614  3903               	andlw	3
  4239  0615  1903               	btfsc	3,2
  4240  0616  2E1B               	goto	l1924
  4241                           
  4242                           ;doprnt.c: 1448: (putch('-') );
  4243  0617  302D               	movlw	45
  4244  0618  118A  20F3  118A   	fcall	_putch
  4245  061B                     l1924:	
  4246                           
  4247                           ;doprnt.c: 1478: }
  4248                           ;doprnt.c: 1481: prec = c;
  4249  061B  1283               	bcf	3,5	;RP0=0, select bank0
  4250  061C  1303               	bcf	3,6	;RP1=0, select bank0
  4251  061D  0845               	movf	printf@c,w
  4252  061E  00B8               	movwf	??_printf
  4253  061F  0838               	movf	??_printf,w
  4254  0620  00BC               	movwf	printf@prec
  4255  0621                     l1930:	
  4256                           ;doprnt.c: 1483: while(prec--) {
  4257                           
  4258  0621  30FF               	movlw	-1
  4259  0622  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0623  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0624  00B8               	movwf	??_printf
  4262  0625  0838               	movf	??_printf,w
  4263  0626  07BC               	addwf	printf@prec,f
  4264  0627  083C               	movf	printf@prec,w
  4265  0628  3AFF               	xorlw	-1
  4266  0629  1903               	btfsc	3,2
  4267  062A  2CEF               	goto	l1932
  4268                           
  4269                           ;doprnt.c: 1487: {
  4270                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  4271  062B  300A               	movlw	10
  4272  062C  00A7               	movwf	___lwmod@divisor
  4273  062D  3000               	movlw	0
  4274  062E  00A8               	movwf	___lwmod@divisor+1
  4275  062F  083C               	movf	printf@prec,w
  4276  0630  00B8               	movwf	??_printf
  4277  0631  0738               	addwf	??_printf,w
  4278  0632  3E0D               	addlw	low (_dpowers-__stringbase)
  4279  0633  0084               	movwf	4
  4280  0634  118A  2094  118A   	fcall	stringdir
  4281  0637  00A0               	movwf	___lwdiv@divisor
  4282  0638  118A  2094  118A   	fcall	stringdir
  4283  063B  00A1               	movwf	___lwdiv@divisor+1
  4284  063C  083E               	movf	printf@_val+1,w
  4285  063D  01A3               	clrf	___lwdiv@dividend+1
  4286  063E  07A3               	addwf	___lwdiv@dividend+1,f
  4287  063F  083D               	movf	printf@_val,w
  4288  0640  01A2               	clrf	___lwdiv@dividend
  4289  0641  07A2               	addwf	___lwdiv@dividend,f
  4290  0642  158A  2614  118A   	fcall	___lwdiv
  4291  0645  1283               	bcf	3,5	;RP0=0, select bank0
  4292  0646  1303               	bcf	3,6	;RP1=0, select bank0
  4293  0647  0821               	movf	?___lwdiv+1,w
  4294  0648  01AA               	clrf	___lwmod@dividend+1
  4295  0649  07AA               	addwf	___lwmod@dividend+1,f
  4296  064A  0820               	movf	?___lwdiv,w
  4297  064B  01A9               	clrf	___lwmod@dividend
  4298  064C  07A9               	addwf	___lwmod@dividend,f
  4299  064D  158A  256A  118A   	fcall	___lwmod
  4300  0650  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0651  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0652  0827               	movf	?___lwmod,w
  4303  0653  3E30               	addlw	48
  4304  0654  00B9               	movwf	??_printf+1
  4305  0655  0839               	movf	??_printf+1,w
  4306  0656  00C5               	movwf	printf@c
  4307                           
  4308                           ;doprnt.c: 1532: }
  4309                           ;doprnt.c: 1533: (putch(c) );
  4310  0657  0845               	movf	printf@c,w
  4311  0658  118A  20F3  118A   	fcall	_putch
  4312  065B  2E21               	goto	l1930
  4313  065C                     l216:	
  4314                           ;doprnt.c: 1549: return 0;
  4315                           ;	Return value of _printf is never used
  4316                           
  4317                           ;doprnt.c: 1534: }
  4318                           ;doprnt.c: 1542: }
  4319                           ;doprnt.c: 1544: alldone:
  4320                           
  4321  065C  0008               	return
  4322  065D                     __end_of_printf:	
  4323                           
  4324                           	psect	text15
  4325  00F3                     __ptext15:	
  4326 ;; *************** function _putch *****************
  4327 ;; Defined at:
  4328 ;;		line 103 in file "main.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  data            1    wreg     unsigned char 
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;  data            1    4[COMMON] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;		None               void
  4335 ;; Registers used:
  4336 ;;		wreg
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         1       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0
  4345 ;;      Totals:         1       0       0       0       0
  4346 ;;Total ram usage:        1 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    2
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_printf
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           
  4357                           ;psect for function _putch
  4358  00F3                     _putch:	
  4359                           
  4360                           ;incstack = 0
  4361                           ; Regs used in _putch: [wreg]
  4362                           ;putch@data stored from wreg
  4363  00F3  00F4               	movwf	putch@data
  4364                           
  4365                           ;main.c: 105: TXSTA=0x26;
  4366  00F4  3026               	movlw	38
  4367  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  4368  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  4369  00F7  0098               	movwf	24	;volatile
  4370                           
  4371                           ;main.c: 106: RCSTAbits.SPEN=1;
  4372  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  4373  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  4374  00FA  1798               	bsf	24,7	;volatile
  4375                           
  4376                           ;main.c: 108: TXREG = data;
  4377  00FB  0874               	movf	putch@data,w
  4378  00FC  0099               	movwf	25	;volatile
  4379  00FD                     l48:	
  4380                           ;main.c: 109: while( !( PIR1bits.TXIF ) );
  4381                           
  4382  00FD  1A0C               	btfsc	12,4	;volatile
  4383  00FE  0008               	return
  4384  00FF  28FD               	goto	l48
  4385  0100                     __end_of_putch:	
  4386                           
  4387                           	psect	text16
  4388  0CB0                     __ptext16:	
  4389 ;; *************** function _isdigit *****************
  4390 ;; Defined at:
  4391 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  c               1    wreg     unsigned char 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  c               1    5[COMMON] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;		None               void
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4405 ;;      Params:         0       0       0       0       0
  4406 ;;      Locals:         2       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0
  4408 ;;      Totals:         2       0       0       0       0
  4409 ;;Total ram usage:        2 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    2
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_printf
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function _isdigit
  4421  0CB0                     _isdigit:	
  4422                           
  4423                           ;incstack = 0
  4424                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4425                           ;isdigit@c stored from wreg
  4426  0CB0  00F5               	movwf	isdigit@c
  4427  0CB1  01F4               	clrf	_isdigit$562
  4428  0CB2  303A               	movlw	58
  4429  0CB3  0275               	subwf	isdigit@c,w
  4430  0CB4  1803               	skipnc
  4431  0CB5  2CBC               	goto	l1684
  4432  0CB6  3030               	movlw	48
  4433  0CB7  0275               	subwf	isdigit@c,w
  4434  0CB8  1C03               	skipc
  4435  0CB9  2CBC               	goto	l1684
  4436  0CBA  01F4               	clrf	_isdigit$562
  4437  0CBB  0AF4               	incf	_isdigit$562,f
  4438  0CBC                     l1684:	
  4439  0CBC  0C74               	rrf	_isdigit$562,w
  4440  0CBD  0008               	return
  4441  0CBE                     __end_of_isdigit:	
  4442                           
  4443                           	psect	text17
  4444  0D1E                     __ptext17:	
  4445 ;; *************** function ___wmul *****************
  4446 ;; Defined at:
  4447 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4450 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  product         2    4[COMMON] unsigned int 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  2    0[BANK0 ] unsigned int 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4462 ;;      Params:         0       4       0       0       0
  4463 ;;      Locals:         2       0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0
  4465 ;;      Totals:         2       4       0       0       0
  4466 ;;Total ram usage:        6 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    2
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_printf
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function ___wmul
  4478  0D1E                     ___wmul:	
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4482  0D1E  01F4               	clrf	___wmul@product
  4483  0D1F  01F5               	clrf	___wmul@product+1
  4484  0D20                     l1690:	
  4485  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  4486  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  4487  0D22  1C20               	btfss	___wmul@multiplier,0
  4488  0D23  2D2A               	goto	l300
  4489  0D24  0822               	movf	___wmul@multiplicand,w
  4490  0D25  07F4               	addwf	___wmul@product,f
  4491  0D26  1803               	skipnc
  4492  0D27  0AF5               	incf	___wmul@product+1,f
  4493  0D28  0823               	movf	___wmul@multiplicand+1,w
  4494  0D29  07F5               	addwf	___wmul@product+1,f
  4495  0D2A                     l300:	
  4496  0D2A  3001               	movlw	1
  4497  0D2B                     u2055:	
  4498  0D2B  1003               	clrc
  4499  0D2C  0DA2               	rlf	___wmul@multiplicand,f
  4500  0D2D  0DA3               	rlf	___wmul@multiplicand+1,f
  4501  0D2E  3EFF               	addlw	-1
  4502  0D2F  1D03               	skipz
  4503  0D30  2D2B               	goto	u2055
  4504  0D31  3001               	movlw	1
  4505  0D32                     u2065:	
  4506  0D32  1003               	clrc
  4507  0D33  0CA1               	rrf	___wmul@multiplier+1,f
  4508  0D34  0CA0               	rrf	___wmul@multiplier,f
  4509  0D35  3EFF               	addlw	-1
  4510  0D36  1D03               	skipz
  4511  0D37  2D32               	goto	u2065
  4512  0D38  0821               	movf	___wmul@multiplier+1,w
  4513  0D39  0420               	iorwf	___wmul@multiplier,w
  4514  0D3A  1D03               	skipz
  4515  0D3B  2D20               	goto	l1690
  4516  0D3C  0875               	movf	___wmul@product+1,w
  4517  0D3D  01A1               	clrf	?___wmul+1
  4518  0D3E  07A1               	addwf	?___wmul+1,f
  4519  0D3F  0874               	movf	___wmul@product,w
  4520  0D40  01A0               	clrf	?___wmul
  4521  0D41  07A0               	addwf	?___wmul,f
  4522  0D42  0008               	return
  4523  0D43                     __end_of___wmul:	
  4524                           
  4525                           	psect	text18
  4526  0D6A                     __ptext18:	
  4527 ;; *************** function ___lwmod *****************
  4528 ;; Defined at:
  4529 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  divisor         2    7[BANK0 ] unsigned int 
  4532 ;;  dividend        2    9[BANK0 ] unsigned int 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  counter         1   11[BANK0 ] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  2    7[BANK0 ] unsigned int 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4544 ;;      Params:         0       4       0       0       0
  4545 ;;      Locals:         0       1       0       0       0
  4546 ;;      Temps:          1       0       0       0       0
  4547 ;;      Totals:         1       5       0       0       0
  4548 ;;Total ram usage:        6 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    2
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_time_is_leap
  4555 ;;		_printf
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           
  4560                           ;psect for function ___lwmod
  4561  0D6A                     ___lwmod:	
  4562                           
  4563                           ;incstack = 0
  4564                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4565  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0D6C  0828               	movf	___lwmod@divisor+1,w
  4568  0D6D  0427               	iorwf	___lwmod@divisor,w
  4569  0D6E  1903               	skipnz
  4570  0D6F  2D99               	goto	l1630
  4571  0D70  01AB               	clrf	___lwmod@counter
  4572  0D71  0AAB               	incf	___lwmod@counter,f
  4573  0D72                     l1620:	
  4574  0D72  1BA8               	btfsc	___lwmod@divisor+1,7
  4575  0D73  2D80               	goto	l1622
  4576  0D74  3001               	movlw	1
  4577  0D75                     u1885:	
  4578  0D75  1003               	clrc
  4579  0D76  0DA7               	rlf	___lwmod@divisor,f
  4580  0D77  0DA8               	rlf	___lwmod@divisor+1,f
  4581  0D78  3EFF               	addlw	-1
  4582  0D79  1D03               	skipz
  4583  0D7A  2D75               	goto	u1885
  4584  0D7B  3001               	movlw	1
  4585  0D7C  00F5               	movwf	??___lwmod
  4586  0D7D  0875               	movf	??___lwmod,w
  4587  0D7E  07AB               	addwf	___lwmod@counter,f
  4588  0D7F  2D72               	goto	l1620
  4589  0D80                     l1622:	
  4590  0D80  0828               	movf	___lwmod@divisor+1,w
  4591  0D81  022A               	subwf	___lwmod@dividend+1,w
  4592  0D82  1D03               	skipz
  4593  0D83  2D86               	goto	u1905
  4594  0D84  0827               	movf	___lwmod@divisor,w
  4595  0D85  0229               	subwf	___lwmod@dividend,w
  4596  0D86                     u1905:	
  4597  0D86  1C03               	skipc
  4598  0D87  2D8E               	goto	l1626
  4599  0D88  0827               	movf	___lwmod@divisor,w
  4600  0D89  02A9               	subwf	___lwmod@dividend,f
  4601  0D8A  0828               	movf	___lwmod@divisor+1,w
  4602  0D8B  1C03               	skipc
  4603  0D8C  03AA               	decf	___lwmod@dividend+1,f
  4604  0D8D  02AA               	subwf	___lwmod@dividend+1,f
  4605  0D8E                     l1626:	
  4606  0D8E  3001               	movlw	1
  4607  0D8F                     u1915:	
  4608  0D8F  1003               	clrc
  4609  0D90  0CA8               	rrf	___lwmod@divisor+1,f
  4610  0D91  0CA7               	rrf	___lwmod@divisor,f
  4611  0D92  3EFF               	addlw	-1
  4612  0D93  1D03               	skipz
  4613  0D94  2D8F               	goto	u1915
  4614  0D95  3001               	movlw	1
  4615  0D96  02AB               	subwf	___lwmod@counter,f
  4616  0D97  1D03               	btfss	3,2
  4617  0D98  2D80               	goto	l1622
  4618  0D99                     l1630:	
  4619  0D99  082A               	movf	___lwmod@dividend+1,w
  4620  0D9A  01A8               	clrf	?___lwmod+1
  4621  0D9B  07A8               	addwf	?___lwmod+1,f
  4622  0D9C  0829               	movf	___lwmod@dividend,w
  4623  0D9D  01A7               	clrf	?___lwmod
  4624  0D9E  07A7               	addwf	?___lwmod,f
  4625  0D9F  0008               	return
  4626  0DA0                     __end_of___lwmod:	
  4627                           
  4628                           	psect	text19
  4629  0E14                     __ptext19:	
  4630 ;; *************** function ___lwdiv *****************
  4631 ;; Defined at:
  4632 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  divisor         2    0[BANK0 ] unsigned int 
  4635 ;;  dividend        2    2[BANK0 ] unsigned int 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  quotient        2    5[BANK0 ] unsigned int 
  4638 ;;  counter         1    4[BANK0 ] unsigned char 
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  2    0[BANK0 ] unsigned int 
  4641 ;; Registers used:
  4642 ;;		wreg, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4648 ;;      Params:         0       4       0       0       0
  4649 ;;      Locals:         0       3       0       0       0
  4650 ;;      Temps:          1       0       0       0       0
  4651 ;;      Totals:         1       7       0       0       0
  4652 ;;Total ram usage:        8 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    2
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_printf
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           
  4663                           ;psect for function ___lwdiv
  4664  0E14                     ___lwdiv:	
  4665                           
  4666                           ;incstack = 0
  4667                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4668  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  4669  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  4670  0E16  01A5               	clrf	___lwdiv@quotient
  4671  0E17  01A6               	clrf	___lwdiv@quotient+1
  4672  0E18  0821               	movf	___lwdiv@divisor+1,w
  4673  0E19  0420               	iorwf	___lwdiv@divisor,w
  4674  0E1A  1903               	skipnz
  4675  0E1B  2E4D               	goto	l1780
  4676  0E1C  01A4               	clrf	___lwdiv@counter
  4677  0E1D  0AA4               	incf	___lwdiv@counter,f
  4678  0E1E                     l1768:	
  4679  0E1E  1BA1               	btfsc	___lwdiv@divisor+1,7
  4680  0E1F  2E2C               	goto	l1770
  4681  0E20  3001               	movlw	1
  4682  0E21                     u2275:	
  4683  0E21  1003               	clrc
  4684  0E22  0DA0               	rlf	___lwdiv@divisor,f
  4685  0E23  0DA1               	rlf	___lwdiv@divisor+1,f
  4686  0E24  3EFF               	addlw	-1
  4687  0E25  1D03               	skipz
  4688  0E26  2E21               	goto	u2275
  4689  0E27  3001               	movlw	1
  4690  0E28  00F4               	movwf	??___lwdiv
  4691  0E29  0874               	movf	??___lwdiv,w
  4692  0E2A  07A4               	addwf	___lwdiv@counter,f
  4693  0E2B  2E1E               	goto	l1768
  4694  0E2C                     l1770:	
  4695  0E2C  3001               	movlw	1
  4696  0E2D                     u2295:	
  4697  0E2D  1003               	clrc
  4698  0E2E  0DA5               	rlf	___lwdiv@quotient,f
  4699  0E2F  0DA6               	rlf	___lwdiv@quotient+1,f
  4700  0E30  3EFF               	addlw	-1
  4701  0E31  1D03               	skipz
  4702  0E32  2E2D               	goto	u2295
  4703  0E33  0821               	movf	___lwdiv@divisor+1,w
  4704  0E34  0223               	subwf	___lwdiv@dividend+1,w
  4705  0E35  1D03               	skipz
  4706  0E36  2E39               	goto	u2305
  4707  0E37  0820               	movf	___lwdiv@divisor,w
  4708  0E38  0222               	subwf	___lwdiv@dividend,w
  4709  0E39                     u2305:	
  4710  0E39  1C03               	skipc
  4711  0E3A  2E42               	goto	l1776
  4712  0E3B  0820               	movf	___lwdiv@divisor,w
  4713  0E3C  02A2               	subwf	___lwdiv@dividend,f
  4714  0E3D  0821               	movf	___lwdiv@divisor+1,w
  4715  0E3E  1C03               	skipc
  4716  0E3F  03A3               	decf	___lwdiv@dividend+1,f
  4717  0E40  02A3               	subwf	___lwdiv@dividend+1,f
  4718  0E41  1425               	bsf	___lwdiv@quotient,0
  4719  0E42                     l1776:	
  4720  0E42  3001               	movlw	1
  4721  0E43                     u2315:	
  4722  0E43  1003               	clrc
  4723  0E44  0CA1               	rrf	___lwdiv@divisor+1,f
  4724  0E45  0CA0               	rrf	___lwdiv@divisor,f
  4725  0E46  3EFF               	addlw	-1
  4726  0E47  1D03               	skipz
  4727  0E48  2E43               	goto	u2315
  4728  0E49  3001               	movlw	1
  4729  0E4A  02A4               	subwf	___lwdiv@counter,f
  4730  0E4B  1D03               	btfss	3,2
  4731  0E4C  2E2C               	goto	l1770
  4732  0E4D                     l1780:	
  4733  0E4D  0826               	movf	___lwdiv@quotient+1,w
  4734  0E4E  01A1               	clrf	?___lwdiv+1
  4735  0E4F  07A1               	addwf	?___lwdiv+1,f
  4736  0E50  0825               	movf	___lwdiv@quotient,w
  4737  0E51  01A0               	clrf	?___lwdiv
  4738  0E52  07A0               	addwf	?___lwdiv,f
  4739  0E53  0008               	return
  4740  0E54                     __end_of___lwdiv:	
  4741                           
  4742                           	psect	text20
  4743  0CBE                     __ptext20:	
  4744 ;; *************** function _isr *****************
  4745 ;; Defined at:
  4746 ;;		line 116 in file "main.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;		None
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;		None
  4751 ;; Return value:  Size  Location     Type
  4752 ;;		None               void
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0, pclath, cstack
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4760 ;;      Params:         0       0       0       0       0
  4761 ;;      Locals:         0       0       0       0       0
  4762 ;;      Temps:          4       0       0       0       0
  4763 ;;      Totals:         4       0       0       0       0
  4764 ;;Total ram usage:        4 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    1
  4767 ;; This function calls:
  4768 ;;		_tick_update
  4769 ;; This function is called by:
  4770 ;;		Interrupt level 1
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function _isr
  4776  0CBE                     _isr:	
  4777                           
  4778                           ;main.c: 119: tick_update();
  4779  0CBE  158A  24F1  158A   	fcall	_tick_update
  4780  0CC1  0873               	movf	??_isr+3,w
  4781  0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  4782  0CC3  1303               	bcf	3,6	;RP1=0, select bank0
  4783  0CC4  00FF               	movwf	127
  4784  0CC5  0872               	movf	??_isr+2,w
  4785  0CC6  008A               	movwf	10
  4786  0CC7  0871               	movf	??_isr+1,w
  4787  0CC8  0084               	movwf	4
  4788  0CC9  0E70               	swapf	??_isr^(0+-128),w
  4789  0CCA  0083               	movwf	3
  4790  0CCB  0EFE               	swapf	126,f
  4791  0CCC  0E7E               	swapf	126,w
  4792  0CCD  0009               	retfie
  4793  0CCE                     __end_of_isr:	
  4794                           
  4795                           	psect	intentry
  4796  0004                     __pintentry:	
  4797                           ;incstack = 0
  4798                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4799                           
  4800  0004                     interrupt_function:	
  4801  007E                     saved_w	set	btemp
  4802  0004  00FE               	movwf	btemp
  4803  0005  0E03               	swapf	3,w
  4804  0006  00F0               	movwf	??_isr
  4805  0007  0804               	movf	4,w
  4806  0008  00F1               	movwf	??_isr+1
  4807  0009  080A               	movf	10,w
  4808  000A  00F2               	movwf	??_isr+2
  4809  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4810  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4811  000D  087F               	movf	btemp+1,w
  4812  000E  00F3               	movwf	??_isr+3
  4813  000F  158A  2CBE         	ljmp	_isr
  4814                           
  4815                           	psect	text21
  4816  0CF1                     __ptext21:	
  4817 ;; *************** function _tick_update *****************
  4818 ;; Defined at:
  4819 ;;		line 50 in file "../Tick/Tick-PIC16.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;		None               void
  4826 ;; Registers used:
  4827 ;;		wreg
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4833 ;;      Params:         0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0
  4836 ;;      Totals:         0       0       0       0       0
  4837 ;;Total ram usage:        0 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_isr
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           
  4847                           ;psect for function _tick_update
  4848  0CF1                     _tick_update:	
  4849                           
  4850                           ;Tick-PIC16.c: 52: if (PIR1bits.TMR1IF) {
  4851                           
  4852                           ;incstack = 0
  4853                           ; Regs used in _tick_update: [wreg]
  4854  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  4855  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  4856  0CF3  1C0C               	btfss	12,0	;volatile
  4857  0CF4  0008               	return
  4858                           
  4859                           ;Tick-PIC16.c: 53: tickcnt++;
  4860  0CF5  3001               	movlw	1
  4861  0CF6  07F6               	addwf	_tickcnt,f	;volatile
  4862  0CF7  3000               	movlw	0
  4863  0CF8  1803               	skipnc
  4864  0CF9  3001               	movlw	1
  4865  0CFA  07F7               	addwf	_tickcnt+1,f	;volatile
  4866  0CFB  3000               	movlw	0
  4867  0CFC  1803               	skipnc
  4868  0CFD  3001               	movlw	1
  4869  0CFE  07F8               	addwf	_tickcnt+2,f	;volatile
  4870  0CFF  3000               	movlw	0
  4871  0D00  1803               	skipnc
  4872  0D01  3001               	movlw	1
  4873  0D02  07F9               	addwf	_tickcnt+3,f	;volatile
  4874                           
  4875                           ;Tick-PIC16.c: 54: PIR1bits.TMR1IF = 0;
  4876  0D03  100C               	bcf	12,0	;volatile
  4877  0D04  0008               	return
  4878  0D05                     __end_of_tick_update:	
  4879  0002                     
  4880                           	psect	functab
  4881  0100                     __pfunctab:	
  4882  0100                     __fptable:	
  4883  0100                     fptable:	
  4884  0100  00FF               	movwf	(btemp+1)& (0+127)
  4885  0101  3001               	movlw	high fptable
  4886  0102  008A               	movwf	10
  4887  0103  087F               	movf	(btemp+1)& (0+127),w
  4888  0104  0782               	addwf	2,f
  4889  0105                     fpbase:	
  4890  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4891  0106                     fp__time_provider:	
  4892  0106  158A  2D05         	ljmp	_time_provider
  4893  0108                     __end_of__fptable:	
  4894  007E                     btemp	set	126	;btemp
  4895  007E                     wtemp	set	126
  4896  007E                     wtemp0	set	126
  4897  0080                     wtemp1	set	128
  4898  0082                     wtemp2	set	130
  4899  0084                     wtemp3	set	132
  4900  0086                     wtemp4	set	134
  4901  0088                     wtemp5	set	136
  4902  007F                     wtemp6	set	127
  4903  007E                     ttemp	set	126
  4904  007E                     ttemp0	set	126
  4905  0081                     ttemp1	set	129
  4906  0084                     ttemp2	set	132
  4907  0087                     ttemp3	set	135
  4908  007F                     ttemp4	set	127
  4909  007E                     ltemp	set	126
  4910  007E                     ltemp0	set	126
  4911  0082                     ltemp1	set	130
  4912  0086                     ltemp2	set	134
  4913  0080                     ltemp3	set	128


Data Sizes:
    Strings     67
    Constant    22
    Data        4
    BSS         11
    Persistent  17
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     49      58
    BANK1            80     26      45
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 44
		 -> STR_2(CODE[44]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S365$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    time_set_provider@callback	PTR FTN()long  size(1) Largest target is 4
		 -> time_provider(), 

    time_break@timeinfo	PTR struct tm size(1) Largest target is 18
		 -> main@tinfo(BANK1[18]), 

    time_make@timeinfo	PTR struct tm size(1) Largest target is 18
		 -> main@tinfo(BANK1[18]), 

    time_provider_callback	PTR FTN()long  size(1) Largest target is 4
		 -> Absolute function(), time_provider(), 


Critical Paths under _main in COMMON

    _main->_time_set_provider
    _tick_get->_tick_read_internal
    _time_break->___llmod
    _time_is_leap->___lwmod
    _printf->___lwmod
    _printf->___wmul
    _printf->_isdigit
    ___lwmod->___lwdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_time_break
    _time_set_provider->_time_get
    _time_get->_time_set
    _time_set->_tick_get
    _time_make->_time_is_leap
    _time_break->_time_is_leap
    _time_is_leap->___lwmod
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   10069
                                             45 BANK0      4     4      0
                                              0 BANK1     26    26      0
                             _printf
                           _tick_get
                          _tick_init
                         _time_break
                           _time_get
                          _time_make
                           _time_set
                  _time_set_provider
 ---------------------------------------------------------------------------------
 (1) _time_set_provider                                    6     2      4     449
                                              5 COMMON     1     1      0
                                             24 BANK0      5     1      4
                           _time_get
 ---------------------------------------------------------------------------------
 (2) _time_get                                            12     8      4     260
                                             12 BANK0     12     8      4
                   Absolute function *
                           _tick_get
                      _time_provider *
                           _time_set
 ---------------------------------------------------------------------------------
 (3) _time_set                                             8     4      4     192
                                              4 BANK0      8     4      4
                           _tick_get
 ---------------------------------------------------------------------------------
 (4) _tick_get                                             4     0      4       0
                                              0 BANK0      4     0      4
                 _tick_read_internal
 ---------------------------------------------------------------------------------
 (5) _tick_read_internal                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _time_provider                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _time_make                                           17    13      4    2363
                                             17 BANK0     17    13      4
                             ___lmul
                       _time_is_leap
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     786
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _time_break                                          28    23      5    3679
                                             17 BANK0     28    23      5
                            ___lldiv
                            ___llmod
                       _time_is_leap
 ---------------------------------------------------------------------------------
 (2) _time_is_leap                                         5     3      2    1077
                                             12 BANK0      5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     752
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _tick_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    14     12    2538
                                             12 BANK0     26    14     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     622
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
                        _tick_update
 ---------------------------------------------------------------------------------
 (7) _tick_update                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
   _tick_get
     _tick_read_internal
   _tick_init
   _time_break
     ___lldiv
     ___llmod
     _time_is_leap
       ___lwmod
         ___lwdiv (ARG)
   _time_get
     Absolute function(Fake) *
     _tick_get *
       _tick_read_internal
     _time_provider *
     _time_set *
       _tick_get
         _tick_read_internal
   _time_make
     ___lmul
     _time_is_leap
       ___lwmod
         ___lwdiv (ARG)
   _time_set
     _tick_get
       _tick_read_internal
   _time_set_provider
     _time_get
       Absolute function(Fake) *
       _tick_get *
         _tick_read_internal
       _time_provider *
       _time_set *
         _tick_get
           _tick_read_internal

 _isr (ROOT)
   _tick_update

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1A      2D       7       56.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     31      3A       5       72.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      71      12        0.0%
ABS                  0      0      71       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Dec 05 12:38:05 2014

                          pc 0002                  __CFG_CP$OFF 0000                           l48 00FD  
                         l93 038F                           fsr 0004          ___wmul@multiplicand 0022  
                        l300 0D2A                          l216 065C                          l161 0D43  
                        l181 050E                          l199 05BF                 __CFG_CPD$OFF 0000  
                        _isr 0CBE                          fsr0 0004                          indf 0000  
               __CFG_FOSC$XT 0000                 __CFG_LVP$OFF 0000              ??_time_provider 0074  
                       l2030 06CE                         l1620 0D72                         l1622 0D80  
                       l1630 0D99                         l1702 07C7                         l1720 0046  
                       l1626 0D8E                         l1730 007E                         l1722 0056  
                       l1706 07DD                         l1650 0F90                         l1900 05DE  
                       l1820 041B                         l1804 0359                         l1652 0FB1  
                       l1902 05E2                         l1734 008B                         l1750 0E8C  
                       l1814 03E0                         l1806 0396                         l1646 0F51  
                       l1920 0613                         l1744 0E5E                         l1672 0E0C  
                       l1770 0E2C                         l1690 0D20                         l1930 0621  
                       l1914 05FF                         l1746 0E6E                         l1754 0E99  
                       l1818 039C                         l1780 0E4D                         l1684 0CBC  
                       l1916 0603                         l1924 061B                         l1908 05EC  
                       l1852 0513                         l1932 04EF                         l1668 0DFA  
                       l1836 0DB8                         l1870 0575                         l1854 051C  
                       l1846 0508                         l1776 0E42                         l1768 0E1E  
                       l1880 058E                         l1960 0222                         l1858 052A  
                       l1954 020C                         l1892 05B1                         l1884 0594  
                       l1868 0560                         l1980 02B5                         l1956 0210  
                       l1968 0277                         l1994 0304                         l1986 02CB  
                       l1988 02CD                         l1998 030C                         ?_isr 0070  
                       STR_1 00DC                         STR_2 00B0                         u2105 07DF  
                       u2115 07E7                         u2055 0D2B                         u2215 0E62  
                       u2305 0E39                         u2065 0D32                         u2145 004A  
                       u2315 0E43                         u2235 0E7C                         u2165 0058  
                       u2245 0E8D                         u2175 006D                         u2505 05A7  
                       u2185 007F                         u2345 036C                         u2275 0E21  
                       u2295 0E2D                         u2640 01D9                         u1905 0D86  
                       u2545 05CE                         u2641 01DA                         u2385 03AF  
                       u2642 01DF                         u1915 0D8F                         u2643 01E0  
                       u1933 0F2C                         u2735 02E9                         u1960 0FDC  
                       u2760 06F9                         u2745 02F7                         u1961 0FDD  
                       u2761 06FA                         u2746 02F8                         u2690 0298  
                       u1962 0FE2                         u2762 06FF                         u2747 02FD  
                       u2675 0257                         u1963 0FE3                         u2763 0700  
                       u2748 02FE                         u1885 0D75                         u2749 0303  
                       u2695 028B                         u1975 0FF5                         u2775 0712  
                       u2696 028C                         u2697 0291                         u2698 0292  
                       u2699 0297                 __CFG_WRT$OFF 0000                         _main 065D  
                       btemp 007E                         ltemp 007E                         start 0011  
                       ttemp 007E                         wtemp 007E                __CFG_IESO$OFF 0000  
              __CFG_MCLRE$ON 0000                        ??_isr 0070                        ?_main 0070  
              __CFG_WDTE$OFF 0000                        _ANSEL 009B              __end_of___lldiv 0094  
                      _T1CON 0010              __end_of___llmod 0EA2              __end_of___lwdiv 0E54  
            __end_of___lwmod 0DA0                        _TMR1H 000F                        _TMR1L 000E  
                      _TRISA 0085                        _TRISB 0086                        _TXREG 0019  
                      _TXSTA 0098               __CFG_CCPMX$RB0 0000          ___lmul@multiplicand 0024  
             __CFG_FCMEN$OFF 0000              __end_of_dpowers 00B0              __end_of_isdigit 0CBE  
                      _putch 00F3                        fpbase 0105  __size_of_tick_read_internal 0027  
             __CFG_BOREN$OFF 0000                        pclath 000A                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F              __initialization 0013                 __end_of_main 07BD  
                     ??_main 004D             ___llmod@dividend 0024                       ?_putch 0070  
           __end_of__fptable 0108               __CFG_PWRTE$OFF 0000                 ?_tick_update 0070  
                     ___lmul 07BD                       ___wmul 0D1E                    ??___lldiv 0074  
                  ??___llmod 0074                    ??___lwdiv 0074                    ??___lwmod 0075  
                     _printf 04E8                       fptable 0100             __end_of_tick_get 0CF1  
                     fptotal 0002                    ??_isdigit 0074             __end_of_time_get 1000  
           __end_of_time_set 0F00                       saved_w 007E        time_break@monthLength 0046  
    __end_of__initialization 0031               __pcstackCOMMON 0070                 __pidataBANK0 0CAC  
              __end_of_putch 0100                _sync_interval 0055                      ??_putch 0074  
                 __pbssBANK0 0059                   __pbssBANK1 00C7                   __pmaintext 065D  
  time_set_provider@callback 003C                      ?___lmul 0020                      ?___wmul 0020  
                 __pintentry 0004               ___lmul@product 0028           __size_of_tick_init 0010  
                    ?_printf 002C           __size_of_time_make 01BB             time_is_leap@year 002C  
                 __stringtab 0094        __end_of_time_provider 0D1E    time_set_provider@timespan 0038  
                  ?_tick_get 0020                    ?_time_get 002C                    ?_time_set 0024  
            __size_of___lmul 0041         __size_of_tick_update 0014                      ___lldiv 0034  
            __size_of___wmul 0025                      ___llmod 0E54                      ___lwdiv 0E14  
                    ___lwmod 0D6A           time_break@timeinfo 0035                      __ptext1 0DA0  
                    __ptext2 0F00                      __ptext3 0EA2                      __ptext4 0CDE  
                    __ptext5 0D43                      __ptext6 0D05                      __ptext7 032D  
                    __ptext8 07BD                      __ptext9 0108              __size_of_printf 0175  
                    _dpowers 00A6                      _isdigit 0CB0                 __size_of_isr 0010  
          time_make@timeinfo 0041                      _tickcnt 0076   __end_of_tick_read_internal 0D6A  
                    main@now 00A0         end_of_initialization 0031                ?_time_is_leap 002C  
          __end_of_tick_init 0CDE            __end_of_time_make 04E8              ___lldiv@divisor 0020  
            ___lldiv@counter 002C                   ??_tick_get 0075                   _tickbuffer 00C7  
                 ??_time_get 0030                    _RCSTAbits 0018                   ??_time_set 0028  
                    printf@c 0045                      printf@f 0042                  time_get@now 0034  
                 _time_break 0108            _time_set_provider 0DA0                  time_set@now 0024  
         ?_time_set_provider 0038          ??_time_set_provider 0075               ??_time_is_leap 002E  
                printf@width 0043    __end_of_time_set_provider 0DD9               __end_of___lmul 07FE  
             __end_of___wmul 0D43              time_break@xTime 0049              time_break@month 0048  
             __end_of_printf 065D          start_initialization 0013                  __end_of_isr 0CCE  
            ___llmod@divisor 0020             _time_is_leap$210 0030              ___llmod@counter 0075  
                   ??___lmul 0074                     ??___wmul 0074               _time_break$247 003E  
             _time_break$248 0040                  ?_time_break 0031              time_make@tstamp 003B  
                __pdataBANK0 0055                     ??_printf 0038         __end_of_month_length 00A6  
                __pbssCOMMON 0076                    ___latbits 0001                __pcstackBANK0 0020  
              __pcstackBANK1 00A0          __end_of__stringdata 00F3            __size_of__fptable 0008  
                  __pnvBANK0 0051                    __pnvBANK1 00BA             ___lwdiv@dividend 0022  
                  __pfunctab 0100   __size_of_time_set_provider 0039                     ?___lldiv 0020  
          __size_of_tick_get 0013                     ?___llmod 0020                     ?___lwdiv 0020  
                   ?___lwmod 0027         __end_of_time_is_leap 0E14            __size_of_time_get 0100  
          __size_of_time_set 005E                    __pstrings 0094                     ?_isdigit 0070  
     _time_provider_callback 0059             ___lwdiv@quotient 0025               __size_of_putch 000D  
        __size_of_time_break 0225            interrupt_function 0004               ___wmul@product 0074  
                   _PIE1bits 008C           _tick_read_internal 0D43                ??_tick_update 0070  
                  _tick_init 0CCE                     _PIR1bits 000C          _enTimeCurrentStatus 00C6  
                 time_make@i 003F                    _time_make 032D          ?_tick_read_internal 0070  
     __size_of_time_provider 0019             fp__time_provider 0106                  __stringbase 0099  
                __stringdata 00B0            ___wmul@multiplier 0020                   printf@_val 003D  
                 printf@flag 0041                   printf@prec 003C                    main@tinfo 00A8  
                  _sync_next 00C2               time_break@days 0042            ___lmul@multiplier 0020  
             time_break@year 0047         ??_tick_read_internal 0074                   ?_tick_init 0070  
                 ?_time_make 0031             __size_of___lldiv 0060             __size_of___llmod 004E  
           __size_of___lwdiv 0040             __size_of___lwmod 0036          __end_of_tick_update 0D05  
                _last_update 00BE           __end_of__stringtab 009A                  _isdigit$562 0074  
        time_break@timeinput 0031                     __fptable 0100             __size_of_isdigit 000E  
            ___lwdiv@divisor 0020              ___lwdiv@counter 0024                     __ptext10 0DD9  
                   __ptext11 0E54                     __ptext20 0CBE                     __ptext12 0034  
                   __ptext21 0CF1                     __ptext13 0CCE                     __ptext14 04E8  
                   __ptext15 00F3                     __ptext16 0CB0                     __ptext17 0D1E  
                   __ptext18 0D6A                     __ptext19 0E14                _time_provider 0D05  
              __size_of_main 0160                     _initialt 00BA                 _month_length 009A  
      __size_of_time_is_leap 003B                     _tick_get 0CDE                     _time_get 0F00  
                   _time_set 0EA2                 ??_time_break 0036                     main@last 00A4  
                   _sys_time 0051                    putch@data 0074                   _INTCONbits 000B  
                   isdigit@c 0075                     intlevel1 0100                 _time_is_leap 0DD9  
             ?_time_provider 0020           __end_of_time_break 032D             ___lwmod@dividend 0029  
           ___lldiv@dividend 0024                    stringcode 0094                  ??_tick_init 0074  
                _tick_update 0CF1                  ??_time_make 0035                     printf@ap 003B  
           ___lldiv@quotient 0028              ___lwmod@divisor 0027              ___lwmod@counter 002B  
                   stringdir 0094                     stringtab 0094  
