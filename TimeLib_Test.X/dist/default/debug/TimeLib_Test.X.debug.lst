

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Dec 05 18:48:58 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	functab,global,reloc=256,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     	;# 
    42  0001                     	;# 
    43  0002                     	;# 
    44  0003                     	;# 
    45  0004                     	;# 
    46  0005                     	;# 
    47  0006                     	;# 
    48  000A                     	;# 
    49  000B                     	;# 
    50  000C                     	;# 
    51  000D                     	;# 
    52  000E                     	;# 
    53  000E                     	;# 
    54  000F                     	;# 
    55  0010                     	;# 
    56  0011                     	;# 
    57  0012                     	;# 
    58  0013                     	;# 
    59  0014                     	;# 
    60  0015                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0017                     	;# 
    64  0018                     	;# 
    65  0019                     	;# 
    66  001A                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  0086                     	;# 
    72  008C                     	;# 
    73  008D                     	;# 
    74  008E                     	;# 
    75  008F                     	;# 
    76  0090                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  009F                     	;# 
    87  0105                     	;# 
    88  010C                     	;# 
    89  010D                     	;# 
    90  010E                     	;# 
    91  010F                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000D                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0017                     	;# 
   117  0018                     	;# 
   118  0019                     	;# 
   119  001A                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0105                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200                           
   201                           	psect	idataBANK0
   202  07FA                     __pidataBANK0:	
   203                           
   204                           ;initializer for _sync_interval
   205  07FA  3480               	retlw	128
   206  07FB  3451               	retlw	81
   207  07FC  3401               	retlw	1
   208  07FD  3400               	retlw	0
   209                           
   210                           	psect	strings
   211  0034                     __pstrings:	
   212  0034                     stringtab:	
   213  0034                     __stringtab:	
   214  0034                     stringcode:	
   215                           ;	String table - string pointers are 1 byte each
   216                           
   217  0034                     stringdir:	
   218  0034  3000               	movlw	high stringdir
   219  0035  008A               	movwf	10
   220  0036  0804               	movf	4,w
   221  0037  0A84               	incf	4,f
   222  0038  0782               	addwf	2,f
   223  0039                     __stringbase:	
   224  0039  3400               	retlw	0
   225  003A                     __end_of__stringtab:	
   226  003A                     _month_length:	
   227  003A  341F               	retlw	31
   228  003B  341C               	retlw	28
   229  003C  341F               	retlw	31
   230  003D  341E               	retlw	30
   231  003E  341F               	retlw	31
   232  003F  341E               	retlw	30
   233  0040  341F               	retlw	31
   234  0041  341F               	retlw	31
   235  0042  341E               	retlw	30
   236  0043  341F               	retlw	31
   237  0044  341E               	retlw	30
   238  0045  341F               	retlw	31
   239  0046                     __end_of_month_length:	
   240  0046                     _dpowers:	
   241  0046  3401               	retlw	1
   242  0047  3400               	retlw	0
   243  0048  340A               	retlw	10
   244  0049  3400               	retlw	0
   245  004A  3464               	retlw	100
   246  004B  3400               	retlw	0
   247  004C  34E8               	retlw	232
   248  004D  3403               	retlw	3
   249  004E  3410               	retlw	16
   250  004F  3427               	retlw	39
   251  0050                     __end_of_dpowers:	
   252  0050                     __stringdata:	
   253  0050                     STR_2:	
   254  0050  3454               	retlw	84	;'T'
   255  0051  3469               	retlw	105	;'i'
   256  0052  346D               	retlw	109	;'m'
   257  0053  3465               	retlw	101	;'e'
   258  0054  343A               	retlw	58	;':'
   259  0055  3420               	retlw	32	;' '
   260  0056  3425               	retlw	37	;'%'
   261  0057  3430               	retlw	48	;'0'
   262  0058  3432               	retlw	50	;'2'
   263  0059  3464               	retlw	100	;'d'
   264  005A  343A               	retlw	58	;':'
   265  005B  3425               	retlw	37	;'%'
   266  005C  3430               	retlw	48	;'0'
   267  005D  3432               	retlw	50	;'2'
   268  005E  3464               	retlw	100	;'d'
   269  005F  343A               	retlw	58	;':'
   270  0060  3425               	retlw	37	;'%'
   271  0061  3430               	retlw	48	;'0'
   272  0062  3432               	retlw	50	;'2'
   273  0063  3464               	retlw	100	;'d'
   274  0064  3420               	retlw	32	;' '
   275  0065  3444               	retlw	68	;'D'
   276  0066  3461               	retlw	97	;'a'
   277  0067  3474               	retlw	116	;'t'
   278  0068  3465               	retlw	101	;'e'
   279  0069  343A               	retlw	58	;':'
   280  006A  3420               	retlw	32	;' '
   281  006B  3425               	retlw	37	;'%'
   282  006C  3430               	retlw	48	;'0'
   283  006D  3432               	retlw	50	;'2'
   284  006E  3464               	retlw	100	;'d'
   285  006F  342F               	retlw	47	;'/'
   286  0070  3425               	retlw	37	;'%'
   287  0071  3430               	retlw	48	;'0'
   288  0072  3432               	retlw	50	;'2'
   289  0073  3464               	retlw	100	;'d'
   290  0074  342F               	retlw	47	;'/'
   291  0075  3425               	retlw	37	;'%'
   292  0076  3430               	retlw	48	;'0'
   293  0077  3432               	retlw	50	;'2'
   294  0078  3464               	retlw	100	;'d'
   295  0079  340D               	retlw	13
   296  007A  340A               	retlw	10
   297  007B  3400               	retlw	0
   298  007C                     STR_1:	
   299  007C  3454               	retlw	84	;'T'
   300  007D  3469               	retlw	105	;'i'
   301  007E  346D               	retlw	109	;'m'
   302  007F  3465               	retlw	101	;'e'
   303  0080  344C               	retlw	76	;'L'
   304  0081  3469               	retlw	105	;'i'
   305  0082  3462               	retlw	98	;'b'
   306  0083  3420               	retlw	32	;' '
   307  0084  3454               	retlw	84	;'T'
   308  0085  3465               	retlw	101	;'e'
   309  0086  3473               	retlw	115	;'s'
   310  0087  3474               	retlw	116	;'t'
   311  0088  3420               	retlw	32	;' '
   312  0089  3450               	retlw	80	;'P'
   313  008A  3472               	retlw	114	;'r'
   314  008B  346F               	retlw	111	;'o'
   315  008C  3467               	retlw	103	;'g'
   316  008D  3472               	retlw	114	;'r'
   317  008E  3461               	retlw	97	;'a'
   318  008F  346D               	retlw	109	;'m'
   319  0090  340D               	retlw	13
   320  0091  340A               	retlw	10
   321  0092  3400               	retlw	0
   322  0093                     __end_of__stringdata:	
   323                           
   324                           ; #config settings
   325  0000                     
   326                           	psect	nvBANK0
   327  0059                     __pnvBANK0:	
   328  0059                     _sys_time:	
   329  0059                     	ds	4
   330  005D                     _enTimeCurrentStatus:	
   331  005D                     	ds	1
   332                           
   333                           	psect	nvBANK1
   334  00AF                     __pnvBANK1:	
   335  00AF                     _initialt:	
   336  00AF                     	ds	4
   337  00B3                     _last_update:	
   338  00B3                     	ds	4
   339  00B7                     _sync_next:	
   340  00B7                     	ds	4
   341  000B                     _INTCONbits	set	11
   342  000C                     _PIR1bits	set	12
   343  0018                     _RCSTAbits	set	24
   344  0010                     _T1CON	set	16
   345  000F                     _TMR1H	set	15
   346  000E                     _TMR1L	set	14
   347  0019                     _TXREG	set	25
   348  009B                     _ANSEL	set	155
   349  008C                     _PIE1bits	set	140
   350  0085                     _TRISA	set	133
   351  0086                     _TRISB	set	134
   352  0098                     _TXSTA	set	152
   353                           
   354                           	psect	cinit
   355  0013                     start_initialization:	
   356  0013                     __initialization:	
   357                           
   358                           ; Clear objects allocated to COMMON
   359  0013  01F6               	clrf	__pbssCOMMON& (0+127)
   360  0014  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   361  0015  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   362  0016  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   363                           
   364                           ; Clear objects allocated to BANK0
   365  0017  01E2               	clrf	__pbssBANK0& (0+127)
   366                           
   367                           ; Clear objects allocated to BANK1
   368  0018  1683               	bsf	3,5	;RP0=1, select bank1
   369  0019  1303               	bcf	3,6	;RP1=0, select bank1
   370  001A  01BB               	clrf	__pbssBANK1& (0+127)
   371  001B  01BC               	clrf	(__pbssBANK1+1)& (0+127)
   372  001C  01BD               	clrf	(__pbssBANK1+2)& (0+127)
   373  001D  01BE               	clrf	(__pbssBANK1+3)& (0+127)
   374  001E  01BF               	clrf	(__pbssBANK1+4)& (0+127)
   375  001F  01C0               	clrf	(__pbssBANK1+5)& (0+127)
   376                           
   377                           ; Initialize objects allocated to BANK0
   378  0020  1283               	bcf	3,5	;RP0=0, select bank0
   379  0021  1303               	bcf	3,6	;RP1=0, select bank0
   380  0022  118A  27FA  118A   	fcall	__pidataBANK0	;fetch initializer
   381  0025  00DE               	movwf	__pdataBANK0& (0+127)
   382  0026  118A  27FB  118A   	fcall	__pidataBANK0+1	;fetch initializer
   383  0029  00DF               	movwf	(__pdataBANK0+1)& (0+127)
   384  002A  118A  27FC  118A   	fcall	__pidataBANK0+2	;fetch initializer
   385  002D  00E0               	movwf	(__pdataBANK0+2)& (0+127)
   386  002E  118A  27FD         	fcall	__pidataBANK0+3	;fetch initializer
   387  0030  00E1               	movwf	(__pdataBANK0+3)& (0+127)
   388  0031                     end_of_initialization:	
   389                           ;End of C runtime variable initialization code
   390                           
   391  0031                     __end_of__initialization:	
   392  0031  0183               	clrf	3
   393  0032  118A  2E19         	ljmp	_main	;jump to C main() function
   394                           
   395                           	psect	bssCOMMON
   396  0076                     __pbssCOMMON:	
   397  0076                     _tickcnt:	
   398  0076                     	ds	4
   399                           
   400                           	psect	bssBANK0
   401  0062                     __pbssBANK0:	
   402  0062                     _time_provider_callback:	
   403  0062                     	ds	1
   404                           
   405                           	psect	dataBANK0
   406  005E                     __pdataBANK0:	
   407  005E                     _sync_interval:	
   408  005E                     	ds	4
   409                           
   410                           	psect	bssBANK1
   411  00BB                     __pbssBANK1:	
   412  00BB                     _tickbuffer:	
   413  00BB                     	ds	6
   414                           
   415                           	psect	cstackBANK1
   416  00A0                     __pcstackBANK1:	
   417  00A0                     main@now:	
   418                           
   419                           ; 4 bytes @ 0x0
   420  00A0                     	ds	4
   421  00A4                     main@last:	
   422                           
   423                           ; 4 bytes @ 0x4
   424  00A4                     	ds	4
   425  00A8                     main@tinfo:	
   426                           
   427                           ; 7 bytes @ 0x8
   428  00A8                     	ds	7
   429                           
   430                           	psect	cstackCOMMON
   431  0070                     __pcstackCOMMON:	
   432  0070                     ?_tick_init:	
   433  0070                     ?_tick_update:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0070                     ??_tick_update:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0070                     ?_tick_read_internal:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0070                     ?_isdigit:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0070                     ?_main:	
   446                           ; 1 bit 
   447                           
   448  0070                     ?_putch:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0070                     ?_isr:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0070                     ??_isr:	
   455                           ; 0 bytes @ 0x0
   456                           
   457                           
   458                           ; 0 bytes @ 0x0
   459  0070                     	ds	4
   460  0074                     ??_tick_init:	
   461  0074                     ??_time_provider:	
   462                           ; 0 bytes @ 0x4
   463                           
   464  0074                     ??_tick_read_internal:	
   465                           ; 0 bytes @ 0x4
   466                           
   467  0074                     ??_isdigit:	
   468                           ; 0 bytes @ 0x4
   469                           
   470  0074                     ??_putch:	
   471                           ; 0 bytes @ 0x4
   472                           
   473  0074                     ??___wmul:	
   474                           ; 0 bytes @ 0x4
   475                           
   476  0074                     ??___lmul:	
   477                           ; 0 bytes @ 0x4
   478                           
   479  0074                     ??___lldiv:	
   480                           ; 0 bytes @ 0x4
   481                           
   482  0074                     ??___llmod:	
   483                           ; 0 bytes @ 0x4
   484                           
   485  0074                     ??___lwdiv:	
   486                           ; 0 bytes @ 0x4
   487                           
   488  0074                     putch@data:	
   489                           ; 0 bytes @ 0x4
   490                           
   491  0074                     _isdigit$552:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     ___wmul@product:	
   495                           ; 1 bytes @ 0x4
   496                           
   497                           
   498                           ; 2 bytes @ 0x4
   499  0074                     	ds	1
   500  0075                     ??_time_set_provider:	
   501  0075                     ??_tick_get:	
   502                           ; 0 bytes @ 0x5
   503                           
   504  0075                     ??___lwmod:	
   505                           ; 0 bytes @ 0x5
   506                           
   507  0075                     isdigit@c:	
   508                           ; 0 bytes @ 0x5
   509                           
   510  0075                     ___llmod@counter:	
   511                           ; 1 bytes @ 0x5
   512                           
   513                           
   514                           ; 1 bytes @ 0x5
   515  0075                     	ds	1
   516                           
   517                           	psect	cstackBANK0
   518  0020                     __pcstackBANK0:	
   519  0020                     ?___wmul:	
   520  0020                     ?___lwdiv:	
   521                           ; 2 bytes @ 0x0
   522                           
   523  0020                     ?_time_provider:	
   524                           ; 2 bytes @ 0x0
   525                           
   526  0020                     ?_tick_get:	
   527                           ; 4 bytes @ 0x0
   528                           
   529  0020                     ?___lmul:	
   530                           ; 4 bytes @ 0x0
   531                           
   532  0020                     ?___lldiv:	
   533                           ; 4 bytes @ 0x0
   534                           
   535  0020                     ?___llmod:	
   536                           ; 4 bytes @ 0x0
   537                           
   538  0020                     ___wmul@multiplier:	
   539                           ; 4 bytes @ 0x0
   540                           
   541  0020                     ___lwdiv@divisor:	
   542                           ; 2 bytes @ 0x0
   543                           
   544  0020                     ___lmul@multiplier:	
   545                           ; 2 bytes @ 0x0
   546                           
   547  0020                     ___lldiv@divisor:	
   548                           ; 4 bytes @ 0x0
   549                           
   550  0020                     ___llmod@divisor:	
   551                           ; 4 bytes @ 0x0
   552                           
   553                           
   554                           ; 4 bytes @ 0x0
   555  0020                     	ds	2
   556  0022                     ___wmul@multiplicand:	
   557  0022                     ___lwdiv@dividend:	
   558                           ; 2 bytes @ 0x2
   559                           
   560                           
   561                           ; 2 bytes @ 0x2
   562  0022                     	ds	2
   563  0024                     ?_time_set:	
   564  0024                     ___lwdiv@counter:	
   565                           ; 0 bytes @ 0x4
   566                           
   567  0024                     time_set@now:	
   568                           ; 1 bytes @ 0x4
   569                           
   570  0024                     ___lmul@multiplicand:	
   571                           ; 4 bytes @ 0x4
   572                           
   573  0024                     ___lldiv@dividend:	
   574                           ; 4 bytes @ 0x4
   575                           
   576  0024                     ___llmod@dividend:	
   577                           ; 4 bytes @ 0x4
   578                           
   579                           
   580                           ; 4 bytes @ 0x4
   581  0024                     	ds	1
   582  0025                     ___lwdiv@quotient:	
   583                           
   584                           ; 2 bytes @ 0x5
   585  0025                     	ds	2
   586  0027                     ?___lwmod:	
   587  0027                     ___lwmod@divisor:	
   588                           ; 2 bytes @ 0x7
   589                           
   590                           
   591                           ; 2 bytes @ 0x7
   592  0027                     	ds	1
   593  0028                     ??_time_set:	
   594  0028                     ___lmul@product:	
   595                           ; 0 bytes @ 0x8
   596                           
   597  0028                     ___lldiv@quotient:	
   598                           ; 4 bytes @ 0x8
   599                           
   600                           
   601                           ; 4 bytes @ 0x8
   602  0028                     	ds	1
   603  0029                     ___lwmod@dividend:	
   604                           
   605                           ; 2 bytes @ 0x9
   606  0029                     	ds	2
   607  002B                     ___lwmod@counter:	
   608                           
   609                           ; 1 bytes @ 0xB
   610  002B                     	ds	1
   611  002C                     ?_printf:	
   612  002C                     ?_time_is_leap:	
   613                           ; 2 bytes @ 0xC
   614                           
   615  002C                     ?_time_get:	
   616                           ; 2 bytes @ 0xC
   617                           
   618  002C                     ___lldiv@counter:	
   619                           ; 4 bytes @ 0xC
   620                           
   621  002C                     time_is_leap@year:	
   622                           ; 1 bytes @ 0xC
   623                           
   624                           
   625                           ; 2 bytes @ 0xC
   626  002C                     	ds	2
   627  002E                     ??_time_is_leap:	
   628                           
   629                           ; 0 bytes @ 0xE
   630  002E                     	ds	2
   631  0030                     ??_time_get:	
   632  0030                     _time_is_leap$204:	
   633                           ; 0 bytes @ 0x10
   634                           
   635                           
   636                           ; 1 bytes @ 0x10
   637  0030                     	ds	1
   638  0031                     ?_time_break:	
   639  0031                     ?_time_make:	
   640                           ; 0 bytes @ 0x11
   641                           
   642  0031                     time_break@timeinput:	
   643                           ; 4 bytes @ 0x11
   644                           
   645                           
   646                           ; 4 bytes @ 0x11
   647  0031                     	ds	3
   648  0034                     time_get@now:	
   649                           
   650                           ; 4 bytes @ 0x14
   651  0034                     	ds	1
   652  0035                     ??_time_make:	
   653  0035                     time_break@timeinfo:	
   654                           ; 0 bytes @ 0x15
   655                           
   656                           
   657                           ; 1 bytes @ 0x15
   658  0035                     	ds	1
   659  0036                     ??_time_break:	
   660                           
   661                           ; 0 bytes @ 0x16
   662  0036                     	ds	2
   663  0038                     ?_time_set_provider:	
   664  0038                     ??_printf:	
   665                           ; 0 bytes @ 0x18
   666                           
   667  0038                     time_set_provider@timespan:	
   668                           ; 0 bytes @ 0x18
   669                           
   670                           
   671                           ; 4 bytes @ 0x18
   672  0038                     	ds	1
   673  0039                     time_make@tstamp:	
   674                           
   675                           ; 4 bytes @ 0x19
   676  0039                     	ds	2
   677  003B                     printf@ap:	
   678                           
   679                           ; 1 bytes @ 0x1B
   680  003B                     	ds	1
   681  003C                     time_set_provider@callback:	
   682  003C                     printf@prec:	
   683                           ; 1 bytes @ 0x1C
   684                           
   685                           
   686                           ; 1 bytes @ 0x1C
   687  003C                     	ds	1
   688  003D                     time_make@i:	
   689  003D                     printf@_val:	
   690                           ; 2 bytes @ 0x1D
   691                           
   692                           
   693                           ; 4 bytes @ 0x1D
   694  003D                     	ds	1
   695  003E                     _time_break$237:	
   696                           
   697                           ; 2 bytes @ 0x1E
   698  003E                     	ds	1
   699  003F                     time_make@timeinfo:	
   700                           
   701                           ; 1 bytes @ 0x1F
   702  003F                     	ds	1
   703  0040                     _time_break$238:	
   704                           
   705                           ; 2 bytes @ 0x20
   706  0040                     	ds	1
   707  0041                     printf@flag:	
   708                           
   709                           ; 1 bytes @ 0x21
   710  0041                     	ds	1
   711  0042                     printf@f:	
   712  0042                     time_break@days:	
   713                           ; 1 bytes @ 0x22
   714                           
   715                           
   716                           ; 4 bytes @ 0x22
   717  0042                     	ds	1
   718  0043                     printf@width:	
   719                           
   720                           ; 2 bytes @ 0x23
   721  0043                     	ds	2
   722  0045                     printf@c:	
   723                           
   724                           ; 1 bytes @ 0x25
   725  0045                     	ds	1
   726  0046                     time_break@monthLength:	
   727                           
   728                           ; 1 bytes @ 0x26
   729  0046                     	ds	1
   730  0047                     time_break@year:	
   731                           
   732                           ; 1 bytes @ 0x27
   733  0047                     	ds	1
   734  0048                     time_break@month:	
   735                           
   736                           ; 1 bytes @ 0x28
   737  0048                     	ds	1
   738  0049                     time_break@xTime:	
   739                           
   740                           ; 4 bytes @ 0x29
   741  0049                     	ds	4
   742  004D                     ??_main:	
   743                           
   744                           ; 0 bytes @ 0x2D
   745  004D                     	ds	12
   746                           
   747                           	psect	maintext
   748  0619                     __pmaintext:	
   749 ;;
   750 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
   751 ;;
   752 ;; *************** function _main *****************
   753 ;; Defined at:
   754 ;;		line 39 in file "main.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;  tinfo           7    8[BANK1 ] struct tm_t
   759 ;;  last            4    4[BANK1 ] unsigned long 
   760 ;;  now             4    0[BANK1 ] unsigned long 
   761 ;; Return value:  Size  Location     Type
   762 ;;		None               void
   763 ;; Registers used:
   764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 17F/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         0       0       0       0       0
   771 ;;      Locals:         0       0      15       0       0
   772 ;;      Temps:          0      12       0       0       0
   773 ;;      Totals:         0      12      15       0       0
   774 ;;Total ram usage:       27 bytes
   775 ;; Hardware stack levels required when called:    7
   776 ;; This function calls:
   777 ;;		_printf
   778 ;;		_tick_get
   779 ;;		_tick_init
   780 ;;		_time_break
   781 ;;		_time_get
   782 ;;		_time_make
   783 ;;		_time_set
   784 ;;		_time_set_provider
   785 ;; This function is called by:
   786 ;;		Startup code after reset
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           
   791                           ;psect for function _main
   792  0619                     _main:	
   793                           
   794                           ;main.c: 41: ANSEL = 0x00;
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   798  0619  1683               	bsf	3,5	;RP0=1, select bank1
   799  061A  1303               	bcf	3,6	;RP1=0, select bank1
   800  061B  019B               	clrf	27	;volatile
   801                           
   802                           ;main.c: 42: TRISA = 0xFF;
   803  061C  30FF               	movlw	255
   804  061D  0085               	movwf	5	;volatile
   805                           
   806                           ;main.c: 43: TRISB = 0b00000100;
   807  061E  3004               	movlw	4
   808  061F  0086               	movwf	6	;volatile
   809                           
   810                           ;main.c: 46: struct tm_t tinfo;
   811                           ;main.c: 49: time_t now;
   812                           ;main.c: 52: uint32_t last = 0;
   813  0620  3000               	movlw	0
   814  0621  00A7               	movwf	(main@last+3)^(0+128)
   815  0622  3000               	movlw	0
   816  0623  00A6               	movwf	(main@last+2)^(0+128)
   817  0624  3000               	movlw	0
   818  0625  00A5               	movwf	(main@last+1)^(0+128)
   819  0626  3000               	movlw	0
   820  0627  00A4               	movwf	main@last^(0+128)
   821                           
   822                           ;main.c: 55: tinfo.tm_year = 14;
   823  0628  300E               	movlw	14
   824  0629  1283               	bcf	3,5	;RP0=0, select bank0
   825  062A  1303               	bcf	3,6	;RP1=0, select bank0
   826  062B  00CD               	movwf	??_main
   827  062C  084D               	movf	??_main,w
   828  062D  1683               	bsf	3,5	;RP0=1, select bank1
   829  062E  1303               	bcf	3,6	;RP1=0, select bank1
   830  062F  00AE               	movwf	(main@tinfo^(0+128)+6)
   831                           
   832                           ;main.c: 56: tinfo.tm_mon = 1;
   833  0630  01AD               	clrf	(main@tinfo^(0+128)+5)
   834  0631  0AAD               	incf	(main@tinfo^(0+128)+5),f
   835                           
   836                           ;main.c: 57: tinfo.tm_mday = 1;
   837  0632  01AC               	clrf	(main@tinfo^(0+128)+4)
   838  0633  0AAC               	incf	(main@tinfo^(0+128)+4),f
   839                           
   840                           ;main.c: 58: tinfo.tm_hour = 13;
   841  0634  300D               	movlw	13
   842  0635  1283               	bcf	3,5	;RP0=0, select bank0
   843  0636  1303               	bcf	3,6	;RP1=0, select bank0
   844  0637  00CD               	movwf	??_main
   845  0638  084D               	movf	??_main,w
   846  0639  1683               	bsf	3,5	;RP0=1, select bank1
   847  063A  1303               	bcf	3,6	;RP1=0, select bank1
   848  063B  00AA               	movwf	(main@tinfo^(0+128)+2)
   849                           
   850                           ;main.c: 59: tinfo.tm_min = 55;
   851  063C  3037               	movlw	55
   852  063D  1283               	bcf	3,5	;RP0=0, select bank0
   853  063E  1303               	bcf	3,6	;RP1=0, select bank0
   854  063F  00CD               	movwf	??_main
   855  0640  084D               	movf	??_main,w
   856  0641  1683               	bsf	3,5	;RP0=1, select bank1
   857  0642  1303               	bcf	3,6	;RP1=0, select bank1
   858  0643  00A9               	movwf	(main@tinfo^(0+128)+1)
   859                           
   860                           ;main.c: 60: tinfo.tm_sec = 30;
   861  0644  301E               	movlw	30
   862  0645  1283               	bcf	3,5	;RP0=0, select bank0
   863  0646  1303               	bcf	3,6	;RP1=0, select bank0
   864  0647  00CD               	movwf	??_main
   865  0648  084D               	movf	??_main,w
   866  0649  1683               	bsf	3,5	;RP0=1, select bank1
   867  064A  1303               	bcf	3,6	;RP1=0, select bank1
   868  064B  00A8               	movwf	main@tinfo^(0+128)
   869                           
   870                           ;main.c: 63: tick_init();
   871  064C  118A  20EF  118A   	fcall	_tick_init
   872                           
   873                           ;main.c: 65: initialt = time_make(&tinfo);
   874  064F  30A8               	movlw	main@tinfo& (0+255)
   875  0650  118A  230E  118A   	fcall	_time_make
   876  0653  1283               	bcf	3,5	;RP0=0, select bank0
   877  0654  1303               	bcf	3,6	;RP1=0, select bank0
   878  0655  0834               	movf	?_time_make+3,w
   879  0656  1683               	bsf	3,5	;RP0=1, select bank1
   880  0657  1303               	bcf	3,6	;RP1=0, select bank1
   881  0658  00B2               	movwf	(_initialt+3)^(0+128)
   882  0659  1283               	bcf	3,5	;RP0=0, select bank0
   883  065A  1303               	bcf	3,6	;RP1=0, select bank0
   884  065B  0833               	movf	?_time_make+2,w
   885  065C  1683               	bsf	3,5	;RP0=1, select bank1
   886  065D  1303               	bcf	3,6	;RP1=0, select bank1
   887  065E  00B1               	movwf	(_initialt+2)^(0+128)
   888  065F  1283               	bcf	3,5	;RP0=0, select bank0
   889  0660  1303               	bcf	3,6	;RP1=0, select bank0
   890  0661  0832               	movf	?_time_make+1,w
   891  0662  1683               	bsf	3,5	;RP0=1, select bank1
   892  0663  1303               	bcf	3,6	;RP1=0, select bank1
   893  0664  00B0               	movwf	(_initialt+1)^(0+128)
   894  0665  1283               	bcf	3,5	;RP0=0, select bank0
   895  0666  1303               	bcf	3,6	;RP1=0, select bank0
   896  0667  0831               	movf	?_time_make,w
   897  0668  1683               	bsf	3,5	;RP0=1, select bank1
   898  0669  1303               	bcf	3,6	;RP1=0, select bank1
   899  066A  00AF               	movwf	_initialt^(0+128)
   900                           
   901                           ;main.c: 67: time_set(initialt);
   902  066B  0832               	movf	(_initialt+3)^(0+128),w
   903  066C  1283               	bcf	3,5	;RP0=0, select bank0
   904  066D  1303               	bcf	3,6	;RP1=0, select bank0
   905  066E  00A7               	movwf	time_set@now+3
   906  066F  1683               	bsf	3,5	;RP0=1, select bank1
   907  0670  1303               	bcf	3,6	;RP1=0, select bank1
   908  0671  0831               	movf	(_initialt+2)^(0+128),w
   909  0672  1283               	bcf	3,5	;RP0=0, select bank0
   910  0673  1303               	bcf	3,6	;RP1=0, select bank0
   911  0674  00A6               	movwf	time_set@now+2
   912  0675  1683               	bsf	3,5	;RP0=1, select bank1
   913  0676  1303               	bcf	3,6	;RP1=0, select bank1
   914  0677  0830               	movf	(_initialt+1)^(0+128),w
   915  0678  1283               	bcf	3,5	;RP0=0, select bank0
   916  0679  1303               	bcf	3,6	;RP1=0, select bank0
   917  067A  00A5               	movwf	time_set@now+1
   918  067B  1683               	bsf	3,5	;RP0=1, select bank1
   919  067C  1303               	bcf	3,6	;RP1=0, select bank1
   920  067D  082F               	movf	_initialt^(0+128),w
   921  067E  1283               	bcf	3,5	;RP0=0, select bank0
   922  067F  1303               	bcf	3,6	;RP1=0, select bank0
   923  0680  00A4               	movwf	time_set@now
   924  0681  118A  2093  118A   	fcall	_time_set
   925                           
   926                           ;main.c: 69: time_set_provider(&time_provider, (86400UL));
   927  0684  3000               	movlw	0
   928  0685  1283               	bcf	3,5	;RP0=0, select bank0
   929  0686  1303               	bcf	3,6	;RP1=0, select bank0
   930  0687  00BB               	movwf	time_set_provider@timespan+3
   931  0688  3001               	movlw	1
   932  0689  00BA               	movwf	time_set_provider@timespan+2
   933  068A  3051               	movlw	81
   934  068B  00B9               	movwf	time_set_provider@timespan+1
   935  068C  3080               	movlw	128
   936  068D  00B8               	movwf	time_set_provider@timespan
   937  068E  3001               	movlw	(fp__time_provider-fpbase)& (0+255)
   938  068F  158A  25C4  118A   	fcall	_time_set_provider
   939                           
   940                           ;main.c: 71: printf("TimeLib Test Program\r\n");
   941  0692  3043               	movlw	(STR_1-__stringbase)& (0+255)
   942  0693                     L1:	
   943  0693  118A  24A4  118A   	fcall	_printf
   944  0696                     l2020:	
   945                           ;main.c: 73: for (;;) {
   946                           
   947                           
   948                           ;main.c: 75: if (tick_get() - last > ((unsigned long long)((1000000 + 128ull)/8ull))) {
   949  0696  1683               	bsf	3,5	;RP0=1, select bank1
   950  0697  1303               	bcf	3,6	;RP1=0, select bank1
   951  0698  0924               	comf	main@last^(0+128),w
   952  0699  1283               	bcf	3,5	;RP0=0, select bank0
   953  069A  1303               	bcf	3,6	;RP1=0, select bank0
   954  069B  00CD               	movwf	??_main
   955  069C  1683               	bsf	3,5	;RP0=1, select bank1
   956  069D  1303               	bcf	3,6	;RP1=0, select bank1
   957  069E  0925               	comf	(main@last+1)^(0+128),w
   958  069F  1283               	bcf	3,5	;RP0=0, select bank0
   959  06A0  1303               	bcf	3,6	;RP1=0, select bank0
   960  06A1  00CE               	movwf	??_main+1
   961  06A2  1683               	bsf	3,5	;RP0=1, select bank1
   962  06A3  1303               	bcf	3,6	;RP1=0, select bank1
   963  06A4  0926               	comf	(main@last+2)^(0+128),w
   964  06A5  1283               	bcf	3,5	;RP0=0, select bank0
   965  06A6  1303               	bcf	3,6	;RP1=0, select bank0
   966  06A7  00CF               	movwf	??_main+2
   967  06A8  1683               	bsf	3,5	;RP0=1, select bank1
   968  06A9  1303               	bcf	3,6	;RP1=0, select bank1
   969  06AA  0927               	comf	(main@last+3)^(0+128),w
   970  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   971  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   972  06AD  00D0               	movwf	??_main+3
   973  06AE  0ACD               	incf	??_main,f
   974  06AF  1903               	skipnz
   975  06B0  0ACE               	incf	??_main+1,f
   976  06B1  1903               	skipnz
   977  06B2  0ACF               	incf	??_main+2,f
   978  06B3  1903               	skipnz
   979  06B4  0AD0               	incf	??_main+3,f
   980  06B5  158A  2529  118A   	fcall	_tick_get
   981  06B8  1283               	bcf	3,5	;RP0=0, select bank0
   982  06B9  1303               	bcf	3,6	;RP1=0, select bank0
   983  06BA  0820               	movf	?_tick_get,w
   984  06BB  07CD               	addwf	??_main,f
   985  06BC  0821               	movf	?_tick_get+1,w
   986  06BD  1803               	skipnc
   987  06BE  0F21               	incfsz	?_tick_get+1,w
   988  06BF  2EC1               	goto	u2760
   989  06C0  2EC2               	goto	u2761
   990  06C1                     u2760:	
   991  06C1  07CE               	addwf	??_main+1,f
   992  06C2                     u2761:	
   993  06C2  0822               	movf	?_tick_get+2,w
   994  06C3  1803               	skipnc
   995  06C4  0F22               	incfsz	?_tick_get+2,w
   996  06C5  2EC7               	goto	u2762
   997  06C6  2EC8               	goto	u2763
   998  06C7                     u2762:	
   999  06C7  07CF               	addwf	??_main+2,f
  1000  06C8                     u2763:	
  1001  06C8  0823               	movf	?_tick_get+3,w
  1002  06C9  1803               	skipnc
  1003  06CA  0A23               	incf	?_tick_get+3,w
  1004  06CB  07D0               	addwf	??_main+3,f
  1005  06CC  3000               	movlw	0
  1006  06CD  0250               	subwf	??_main+3,w
  1007  06CE  1D03               	skipz
  1008  06CF  2EDA               	goto	u2775
  1009  06D0  3001               	movlw	1
  1010  06D1  024F               	subwf	??_main+2,w
  1011  06D2  1D03               	skipz
  1012  06D3  2EDA               	goto	u2775
  1013  06D4  30E8               	movlw	232
  1014  06D5  024E               	subwf	??_main+1,w
  1015  06D6  1D03               	skipz
  1016  06D7  2EDA               	goto	u2775
  1017  06D8  3059               	movlw	89
  1018  06D9  024D               	subwf	??_main,w
  1019  06DA                     u2775:	
  1020  06DA  1C03               	skipc
  1021  06DB  2E96               	goto	l2020
  1022                           
  1023                           ;main.c: 77: last = tick_get();
  1024  06DC  158A  2529  118A   	fcall	_tick_get
  1025  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  1026  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  1027  06E1  0823               	movf	?_tick_get+3,w
  1028  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  1029  06E3  1303               	bcf	3,6	;RP1=0, select bank1
  1030  06E4  00A7               	movwf	(main@last+3)^(0+128)
  1031  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1032  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1033  06E7  0822               	movf	?_tick_get+2,w
  1034  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  1035  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  1036  06EA  00A6               	movwf	(main@last+2)^(0+128)
  1037  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1038  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1039  06ED  0821               	movf	?_tick_get+1,w
  1040  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  1041  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  1042  06F0  00A5               	movwf	(main@last+1)^(0+128)
  1043  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1044  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1045  06F3  0820               	movf	?_tick_get,w
  1046  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  1047  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  1048  06F6  00A4               	movwf	main@last^(0+128)
  1049                           
  1050                           ;main.c: 79: now = time_get();
  1051  06F7  158A  2707  118A   	fcall	_time_get
  1052  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1053  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1054  06FC  082F               	movf	?_time_get+3,w
  1055  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  1056  06FE  1303               	bcf	3,6	;RP1=0, select bank1
  1057  06FF  00A3               	movwf	(main@now+3)^(0+128)
  1058  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1059  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1060  0702  082E               	movf	?_time_get+2,w
  1061  0703  1683               	bsf	3,5	;RP0=1, select bank1
  1062  0704  1303               	bcf	3,6	;RP1=0, select bank1
  1063  0705  00A2               	movwf	(main@now+2)^(0+128)
  1064  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0708  082D               	movf	?_time_get+1,w
  1067  0709  1683               	bsf	3,5	;RP0=1, select bank1
  1068  070A  1303               	bcf	3,6	;RP1=0, select bank1
  1069  070B  00A1               	movwf	(main@now+1)^(0+128)
  1070  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1071  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1072  070E  082C               	movf	?_time_get,w
  1073  070F  1683               	bsf	3,5	;RP0=1, select bank1
  1074  0710  1303               	bcf	3,6	;RP1=0, select bank1
  1075  0711  00A0               	movwf	main@now^(0+128)
  1076                           
  1077                           ;main.c: 81: time_break(now, &tinfo);
  1078  0712  0823               	movf	(main@now+3)^(0+128),w
  1079  0713  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0714  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0715  00B4               	movwf	time_break@timeinput+3
  1082  0716  1683               	bsf	3,5	;RP0=1, select bank1
  1083  0717  1303               	bcf	3,6	;RP1=0, select bank1
  1084  0718  0822               	movf	(main@now+2)^(0+128),w
  1085  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1086  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1087  071B  00B3               	movwf	time_break@timeinput+2
  1088  071C  1683               	bsf	3,5	;RP0=1, select bank1
  1089  071D  1303               	bcf	3,6	;RP1=0, select bank1
  1090  071E  0821               	movf	(main@now+1)^(0+128),w
  1091  071F  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0720  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0721  00B2               	movwf	time_break@timeinput+1
  1094  0722  1683               	bsf	3,5	;RP0=1, select bank1
  1095  0723  1303               	bcf	3,6	;RP1=0, select bank1
  1096  0724  0820               	movf	main@now^(0+128),w
  1097  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1098  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0727  00B1               	movwf	time_break@timeinput
  1100  0728  30A8               	movlw	main@tinfo& (0+255)
  1101  0729  00CD               	movwf	??_main
  1102  072A  084D               	movf	??_main,w
  1103  072B  00B5               	movwf	time_break@timeinfo
  1104  072C  118A  2108  118A   	fcall	_time_break
  1105                           
  1106                           ;main.c: 83: printf("Time: %02d:%02d:%02d Date: %02d/%02d/%02d\r\n", tinfo.tm_hour, tinf
      +                          o.tm_min, tinfo.tm_sec, tinfo.tm_mday, tinfo.tm_mon, tinfo.tm_year);
  1107  072F  1683               	bsf	3,5	;RP0=1, select bank1
  1108  0730  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0731  082A               	movf	(main@tinfo^(0+128)+2),w
  1110  0732  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0733  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0734  00CD               	movwf	??_main
  1113  0735  01CE               	clrf	??_main+1
  1114  0736  084D               	movf	??_main,w
  1115  0737  00AC               	movwf	?_printf
  1116  0738  084E               	movf	??_main+1,w
  1117  0739  00AD               	movwf	?_printf+1
  1118  073A  1683               	bsf	3,5	;RP0=1, select bank1
  1119  073B  1303               	bcf	3,6	;RP1=0, select bank1
  1120  073C  0829               	movf	(main@tinfo^(0+128)+1),w
  1121  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1122  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1123  073F  00CF               	movwf	??_main+2
  1124  0740  01D0               	clrf	??_main+3
  1125  0741  084F               	movf	??_main+2,w
  1126  0742  00AE               	movwf	?_printf+2
  1127  0743  0850               	movf	??_main+3,w
  1128  0744  00AF               	movwf	?_printf+3
  1129  0745  1683               	bsf	3,5	;RP0=1, select bank1
  1130  0746  1303               	bcf	3,6	;RP1=0, select bank1
  1131  0747  0828               	movf	main@tinfo^(0+128),w
  1132  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1134  074A  00D1               	movwf	??_main+4
  1135  074B  01D2               	clrf	??_main+5
  1136  074C  0851               	movf	??_main+4,w
  1137  074D  00B0               	movwf	?_printf+4
  1138  074E  0852               	movf	??_main+5,w
  1139  074F  00B1               	movwf	?_printf+5
  1140  0750  1683               	bsf	3,5	;RP0=1, select bank1
  1141  0751  1303               	bcf	3,6	;RP1=0, select bank1
  1142  0752  082C               	movf	(main@tinfo^(0+128)+4),w
  1143  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0755  00D3               	movwf	??_main+6
  1146  0756  01D4               	clrf	??_main+7
  1147  0757  0853               	movf	??_main+6,w
  1148  0758  00B2               	movwf	?_printf+6
  1149  0759  0854               	movf	??_main+7,w
  1150  075A  00B3               	movwf	?_printf+7
  1151  075B  1683               	bsf	3,5	;RP0=1, select bank1
  1152  075C  1303               	bcf	3,6	;RP1=0, select bank1
  1153  075D  082D               	movf	(main@tinfo^(0+128)+5),w
  1154  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1155  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0760  00D5               	movwf	??_main+8
  1157  0761  01D6               	clrf	??_main+9
  1158  0762  0855               	movf	??_main+8,w
  1159  0763  00B4               	movwf	?_printf+8
  1160  0764  0856               	movf	??_main+9,w
  1161  0765  00B5               	movwf	?_printf+9
  1162  0766  1683               	bsf	3,5	;RP0=1, select bank1
  1163  0767  1303               	bcf	3,6	;RP1=0, select bank1
  1164  0768  082E               	movf	(main@tinfo^(0+128)+6),w
  1165  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1166  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1167  076B  00D7               	movwf	??_main+10
  1168  076C  01D8               	clrf	??_main+11
  1169  076D  0857               	movf	??_main+10,w
  1170  076E  00B6               	movwf	?_printf+10
  1171  076F  0858               	movf	??_main+11,w
  1172  0770  00B7               	movwf	?_printf+11
  1173  0771  3017               	movlw	(STR_2-__stringbase)& (0+255)
  1174  0772  2E93               	goto	L1
  1175  0773                     __end_of_main:	
  1176                           ;main.c: 84: }
  1177                           ;main.c: 85: }
  1178                           
  1179                           
  1180                           	psect	text1
  1181  0DC4                     __ptext1:	
  1182 ;; *************** function _time_set_provider *****************
  1183 ;; Defined at:
  1184 ;;		line 189 in file "../TimeLib.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  callback        1    wreg     PTR FTN()unsigned long 
  1187 ;;		 -> time_provider(4), 
  1188 ;;  timespan        4   24[BANK0 ] unsigned long 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  callback        1   28[BANK0 ] PTR FTN()unsigned long 
  1191 ;;		 -> time_provider(4), 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;		None               void
  1194 ;; Registers used:
  1195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       4       0       0       0
  1202 ;;      Locals:         0       1       0       0       0
  1203 ;;      Temps:          1       0       0       0       0
  1204 ;;      Totals:         1       5       0       0       0
  1205 ;;Total ram usage:        6 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    6
  1208 ;; This function calls:
  1209 ;;		_time_get
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _time_set_provider
  1217  0DC4                     _time_set_provider:	
  1218                           
  1219                           ;incstack = 0
  1220                           ; Regs used in _time_set_provider: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1221                           ;time_set_provider@callback stored from wreg
  1222  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  1223  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  1224  0DC6  00BC               	movwf	time_set_provider@callback
  1225                           
  1226                           ;TimeLib.c: 192: if (callback == 0)
  1227  0DC7  08BC               	movf	time_set_provider@callback,f
  1228  0DC8  1903               	btfsc	3,2
  1229  0DC9  0008               	return
  1230                           
  1231                           ;TimeLib.c: 195: time_provider_callback = callback;
  1232                           
  1233                           ;TimeLib.c: 193: return;
  1234  0DCA  083C               	movf	time_set_provider@callback,w
  1235  0DCB  00F5               	movwf	??_time_set_provider
  1236  0DCC  0875               	movf	??_time_set_provider,w
  1237  0DCD  00E2               	movwf	_time_provider_callback
  1238                           
  1239                           ;TimeLib.c: 197: sync_interval = (timespan == 0) ? (86400UL) : timespan;
  1240  0DCE  083B               	movf	time_set_provider@timespan+3,w
  1241  0DCF  043A               	iorwf	time_set_provider@timespan+2,w
  1242  0DD0  0439               	iorwf	time_set_provider@timespan+1,w
  1243  0DD1  0438               	iorwf	time_set_provider@timespan,w
  1244  0DD2  1903               	skipnz
  1245  0DD3  2DDC               	goto	l1826
  1246  0DD4  083B               	movf	time_set_provider@timespan+3,w
  1247  0DD5  00E1               	movwf	_sync_interval+3
  1248  0DD6  083A               	movf	time_set_provider@timespan+2,w
  1249  0DD7  00E0               	movwf	_sync_interval+2
  1250  0DD8  0839               	movf	time_set_provider@timespan+1,w
  1251  0DD9  00DF               	movwf	_sync_interval+1
  1252  0DDA  0838               	movf	time_set_provider@timespan,w
  1253  0DDB  2DE3               	goto	L2
  1254  0DDC                     l1826:	
  1255  0DDC  3000               	movlw	0
  1256  0DDD  00E1               	movwf	_sync_interval+3
  1257  0DDE  3001               	movlw	1
  1258  0DDF  00E0               	movwf	_sync_interval+2
  1259  0DE0  3051               	movlw	81
  1260  0DE1  00DF               	movwf	_sync_interval+1
  1261  0DE2  3080               	movlw	128
  1262  0DE3                     L2:	
  1263  0DE3  00DE               	movwf	_sync_interval
  1264                           
  1265                           ;TimeLib.c: 199: sync_next = sys_time;
  1266  0DE4  085C               	movf	_sys_time+3,w
  1267  0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0DE6  1303               	bcf	3,6	;RP1=0, select bank1
  1269  0DE7  00BA               	movwf	(_sync_next+3)^(0+128)
  1270  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0DEA  085B               	movf	_sys_time+2,w
  1273  0DEB  1683               	bsf	3,5	;RP0=1, select bank1
  1274  0DEC  1303               	bcf	3,6	;RP1=0, select bank1
  1275  0DED  00B9               	movwf	(_sync_next+2)^(0+128)
  1276  0DEE  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0DEF  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0DF0  085A               	movf	_sys_time+1,w
  1279  0DF1  1683               	bsf	3,5	;RP0=1, select bank1
  1280  0DF2  1303               	bcf	3,6	;RP1=0, select bank1
  1281  0DF3  00B8               	movwf	(_sync_next+1)^(0+128)
  1282  0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  1283  0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  1284  0DF6  0859               	movf	_sys_time,w
  1285  0DF7  1683               	bsf	3,5	;RP0=1, select bank1
  1286  0DF8  1303               	bcf	3,6	;RP1=0, select bank1
  1287  0DF9  00B7               	movwf	_sync_next^(0+128)
  1288                           
  1289                           ;TimeLib.c: 201: time_get();
  1290  0DFA  158A  2707         	fcall	_time_get
  1291  0DFC  0008               	return
  1292  0DFD                     __end_of_time_set_provider:	
  1293                           
  1294                           	psect	text2
  1295  0F07                     __ptext2:	
  1296 ;; *************** function _time_get *****************
  1297 ;; Defined at:
  1298 ;;		line 74 in file "../TimeLib.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  now             4   20[BANK0 ] unsigned long 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  4   12[BANK0 ] unsigned long 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       4       0       0       0
  1313 ;;      Locals:         0       4       0       0       0
  1314 ;;      Temps:          0       4       0       0       0
  1315 ;;      Totals:         0      12       0       0       0
  1316 ;;Total ram usage:       12 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    5
  1319 ;; This function calls:
  1320 ;;		Absolute function
  1321 ;;		_tick_get
  1322 ;;		_time_provider
  1323 ;;		_time_set
  1324 ;; This function is called by:
  1325 ;;		_main
  1326 ;;		_time_set_provider
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           
  1331                           ;psect for function _time_get
  1332  0F07                     _time_get:	
  1333                           
  1334                           ;TimeLib.c: 76: time_t now = 0;
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _time_get: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1338  0F07  3000               	movlw	0
  1339  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  1340  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  1341  0F0A  00B7               	movwf	time_get@now+3
  1342  0F0B  3000               	movlw	0
  1343  0F0C  00B6               	movwf	time_get@now+2
  1344  0F0D  3000               	movlw	0
  1345  0F0E  00B5               	movwf	time_get@now+1
  1346  0F0F  3000               	movlw	0
  1347  0F10  00B4               	movwf	time_get@now
  1348                           
  1349                           ;TimeLib.c: 79: if (sync_next <= sys_time) {
  1350  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  1351  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  1352  0F13  083A               	movf	(_sync_next+3)^(0+128),w
  1353  0F14  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0F15  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0F16  025C               	subwf	_sys_time+3,w
  1356  0F17  1D03               	skipz
  1357  0F18  2F2F               	goto	u1935
  1358  0F19  1683               	bsf	3,5	;RP0=1, select bank1
  1359  0F1A  1303               	bcf	3,6	;RP1=0, select bank1
  1360  0F1B  0839               	movf	(_sync_next+2)^(0+128),w
  1361  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0F1E  025B               	subwf	_sys_time+2,w
  1364  0F1F  1D03               	skipz
  1365  0F20  2F2F               	goto	u1935
  1366  0F21  1683               	bsf	3,5	;RP0=1, select bank1
  1367  0F22  1303               	bcf	3,6	;RP1=0, select bank1
  1368  0F23  0838               	movf	(_sync_next+1)^(0+128),w
  1369  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0F26  025A               	subwf	_sys_time+1,w
  1372  0F27  1D03               	skipz
  1373  0F28  2F2F               	goto	u1935
  1374  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  1375  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  1376  0F2B  0837               	movf	_sync_next^(0+128),w
  1377  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0F2E  0259               	subwf	_sys_time,w
  1380  0F2F                     u1935:	
  1381  0F2F  1C03               	skipc
  1382  0F30  2FB1               	goto	l1642
  1383                           
  1384                           ;TimeLib.c: 81: if (time_provider_callback != 0) {
  1385  0F31  0862               	movf	_time_provider_callback,w
  1386  0F32  1903               	btfsc	3,2
  1387  0F33  2FB1               	goto	l1642
  1388                           
  1389                           ;TimeLib.c: 83: now = time_provider_callback();
  1390  0F34  0862               	movf	_time_provider_callback,w
  1391  0F35  118A  2100  158A   	fcall	fptable
  1392  0F38  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0F39  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0F3A  0823               	movf	?_time_provider+3,w
  1395  0F3B  00B7               	movwf	time_get@now+3
  1396  0F3C  0822               	movf	?_time_provider+2,w
  1397  0F3D  00B6               	movwf	time_get@now+2
  1398  0F3E  0821               	movf	?_time_provider+1,w
  1399  0F3F  00B5               	movwf	time_get@now+1
  1400  0F40  0820               	movf	?_time_provider,w
  1401  0F41  00B4               	movwf	time_get@now
  1402                           
  1403                           ;TimeLib.c: 85: if (now != 0)
  1404  0F42  0837               	movf	time_get@now+3,w
  1405  0F43  0436               	iorwf	time_get@now+2,w
  1406  0F44  0435               	iorwf	time_get@now+1,w
  1407  0F45  0434               	iorwf	time_get@now,w
  1408  0F46  1903               	skipnz
  1409  0F47  2F54               	goto	l1636
  1410                           
  1411                           ;TimeLib.c: 86: time_set(now);
  1412  0F48  0837               	movf	time_get@now+3,w
  1413  0F49  00A7               	movwf	time_set@now+3
  1414  0F4A  0836               	movf	time_get@now+2,w
  1415  0F4B  00A6               	movwf	time_set@now+2
  1416  0F4C  0835               	movf	time_get@now+1,w
  1417  0F4D  00A5               	movwf	time_set@now+1
  1418  0F4E  0834               	movf	time_get@now,w
  1419  0F4F  00A4               	movwf	time_set@now
  1420  0F50  118A  2093  158A   	fcall	_time_set
  1421  0F53  2FAF               	goto	L3
  1422  0F54                     l1636:	
  1423                           
  1424                           ;TimeLib.c: 87: else {
  1425                           ;TimeLib.c: 88: sync_next = sys_time + sync_interval;
  1426  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0F56  0859               	movf	_sys_time,w
  1429  0F57  075E               	addwf	_sync_interval,w
  1430  0F58  00B0               	movwf	??_time_get
  1431  0F59  3000               	movlw	0
  1432  0F5A  1803               	skipnc
  1433  0F5B  3001               	movlw	1
  1434  0F5C  075A               	addwf	_sys_time+1,w
  1435  0F5D  01B2               	clrf	??_time_get+2
  1436  0F5E  1803               	skipnc
  1437  0F5F  0AB2               	incf	??_time_get+2,f
  1438  0F60  075F               	addwf	_sync_interval+1,w
  1439  0F61  00B1               	movwf	??_time_get+1
  1440  0F62  1803               	skipnc
  1441  0F63  0AB2               	incf	??_time_get+2,f
  1442  0F64  085B               	movf	_sys_time+2,w
  1443  0F65  0732               	addwf	??_time_get+2,w
  1444  0F66  01B3               	clrf	??_time_get+3
  1445  0F67  1803               	skipnc
  1446  0F68  0AB3               	incf	??_time_get+3,f
  1447  0F69  0760               	addwf	_sync_interval+2,w
  1448  0F6A  00B2               	movwf	??_time_get+2
  1449  0F6B  1803               	skipnc
  1450  0F6C  0AB3               	incf	??_time_get+3,f
  1451  0F6D  085C               	movf	_sys_time+3,w
  1452  0F6E  0733               	addwf	??_time_get+3,w
  1453  0F6F  0761               	addwf	_sync_interval+3,w
  1454  0F70  00B3               	movwf	??_time_get+3
  1455  0F71  0833               	movf	??_time_get+3,w
  1456  0F72  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0F73  1303               	bcf	3,6	;RP1=0, select bank1
  1458  0F74  00BA               	movwf	(_sync_next+3)^(0+128)
  1459  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0F76  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0F77  0832               	movf	??_time_get+2,w
  1462  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  1463  0F79  1303               	bcf	3,6	;RP1=0, select bank1
  1464  0F7A  00B9               	movwf	(_sync_next+2)^(0+128)
  1465  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  1466  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  1467  0F7D  0831               	movf	??_time_get+1,w
  1468  0F7E  1683               	bsf	3,5	;RP0=1, select bank1
  1469  0F7F  1303               	bcf	3,6	;RP1=0, select bank1
  1470  0F80  00B8               	movwf	(_sync_next+1)^(0+128)
  1471  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0F83  0830               	movf	??_time_get,w
  1474  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  1475  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  1476  0F86  00B7               	movwf	_sync_next^(0+128)
  1477                           
  1478                           ;TimeLib.c: 89: enTimeCurrentStatus = (enTimeCurrentStatus == E_TIME_NOT_SET) ? E_TIME_N
      +                          OT_SET : E_TIME_NEEDS_SYNC;
  1479  0F87  3000               	movlw	0
  1480  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  1481  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  1482  0F8A  08DD               	movf	_enTimeCurrentStatus,f
  1483  0F8B  1D03               	skipz
  1484  0F8C  3001               	movlw	1
  1485  0F8D  00B0               	movwf	??_time_get
  1486  0F8E  0830               	movf	??_time_get,w
  1487  0F8F  00DD               	movwf	_enTimeCurrentStatus
  1488                           
  1489                           ;TimeLib.c: 90: }
  1490                           ;TimeLib.c: 91: }
  1491                           ;TimeLib.c: 92: }
  1492                           ;TimeLib.c: 96: while (tick_get() - last_update >= ((unsigned long long)((1000000 + 128u
      +                          ll)/8ull))) {
  1493  0F90  2FB1               	goto	l1642
  1494  0F91                     l1640:	
  1495                           
  1496                           ;TimeLib.c: 98: sys_time++;
  1497  0F91  3001               	movlw	1
  1498  0F92  07D9               	addwf	_sys_time,f
  1499  0F93  3000               	movlw	0
  1500  0F94  1803               	skipnc
  1501  0F95  3001               	movlw	1
  1502  0F96  07DA               	addwf	_sys_time+1,f
  1503  0F97  3000               	movlw	0
  1504  0F98  1803               	skipnc
  1505  0F99  3001               	movlw	1
  1506  0F9A  07DB               	addwf	_sys_time+2,f
  1507  0F9B  3000               	movlw	0
  1508  0F9C  1803               	skipnc
  1509  0F9D  3001               	movlw	1
  1510  0F9E  07DC               	addwf	_sys_time+3,f
  1511                           
  1512                           ;TimeLib.c: 99: last_update += ((unsigned long long)((1000000 + 128ull)/8ull));
  1513  0F9F  3058               	movlw	88
  1514  0FA0  1683               	bsf	3,5	;RP0=1, select bank1
  1515  0FA1  1303               	bcf	3,6	;RP1=0, select bank1
  1516  0FA2  07B3               	addwf	_last_update^(0+128),f
  1517  0FA3  30E8               	movlw	232
  1518  0FA4  1803               	skipnc
  1519  0FA5  30E9               	movlw	233
  1520  0FA6  07B4               	addwf	(_last_update+1)^(0+128),f
  1521  0FA7  3001               	movlw	1
  1522  0FA8  1803               	skipnc
  1523  0FA9  3002               	movlw	2
  1524  0FAA  07B5               	addwf	(_last_update+2)^(0+128),f
  1525  0FAB  3000               	movlw	0
  1526  0FAC  1803               	skipnc
  1527  0FAD  3001               	movlw	1
  1528  0FAE  07B6               	addwf	(_last_update+3)^(0+128),f
  1529  0FAF                     L3:	
  1530  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0FB1                     l1642:	
  1533  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  1534  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  1535  0FB3  0933               	comf	_last_update^(0+128),w
  1536  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0FB6  00B0               	movwf	??_time_get
  1539  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  1540  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  1541  0FB9  0934               	comf	(_last_update+1)^(0+128),w
  1542  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0FBC  00B1               	movwf	??_time_get+1
  1545  0FBD  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0FBE  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0FBF  0935               	comf	(_last_update+2)^(0+128),w
  1548  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0FC2  00B2               	movwf	??_time_get+2
  1551  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0FC4  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0FC5  0936               	comf	(_last_update+3)^(0+128),w
  1554  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0FC8  00B3               	movwf	??_time_get+3
  1557  0FC9  0AB0               	incf	??_time_get,f
  1558  0FCA  1903               	skipnz
  1559  0FCB  0AB1               	incf	??_time_get+1,f
  1560  0FCC  1903               	skipnz
  1561  0FCD  0AB2               	incf	??_time_get+2,f
  1562  0FCE  1903               	skipnz
  1563  0FCF  0AB3               	incf	??_time_get+3,f
  1564  0FD0  158A  2529  158A   	fcall	_tick_get
  1565  0FD3  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0FD4  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0FD5  0820               	movf	?_tick_get,w
  1568  0FD6  07B0               	addwf	??_time_get,f
  1569  0FD7  0821               	movf	?_tick_get+1,w
  1570  0FD8  1803               	skipnc
  1571  0FD9  0F21               	incfsz	?_tick_get+1,w
  1572  0FDA  2FDC               	goto	u1960
  1573  0FDB  2FDD               	goto	u1961
  1574  0FDC                     u1960:	
  1575  0FDC  07B1               	addwf	??_time_get+1,f
  1576  0FDD                     u1961:	
  1577  0FDD  0822               	movf	?_tick_get+2,w
  1578  0FDE  1803               	skipnc
  1579  0FDF  0F22               	incfsz	?_tick_get+2,w
  1580  0FE0  2FE2               	goto	u1962
  1581  0FE1  2FE3               	goto	u1963
  1582  0FE2                     u1962:	
  1583  0FE2  07B2               	addwf	??_time_get+2,f
  1584  0FE3                     u1963:	
  1585  0FE3  0823               	movf	?_tick_get+3,w
  1586  0FE4  1803               	skipnc
  1587  0FE5  0A23               	incf	?_tick_get+3,w
  1588  0FE6  07B3               	addwf	??_time_get+3,f
  1589  0FE7  3000               	movlw	0
  1590  0FE8  0233               	subwf	??_time_get+3,w
  1591  0FE9  1D03               	skipz
  1592  0FEA  2FF5               	goto	u1975
  1593  0FEB  3001               	movlw	1
  1594  0FEC  0232               	subwf	??_time_get+2,w
  1595  0FED  1D03               	skipz
  1596  0FEE  2FF5               	goto	u1975
  1597  0FEF  30E8               	movlw	232
  1598  0FF0  0231               	subwf	??_time_get+1,w
  1599  0FF1  1D03               	skipz
  1600  0FF2  2FF5               	goto	u1975
  1601  0FF3  3058               	movlw	88
  1602  0FF4  0230               	subwf	??_time_get,w
  1603  0FF5                     u1975:	
  1604  0FF5  1803               	skipnc
  1605  0FF6  2F91               	goto	l1640
  1606                           
  1607                           ;TimeLib.c: 100: }
  1608                           ;TimeLib.c: 102: return sys_time;
  1609  0FF7  085C               	movf	_sys_time+3,w
  1610  0FF8  00AF               	movwf	?_time_get+3
  1611  0FF9  085B               	movf	_sys_time+2,w
  1612  0FFA  00AE               	movwf	?_time_get+2
  1613  0FFB  085A               	movf	_sys_time+1,w
  1614  0FFC  00AD               	movwf	?_time_get+1
  1615  0FFD  0859               	movf	_sys_time,w
  1616  0FFE  00AC               	movwf	?_time_get
  1617  0FFF  0008               	return
  1618  1000                     __end_of_time_get:	
  1619                           
  1620                           	psect	text3
  1621  0093                     __ptext3:	
  1622 ;; *************** function _time_set *****************
  1623 ;; Defined at:
  1624 ;;		line 66 in file "../TimeLib.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  now             4    4[BANK0 ] unsigned long 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;		None               void
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       4       0       0       0
  1639 ;;      Locals:         0       0       0       0       0
  1640 ;;      Temps:          0       4       0       0       0
  1641 ;;      Totals:         0       8       0       0       0
  1642 ;;Total ram usage:        8 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    4
  1645 ;; This function calls:
  1646 ;;		_tick_get
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;;		_time_get
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _time_set
  1655  0093                     _time_set:	
  1656                           
  1657                           ;TimeLib.c: 68: sys_time = now;
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in _time_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1661  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0095  0827               	movf	time_set@now+3,w
  1664  0096  00DC               	movwf	_sys_time+3
  1665  0097  0826               	movf	time_set@now+2,w
  1666  0098  00DB               	movwf	_sys_time+2
  1667  0099  0825               	movf	time_set@now+1,w
  1668  009A  00DA               	movwf	_sys_time+1
  1669  009B  0824               	movf	time_set@now,w
  1670  009C  00D9               	movwf	_sys_time
  1671                           
  1672                           ;TimeLib.c: 69: sync_next = now + sync_interval;
  1673  009D  0824               	movf	time_set@now,w
  1674  009E  075E               	addwf	_sync_interval,w
  1675  009F  00A8               	movwf	??_time_set
  1676  00A0  3000               	movlw	0
  1677  00A1  1803               	skipnc
  1678  00A2  3001               	movlw	1
  1679  00A3  0725               	addwf	time_set@now+1,w
  1680  00A4  01AA               	clrf	??_time_set+2
  1681  00A5  1803               	skipnc
  1682  00A6  0AAA               	incf	??_time_set+2,f
  1683  00A7  075F               	addwf	_sync_interval+1,w
  1684  00A8  00A9               	movwf	??_time_set+1
  1685  00A9  1803               	skipnc
  1686  00AA  0AAA               	incf	??_time_set+2,f
  1687  00AB  0826               	movf	time_set@now+2,w
  1688  00AC  072A               	addwf	??_time_set+2,w
  1689  00AD  01AB               	clrf	??_time_set+3
  1690  00AE  1803               	skipnc
  1691  00AF  0AAB               	incf	??_time_set+3,f
  1692  00B0  0760               	addwf	_sync_interval+2,w
  1693  00B1  00AA               	movwf	??_time_set+2
  1694  00B2  1803               	skipnc
  1695  00B3  0AAB               	incf	??_time_set+3,f
  1696  00B4  0827               	movf	time_set@now+3,w
  1697  00B5  072B               	addwf	??_time_set+3,w
  1698  00B6  0761               	addwf	_sync_interval+3,w
  1699  00B7  00AB               	movwf	??_time_set+3
  1700  00B8  082B               	movf	??_time_set+3,w
  1701  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1702  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  1703  00BB  00BA               	movwf	(_sync_next+3)^(0+128)
  1704  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1705  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1706  00BE  082A               	movf	??_time_set+2,w
  1707  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1708  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1709  00C1  00B9               	movwf	(_sync_next+2)^(0+128)
  1710  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1711  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1712  00C4  0829               	movf	??_time_set+1,w
  1713  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  1714  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  1715  00C7  00B8               	movwf	(_sync_next+1)^(0+128)
  1716  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1717  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1718  00CA  0828               	movf	??_time_set,w
  1719  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  1720  00CC  1303               	bcf	3,6	;RP1=0, select bank1
  1721  00CD  00B7               	movwf	_sync_next^(0+128)
  1722                           
  1723                           ;TimeLib.c: 70: enTimeCurrentStatus = E_TIME_OK;
  1724  00CE  3002               	movlw	2
  1725  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1726  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1727  00D1  00A8               	movwf	??_time_set
  1728  00D2  0828               	movf	??_time_set,w
  1729  00D3  00DD               	movwf	_enTimeCurrentStatus
  1730                           
  1731                           ;TimeLib.c: 71: last_update = tick_get();
  1732  00D4  158A  2529         	fcall	_tick_get
  1733  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1734  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1735  00D8  0823               	movf	?_tick_get+3,w
  1736  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1737  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1738  00DB  00B6               	movwf	(_last_update+3)^(0+128)
  1739  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1740  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1741  00DE  0822               	movf	?_tick_get+2,w
  1742  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1743  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1744  00E1  00B5               	movwf	(_last_update+2)^(0+128)
  1745  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1746  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1747  00E4  0821               	movf	?_tick_get+1,w
  1748  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1749  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1750  00E7  00B4               	movwf	(_last_update+1)^(0+128)
  1751  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1752  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1753  00EA  0820               	movf	?_tick_get,w
  1754  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  1755  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  1756  00ED  00B3               	movwf	_last_update^(0+128)
  1757  00EE  0008               	return
  1758  00EF                     __end_of_time_set:	
  1759                           
  1760                           	psect	text4
  1761  0D29                     __ptext4:	
  1762 ;; *************** function _tick_get *****************
  1763 ;; Defined at:
  1764 ;;		line 44 in file "../Tick/Tick-PIC16.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  4    0[BANK0 ] unsigned long 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       4       0       0       0
  1779 ;;      Locals:         0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0
  1781 ;;      Totals:         0       4       0       0       0
  1782 ;;Total ram usage:        4 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    3
  1785 ;; This function calls:
  1786 ;;		_tick_read_internal
  1787 ;; This function is called by:
  1788 ;;		_main
  1789 ;;		_time_set
  1790 ;;		_time_get
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           
  1795                           ;psect for function _tick_get
  1796  0D29                     _tick_get:	
  1797                           
  1798                           ;Tick-PIC16.c: 46: tick_read_internal();
  1799                           
  1800                           ;incstack = 0
  1801                           ; Regs used in _tick_get: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1802  0D29  118A  27D3         	fcall	_tick_read_internal
  1803                           
  1804                           ;Tick-PIC16.c: 47: return *((uint32_t *) & tickbuffer[0]);
  1805  0D2B  30BB               	movlw	low _tickbuffer
  1806  0D2C  0084               	movwf	4
  1807  0D2D  1383               	bcf	3,7	;select IRP bank1
  1808  0D2E  0800               	movf	0,w
  1809  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0D31  00A0               	movwf	?_tick_get
  1812  0D32  0A84               	incf	4,f
  1813  0D33  0800               	movf	0,w
  1814  0D34  00A1               	movwf	?_tick_get+1
  1815  0D35  0A84               	incf	4,f
  1816  0D36  0800               	movf	0,w
  1817  0D37  00A2               	movwf	?_tick_get+2
  1818  0D38  0A84               	incf	4,f
  1819  0D39  0800               	movf	0,w
  1820  0D3A  00A3               	movwf	?_tick_get+3
  1821  0D3B  0008               	return
  1822  0D3C                     __end_of_tick_get:	
  1823                           
  1824                           	psect	text5
  1825  07D3                     __ptext5:	
  1826 ;; *************** function _tick_read_internal *****************
  1827 ;; Defined at:
  1828 ;;		line 58 in file "../Tick/Tick-PIC16.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;		None               void
  1835 ;; Registers used:
  1836 ;;		wreg
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1842 ;;      Params:         0       0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0
  1844 ;;      Temps:          1       0       0       0       0
  1845 ;;      Totals:         1       0       0       0       0
  1846 ;;Total ram usage:        1 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    2
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_tick_get
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           
  1857                           ;psect for function _tick_read_internal
  1858  07D3                     _tick_read_internal:	
  1859  07D3                     l161:	
  1860                           ;incstack = 0
  1861                           ; Regs used in _tick_read_internal: [wreg]
  1862                           ;Tick-PIC16.c: 60: do {
  1863                           
  1864                           
  1865                           ;Tick-PIC16.c: 61: PIE1bits.TMR1IE = 1;
  1866  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  1867  07D4  1303               	bcf	3,6	;RP1=0, select bank1
  1868  07D5  140C               	bsf	12,0	;volatile
  1869  07D6  0000               	nop	;# 
  1870                           
  1871                           ;Tick-PIC16.c: 63: PIE1bits.TMR1IE = 0;
  1872  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  1873  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  1874  07D9  100C               	bcf	12,0	;volatile
  1875                           
  1876                           ;Tick-PIC16.c: 65: tickbuffer[0] = TMR1L;
  1877  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1878  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1879  07DC  080E               	movf	14,w	;volatile
  1880  07DD  00F4               	movwf	??_tick_read_internal
  1881  07DE  0874               	movf	??_tick_read_internal,w
  1882  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  1883  07E0  1303               	bcf	3,6	;RP1=0, select bank1
  1884  07E1  00BB               	movwf	_tickbuffer^(0+128)
  1885                           
  1886                           ;Tick-PIC16.c: 66: tickbuffer[1] = TMR1H;
  1887  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1888  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1889  07E4  080F               	movf	15,w	;volatile
  1890  07E5  00F4               	movwf	??_tick_read_internal
  1891  07E6  0874               	movf	??_tick_read_internal,w
  1892  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  1893  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  1894  07E9  00BC               	movwf	(_tickbuffer^(0+128)+1)
  1895                           
  1896                           ;Tick-PIC16.c: 68: *((uint32_t*) & tickbuffer[2]) = tickcnt;
  1897  07EA  0879               	movf	_tickcnt+3,w	;volatile
  1898  07EB  00C0               	movwf	((_tickbuffer+3)^(0+128)+2)
  1899  07EC  0878               	movf	_tickcnt+2,w	;volatile
  1900  07ED  00BF               	movwf	((_tickbuffer+2)^(0+128)+2)
  1901  07EE  0877               	movf	_tickcnt+1,w	;volatile
  1902  07EF  00BE               	movwf	((_tickbuffer+1)^(0+128)+2)
  1903  07F0  0876               	movf	_tickcnt,w	;volatile
  1904  07F1  00BD               	movwf	(_tickbuffer^(0+128)+2)
  1905                           
  1906                           ;Tick-PIC16.c: 69: } while (PIR1bits.TMR1IF);
  1907  07F2  1283               	bcf	3,5	;RP0=0, select bank0
  1908  07F3  1303               	bcf	3,6	;RP1=0, select bank0
  1909  07F4  180C               	btfsc	12,0	;volatile
  1910  07F5  2FD3               	goto	l161
  1911                           
  1912                           ;Tick-PIC16.c: 70: PIE1bits.TMR1IE = 1;
  1913  07F6  1683               	bsf	3,5	;RP0=1, select bank1
  1914  07F7  1303               	bcf	3,6	;RP1=0, select bank1
  1915  07F8  140C               	bsf	12,0	;volatile
  1916  07F9  0008               	return
  1917  07FA                     __end_of_tick_read_internal:	
  1918                           
  1919                           	psect	text6
  1920  0D50                     __ptext6:	
  1921 ;; *************** function _time_provider *****************
  1922 ;; Defined at:
  1923 ;;		line 89 in file "main.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  4    0[BANK0 ] unsigned long 
  1930 ;; Registers used:
  1931 ;;		wreg
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         0       4       0       0       0
  1938 ;;      Locals:         0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0
  1940 ;;      Totals:         0       4       0       0       0
  1941 ;;Total ram usage:        4 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    2
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;;		_time_get
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           
  1953                           ;psect for function _time_provider
  1954  0D50                     _time_provider:	
  1955                           
  1956                           ;main.c: 95: return initialt;
  1957                           
  1958                           ;incstack = 0
  1959                           ; Regs used in _time_provider: [wreg]
  1960  0D50  1683               	bsf	3,5	;RP0=1, select bank1
  1961  0D51  1303               	bcf	3,6	;RP1=0, select bank1
  1962  0D52  0832               	movf	(_initialt+3)^(0+128),w
  1963  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0D54  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0D55  00A3               	movwf	?_time_provider+3
  1966  0D56  1683               	bsf	3,5	;RP0=1, select bank1
  1967  0D57  1303               	bcf	3,6	;RP1=0, select bank1
  1968  0D58  0831               	movf	(_initialt+2)^(0+128),w
  1969  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0D5B  00A2               	movwf	?_time_provider+2
  1972  0D5C  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0D5D  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0D5E  0830               	movf	(_initialt+1)^(0+128),w
  1975  0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0D60  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0D61  00A1               	movwf	?_time_provider+1
  1978  0D62  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0D63  1303               	bcf	3,6	;RP1=0, select bank1
  1980  0D64  082F               	movf	_initialt^(0+128),w
  1981  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0D67  00A0               	movwf	?_time_provider
  1984  0D68  0008               	return
  1985  0D69                     __end_of_time_provider:	
  1986                           
  1987                           	psect	text7
  1988  030E                     __ptext7:	
  1989 ;; *************** function _time_make *****************
  1990 ;; Defined at:
  1991 ;;		line 105 in file "../TimeLib.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  timeinfo        1    wreg     PTR struct tm_t
  1994 ;;		 -> main@tinfo(7), 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  timeinfo        1   31[BANK0 ] PTR struct tm_t
  1997 ;;		 -> main@tinfo(7), 
  1998 ;;  tstamp          4   25[BANK0 ] unsigned long 
  1999 ;;  i               2   29[BANK0 ] int 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  4   17[BANK0 ] unsigned long 
  2002 ;; Registers used:
  2003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2009 ;;      Params:         0       4       0       0       0
  2010 ;;      Locals:         0       7       0       0       0
  2011 ;;      Temps:          0       4       0       0       0
  2012 ;;      Totals:         0      15       0       0       0
  2013 ;;Total ram usage:       15 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    4
  2016 ;; This function calls:
  2017 ;;		___lmul
  2018 ;;		_time_is_leap
  2019 ;; This function is called by:
  2020 ;;		_main
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _time_make
  2026  030E                     _time_make:	
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _time_make: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2030                           ;time_make@timeinfo stored from wreg
  2031  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2032  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0310  00BF               	movwf	time_make@timeinfo
  2034                           
  2035                           ;TimeLib.c: 107: int i;
  2036                           ;TimeLib.c: 108: uint32_t tstamp;
  2037                           ;TimeLib.c: 112: tstamp = timeinfo->tm_year * ((86400UL) * 365);
  2038  0311  083F               	movf	time_make@timeinfo,w
  2039  0312  3E06               	addlw	6
  2040  0313  0084               	movwf	4
  2041  0314  1383               	bcf	3,7	;select IRP bank0
  2042  0315  0800               	movf	0,w
  2043  0316  00B5               	movwf	??_time_make
  2044  0317  01B6               	clrf	??_time_make+1
  2045  0318  01B7               	clrf	??_time_make+2
  2046  0319  01B8               	clrf	??_time_make+3
  2047  031A  0838               	movf	??_time_make+3,w
  2048  031B  00A3               	movwf	___lmul@multiplier+3
  2049  031C  0837               	movf	??_time_make+2,w
  2050  031D  00A2               	movwf	___lmul@multiplier+2
  2051  031E  0836               	movf	??_time_make+1,w
  2052  031F  00A1               	movwf	___lmul@multiplier+1
  2053  0320  0835               	movf	??_time_make,w
  2054  0321  00A0               	movwf	___lmul@multiplier
  2055  0322  3001               	movlw	1
  2056  0323  00A7               	movwf	___lmul@multiplicand+3
  2057  0324  30E1               	movlw	225
  2058  0325  00A6               	movwf	___lmul@multiplicand+2
  2059  0326  3033               	movlw	51
  2060  0327  00A5               	movwf	___lmul@multiplicand+1
  2061  0328  3080               	movlw	128
  2062  0329  00A4               	movwf	___lmul@multiplicand
  2063  032A  158A  2678  118A   	fcall	___lmul
  2064  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2065  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2066  032F  0823               	movf	?___lmul+3,w
  2067  0330  00BC               	movwf	time_make@tstamp+3
  2068  0331  0822               	movf	?___lmul+2,w
  2069  0332  00BB               	movwf	time_make@tstamp+2
  2070  0333  0821               	movf	?___lmul+1,w
  2071  0334  00BA               	movwf	time_make@tstamp+1
  2072  0335  0820               	movf	?___lmul,w
  2073  0336  00B9               	movwf	time_make@tstamp
  2074                           
  2075                           ;TimeLib.c: 114: for (i = 0; i < timeinfo->tm_year; i++) {
  2076  0337  01BD               	clrf	time_make@i
  2077  0338  01BE               	clrf	time_make@i+1
  2078  0339                     l1794:	
  2079  0339  083F               	movf	time_make@timeinfo,w
  2080  033A  3E06               	addlw	6
  2081  033B  0084               	movwf	4
  2082  033C  083E               	movf	time_make@i+1,w
  2083  033D  3A80               	xorlw	128
  2084  033E  00B5               	movwf	??_time_make
  2085  033F  3080               	movlw	128
  2086  0340  0235               	subwf	??_time_make,w
  2087  0341  1D03               	skipz
  2088  0342  2B46               	goto	u2345
  2089  0343  1383               	bcf	3,7	;select IRP bank0
  2090  0344  0800               	movf	0,w
  2091  0345  023D               	subwf	time_make@i,w
  2092  0346                     u2345:	
  2093  0346  1803               	btfsc	3,0
  2094  0347  2B70               	goto	l1796
  2095                           
  2096                           ;TimeLib.c: 115: if (time_is_leap(i + 1970))
  2097  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2099  034A  083D               	movf	time_make@i,w
  2100  034B  3EB2               	addlw	178
  2101  034C  00AC               	movwf	time_is_leap@year
  2102  034D  083E               	movf	time_make@i+1,w
  2103  034E  1803               	skipnc
  2104  034F  3E01               	addlw	1
  2105  0350  3E07               	addlw	7
  2106  0351  00AD               	movwf	time_is_leap@year+1
  2107  0352  158A  25FD  118A   	fcall	_time_is_leap
  2108  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2110  0357  082D               	movf	?_time_is_leap+1,w
  2111  0358  042C               	iorwf	?_time_is_leap,w
  2112  0359  1903               	skipnz
  2113  035A  2B69               	goto	l93
  2114                           
  2115                           ;TimeLib.c: 116: tstamp += (86400UL);
  2116  035B  3080               	movlw	128
  2117  035C  07B9               	addwf	time_make@tstamp,f
  2118  035D  3051               	movlw	81
  2119  035E  1803               	skipnc
  2120  035F  3052               	movlw	82
  2121  0360  07BA               	addwf	time_make@tstamp+1,f
  2122  0361  3001               	movlw	1
  2123  0362  1803               	skipnc
  2124  0363  3002               	movlw	2
  2125  0364  07BB               	addwf	time_make@tstamp+2,f
  2126  0365  3000               	movlw	0
  2127  0366  1803               	skipnc
  2128  0367  3001               	movlw	1
  2129  0368  07BC               	addwf	time_make@tstamp+3,f
  2130  0369                     l93:	
  2131  0369  3001               	movlw	1
  2132  036A  07BD               	addwf	time_make@i,f
  2133  036B  1803               	skipnc
  2134  036C  0ABE               	incf	time_make@i+1,f
  2135  036D  3000               	movlw	0
  2136  036E  07BE               	addwf	time_make@i+1,f
  2137  036F  2B39               	goto	l1794
  2138  0370                     l1796:	
  2139                           
  2140                           ;TimeLib.c: 117: }
  2141                           ;TimeLib.c: 119: for (i = 1; i < timeinfo->tm_mon; i++) {
  2142  0370  3001               	movlw	1
  2143  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0373  00BD               	movwf	time_make@i
  2146  0374  3000               	movlw	0
  2147  0375  00BE               	movwf	time_make@i+1
  2148  0376                     l1808:	
  2149  0376  083F               	movf	time_make@timeinfo,w
  2150  0377  3E05               	addlw	5
  2151  0378  0084               	movwf	4
  2152  0379  083E               	movf	time_make@i+1,w
  2153  037A  3A80               	xorlw	128
  2154  037B  00B5               	movwf	??_time_make
  2155  037C  3080               	movlw	128
  2156  037D  0235               	subwf	??_time_make,w
  2157  037E  1D03               	skipz
  2158  037F  2B83               	goto	u2385
  2159  0380  1383               	bcf	3,7	;select IRP bank0
  2160  0381  0800               	movf	0,w
  2161  0382  023D               	subwf	time_make@i,w
  2162  0383                     u2385:	
  2163  0383  1803               	btfsc	3,0
  2164  0384  2BE9               	goto	l1810
  2165                           
  2166                           ;TimeLib.c: 120: if (i == 2 && time_is_leap(timeinfo->tm_year + 1970))
  2167  0385  3002               	movlw	2
  2168  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0388  063D               	xorwf	time_make@i,w
  2171  0389  043E               	iorwf	time_make@i+1,w
  2172  038A  1D03               	skipz
  2173  038B  2BAE               	goto	l1804
  2174  038C  083F               	movf	time_make@timeinfo,w
  2175  038D  3E06               	addlw	6
  2176  038E  0084               	movwf	4
  2177  038F  1383               	bcf	3,7	;select IRP bank0
  2178  0390  0800               	movf	0,w
  2179  0391  3EB2               	addlw	178
  2180  0392  00AC               	movwf	time_is_leap@year
  2181  0393  3007               	movlw	7
  2182  0394  1803               	skipnc
  2183  0395  3008               	movlw	8
  2184  0396  00AD               	movwf	time_is_leap@year+1
  2185  0397  158A  25FD  118A   	fcall	_time_is_leap
  2186  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2187  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2188  039C  082D               	movf	?_time_is_leap+1,w
  2189  039D  042C               	iorwf	?_time_is_leap,w
  2190  039E  1903               	skipnz
  2191  039F  2BAE               	goto	l1804
  2192                           
  2193                           ;TimeLib.c: 121: tstamp += (86400UL) * 29;
  2194  03A0  3080               	movlw	128
  2195  03A1  07B9               	addwf	time_make@tstamp,f
  2196  03A2  303B               	movlw	59
  2197  03A3  1803               	skipnc
  2198  03A4  303C               	movlw	60
  2199  03A5  07BA               	addwf	time_make@tstamp+1,f
  2200  03A6  3026               	movlw	38
  2201  03A7  1803               	skipnc
  2202  03A8  3027               	movlw	39
  2203  03A9  07BB               	addwf	time_make@tstamp+2,f
  2204  03AA  3000               	movlw	0
  2205  03AB  1803               	skipnc
  2206  03AC  3001               	movlw	1
  2207  03AD  2BE1               	goto	L4
  2208  03AE                     l1804:	
  2209                           
  2210                           ;TimeLib.c: 122: else
  2211                           ;TimeLib.c: 123: tstamp += (86400UL) * month_length[i - 1];
  2212  03AE  083D               	movf	time_make@i,w
  2213  03AF  3EFF               	addlw	255
  2214  03B0  3E01               	addlw	low (_month_length-__stringbase)
  2215  03B1  0084               	movwf	4
  2216  03B2  118A  2034  118A   	fcall	stringdir
  2217  03B5  00B5               	movwf	??_time_make
  2218  03B6  01B6               	clrf	??_time_make+1
  2219  03B7  01B7               	clrf	??_time_make+2
  2220  03B8  01B8               	clrf	??_time_make+3
  2221  03B9  0838               	movf	??_time_make+3,w
  2222  03BA  00A3               	movwf	___lmul@multiplier+3
  2223  03BB  0837               	movf	??_time_make+2,w
  2224  03BC  00A2               	movwf	___lmul@multiplier+2
  2225  03BD  0836               	movf	??_time_make+1,w
  2226  03BE  00A1               	movwf	___lmul@multiplier+1
  2227  03BF  0835               	movf	??_time_make,w
  2228  03C0  00A0               	movwf	___lmul@multiplier
  2229  03C1  3000               	movlw	0
  2230  03C2  00A7               	movwf	___lmul@multiplicand+3
  2231  03C3  3001               	movlw	1
  2232  03C4  00A6               	movwf	___lmul@multiplicand+2
  2233  03C5  3051               	movlw	81
  2234  03C6  00A5               	movwf	___lmul@multiplicand+1
  2235  03C7  3080               	movlw	128
  2236  03C8  00A4               	movwf	___lmul@multiplicand
  2237  03C9  158A  2678  118A   	fcall	___lmul
  2238  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2239  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2240  03CE  0820               	movf	?___lmul,w
  2241  03CF  07B9               	addwf	time_make@tstamp,f
  2242  03D0  0821               	movf	?___lmul+1,w
  2243  03D1  1103               	clrz
  2244  03D2  1803               	skipnc
  2245  03D3  3E01               	addlw	1
  2246  03D4  1D03               	btfss	3,2
  2247  03D5  07BA               	addwf	time_make@tstamp+1,f
  2248  03D6  0822               	movf	?___lmul+2,w
  2249  03D7  1103               	clrz
  2250  03D8  1803               	skipnc
  2251  03D9  3E01               	addlw	1
  2252  03DA  1D03               	btfss	3,2
  2253  03DB  07BB               	addwf	time_make@tstamp+2,f
  2254  03DC  0823               	movf	?___lmul+3,w
  2255  03DD  1103               	clrz
  2256  03DE  1803               	skipnc
  2257  03DF  3E01               	addlw	1
  2258  03E0  1D03               	btfss	3,2
  2259  03E1                     L4:	
  2260  03E1  07BC               	addwf	time_make@tstamp+3,f
  2261  03E2  3001               	movlw	1
  2262  03E3  07BD               	addwf	time_make@i,f
  2263  03E4  1803               	skipnc
  2264  03E5  0ABE               	incf	time_make@i+1,f
  2265  03E6  3000               	movlw	0
  2266  03E7  07BE               	addwf	time_make@i+1,f
  2267  03E8  2B76               	goto	l1808
  2268  03E9                     l1810:	
  2269                           
  2270                           ;TimeLib.c: 124: }
  2271                           ;TimeLib.c: 126: tstamp += (uint32_t) (timeinfo->tm_mday - 1) * (uint32_t) (86400UL);
  2272  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2273  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2274  03EB  083F               	movf	time_make@timeinfo,w
  2275  03EC  3E04               	addlw	4
  2276  03ED  0084               	movwf	4
  2277  03EE  1383               	bcf	3,7	;select IRP bank0
  2278  03EF  0800               	movf	0,w
  2279  03F0  3EFF               	addlw	255
  2280  03F1  00A0               	movwf	___lmul@multiplier
  2281  03F2  30FF               	movlw	255
  2282  03F3  1803               	skipnc
  2283  03F4  3000               	movlw	0
  2284  03F5  00A1               	movwf	___lmul@multiplier+1
  2285  03F6  01A2               	clrf	___lmul@multiplier+2
  2286  03F7  1BA1               	btfsc	___lmul@multiplier+1,7
  2287  03F8  03A2               	decf	___lmul@multiplier+2,f
  2288  03F9  0822               	movf	___lmul@multiplier+2,w
  2289  03FA  00A3               	movwf	___lmul@multiplier+3
  2290  03FB  3000               	movlw	0
  2291  03FC  00A7               	movwf	___lmul@multiplicand+3
  2292  03FD  3001               	movlw	1
  2293  03FE  00A6               	movwf	___lmul@multiplicand+2
  2294  03FF  3051               	movlw	81
  2295  0400  00A5               	movwf	___lmul@multiplicand+1
  2296  0401  3080               	movlw	128
  2297  0402  00A4               	movwf	___lmul@multiplicand
  2298  0403  158A  2678  118A   	fcall	___lmul
  2299  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0408  0820               	movf	?___lmul,w
  2302  0409  07B9               	addwf	time_make@tstamp,f
  2303  040A  0821               	movf	?___lmul+1,w
  2304  040B  1103               	clrz
  2305  040C  1803               	skipnc
  2306  040D  3E01               	addlw	1
  2307  040E  1D03               	btfss	3,2
  2308  040F  07BA               	addwf	time_make@tstamp+1,f
  2309  0410  0822               	movf	?___lmul+2,w
  2310  0411  1103               	clrz
  2311  0412  1803               	skipnc
  2312  0413  3E01               	addlw	1
  2313  0414  1D03               	btfss	3,2
  2314  0415  07BB               	addwf	time_make@tstamp+2,f
  2315  0416  0823               	movf	?___lmul+3,w
  2316  0417  1103               	clrz
  2317  0418  1803               	skipnc
  2318  0419  3E01               	addlw	1
  2319  041A  1D03               	btfss	3,2
  2320  041B  07BC               	addwf	time_make@tstamp+3,f
  2321                           
  2322                           ;TimeLib.c: 128: tstamp += (uint32_t) timeinfo->tm_hour * (uint32_t) (3600UL);
  2323  041C  083F               	movf	time_make@timeinfo,w
  2324  041D  3E02               	addlw	2
  2325  041E  0084               	movwf	4
  2326  041F  1383               	bcf	3,7	;select IRP bank0
  2327  0420  0800               	movf	0,w
  2328  0421  00B5               	movwf	??_time_make
  2329  0422  01B6               	clrf	??_time_make+1
  2330  0423  01B7               	clrf	??_time_make+2
  2331  0424  01B8               	clrf	??_time_make+3
  2332  0425  0838               	movf	??_time_make+3,w
  2333  0426  00A3               	movwf	___lmul@multiplier+3
  2334  0427  0837               	movf	??_time_make+2,w
  2335  0428  00A2               	movwf	___lmul@multiplier+2
  2336  0429  0836               	movf	??_time_make+1,w
  2337  042A  00A1               	movwf	___lmul@multiplier+1
  2338  042B  0835               	movf	??_time_make,w
  2339  042C  00A0               	movwf	___lmul@multiplier
  2340  042D  3000               	movlw	0
  2341  042E  00A7               	movwf	___lmul@multiplicand+3
  2342  042F  3000               	movlw	0
  2343  0430  00A6               	movwf	___lmul@multiplicand+2
  2344  0431  300E               	movlw	14
  2345  0432  00A5               	movwf	___lmul@multiplicand+1
  2346  0433  3010               	movlw	16
  2347  0434  00A4               	movwf	___lmul@multiplicand
  2348  0435  158A  2678  118A   	fcall	___lmul
  2349  0438  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0439  1303               	bcf	3,6	;RP1=0, select bank0
  2351  043A  0820               	movf	?___lmul,w
  2352  043B  07B9               	addwf	time_make@tstamp,f
  2353  043C  0821               	movf	?___lmul+1,w
  2354  043D  1103               	clrz
  2355  043E  1803               	skipnc
  2356  043F  3E01               	addlw	1
  2357  0440  1D03               	btfss	3,2
  2358  0441  07BA               	addwf	time_make@tstamp+1,f
  2359  0442  0822               	movf	?___lmul+2,w
  2360  0443  1103               	clrz
  2361  0444  1803               	skipnc
  2362  0445  3E01               	addlw	1
  2363  0446  1D03               	btfss	3,2
  2364  0447  07BB               	addwf	time_make@tstamp+2,f
  2365  0448  0823               	movf	?___lmul+3,w
  2366  0449  1103               	clrz
  2367  044A  1803               	skipnc
  2368  044B  3E01               	addlw	1
  2369  044C  1D03               	btfss	3,2
  2370  044D  07BC               	addwf	time_make@tstamp+3,f
  2371                           
  2372                           ;TimeLib.c: 129: tstamp += (uint32_t) timeinfo->tm_min * (uint32_t) (60UL);
  2373  044E  0A3F               	incf	time_make@timeinfo,w
  2374  044F  0084               	movwf	4
  2375  0450  1383               	bcf	3,7	;select IRP bank0
  2376  0451  0800               	movf	0,w
  2377  0452  00B5               	movwf	??_time_make
  2378  0453  01B6               	clrf	??_time_make+1
  2379  0454  01B7               	clrf	??_time_make+2
  2380  0455  01B8               	clrf	??_time_make+3
  2381  0456  0838               	movf	??_time_make+3,w
  2382  0457  00A3               	movwf	___lmul@multiplier+3
  2383  0458  0837               	movf	??_time_make+2,w
  2384  0459  00A2               	movwf	___lmul@multiplier+2
  2385  045A  0836               	movf	??_time_make+1,w
  2386  045B  00A1               	movwf	___lmul@multiplier+1
  2387  045C  0835               	movf	??_time_make,w
  2388  045D  00A0               	movwf	___lmul@multiplier
  2389  045E  3000               	movlw	0
  2390  045F  00A7               	movwf	___lmul@multiplicand+3
  2391  0460  3000               	movlw	0
  2392  0461  00A6               	movwf	___lmul@multiplicand+2
  2393  0462  3000               	movlw	0
  2394  0463  00A5               	movwf	___lmul@multiplicand+1
  2395  0464  303C               	movlw	60
  2396  0465  00A4               	movwf	___lmul@multiplicand
  2397  0466  158A  2678  118A   	fcall	___lmul
  2398  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2399  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2400  046B  0820               	movf	?___lmul,w
  2401  046C  07B9               	addwf	time_make@tstamp,f
  2402  046D  0821               	movf	?___lmul+1,w
  2403  046E  1103               	clrz
  2404  046F  1803               	skipnc
  2405  0470  3E01               	addlw	1
  2406  0471  1D03               	btfss	3,2
  2407  0472  07BA               	addwf	time_make@tstamp+1,f
  2408  0473  0822               	movf	?___lmul+2,w
  2409  0474  1103               	clrz
  2410  0475  1803               	skipnc
  2411  0476  3E01               	addlw	1
  2412  0477  1D03               	btfss	3,2
  2413  0478  07BB               	addwf	time_make@tstamp+2,f
  2414  0479  0823               	movf	?___lmul+3,w
  2415  047A  1103               	clrz
  2416  047B  1803               	skipnc
  2417  047C  3E01               	addlw	1
  2418  047D  1D03               	btfss	3,2
  2419  047E  07BC               	addwf	time_make@tstamp+3,f
  2420                           
  2421                           ;TimeLib.c: 130: tstamp += (uint32_t) timeinfo->tm_sec;
  2422  047F  083F               	movf	time_make@timeinfo,w
  2423  0480  0084               	movwf	4
  2424  0481  1383               	bcf	3,7	;select IRP bank0
  2425  0482  0800               	movf	0,w
  2426  0483  00B5               	movwf	??_time_make
  2427  0484  01B6               	clrf	??_time_make+1
  2428  0485  01B7               	clrf	??_time_make+2
  2429  0486  01B8               	clrf	??_time_make+3
  2430  0487  0835               	movf	??_time_make,w
  2431  0488  07B9               	addwf	time_make@tstamp,f
  2432  0489  0836               	movf	??_time_make+1,w
  2433  048A  1103               	clrz
  2434  048B  1803               	skipnc
  2435  048C  3E01               	addlw	1
  2436  048D  1D03               	btfss	3,2
  2437  048E  07BA               	addwf	time_make@tstamp+1,f
  2438  048F  0837               	movf	??_time_make+2,w
  2439  0490  1103               	clrz
  2440  0491  1803               	skipnc
  2441  0492  3E01               	addlw	1
  2442  0493  1D03               	btfss	3,2
  2443  0494  07BB               	addwf	time_make@tstamp+2,f
  2444  0495  0838               	movf	??_time_make+3,w
  2445  0496  1103               	clrz
  2446  0497  1803               	skipnc
  2447  0498  3E01               	addlw	1
  2448  0499  1D03               	btfss	3,2
  2449  049A  07BC               	addwf	time_make@tstamp+3,f
  2450                           
  2451                           ;TimeLib.c: 132: return tstamp;
  2452  049B  083C               	movf	time_make@tstamp+3,w
  2453  049C  00B4               	movwf	?_time_make+3
  2454  049D  083B               	movf	time_make@tstamp+2,w
  2455  049E  00B3               	movwf	?_time_make+2
  2456  049F  083A               	movf	time_make@tstamp+1,w
  2457  04A0  00B2               	movwf	?_time_make+1
  2458  04A1  0839               	movf	time_make@tstamp,w
  2459  04A2  00B1               	movwf	?_time_make
  2460  04A3  0008               	return
  2461  04A4                     __end_of_time_make:	
  2462                           
  2463                           	psect	text8
  2464  0E78                     __ptext8:	
  2465 ;; *************** function ___lmul *****************
  2466 ;; Defined at:
  2467 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2470 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  product         4    8[BANK0 ] unsigned long 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  4    0[BANK0 ] unsigned long 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         0       8       0       0       0
  2483 ;;      Locals:         0       4       0       0       0
  2484 ;;      Temps:          1       0       0       0       0
  2485 ;;      Totals:         1      12       0       0       0
  2486 ;;Total ram usage:       13 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    2
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_time_make
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           
  2497                           ;psect for function ___lmul
  2498  0E78                     ___lmul:	
  2499                           
  2500                           ;incstack = 0
  2501                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2502  0E78  3000               	movlw	0
  2503  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  2504  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  2505  0E7B  00AB               	movwf	___lmul@product+3
  2506  0E7C  3000               	movlw	0
  2507  0E7D  00AA               	movwf	___lmul@product+2
  2508  0E7E  3000               	movlw	0
  2509  0E7F  00A9               	movwf	___lmul@product+1
  2510  0E80  3000               	movlw	0
  2511  0E81  00A8               	movwf	___lmul@product
  2512  0E82                     l1692:	
  2513  0E82  1C20               	btfss	___lmul@multiplier,0
  2514  0E83  2E98               	goto	l1696
  2515  0E84  0824               	movf	___lmul@multiplicand,w
  2516  0E85  07A8               	addwf	___lmul@product,f
  2517  0E86  0825               	movf	___lmul@multiplicand+1,w
  2518  0E87  1103               	clrz
  2519  0E88  1803               	skipnc
  2520  0E89  3E01               	addlw	1
  2521  0E8A  1D03               	btfss	3,2
  2522  0E8B  07A9               	addwf	___lmul@product+1,f
  2523  0E8C  0826               	movf	___lmul@multiplicand+2,w
  2524  0E8D  1103               	clrz
  2525  0E8E  1803               	skipnc
  2526  0E8F  3E01               	addlw	1
  2527  0E90  1D03               	btfss	3,2
  2528  0E91  07AA               	addwf	___lmul@product+2,f
  2529  0E92  0827               	movf	___lmul@multiplicand+3,w
  2530  0E93  1103               	clrz
  2531  0E94  1803               	skipnc
  2532  0E95  3E01               	addlw	1
  2533  0E96  1D03               	btfss	3,2
  2534  0E97  07AB               	addwf	___lmul@product+3,f
  2535  0E98                     l1696:	
  2536  0E98  3001               	movlw	1
  2537  0E99  00F4               	movwf	??___lmul
  2538  0E9A                     u2105:	
  2539  0E9A  1003               	clrc
  2540  0E9B  0DA4               	rlf	___lmul@multiplicand,f
  2541  0E9C  0DA5               	rlf	___lmul@multiplicand+1,f
  2542  0E9D  0DA6               	rlf	___lmul@multiplicand+2,f
  2543  0E9E  0DA7               	rlf	___lmul@multiplicand+3,f
  2544  0E9F  0BF4               	decfsz	??___lmul,f
  2545  0EA0  2E9A               	goto	u2105
  2546  0EA1  3001               	movlw	1
  2547  0EA2                     u2115:	
  2548  0EA2  1003               	clrc
  2549  0EA3  0CA3               	rrf	___lmul@multiplier+3,f
  2550  0EA4  0CA2               	rrf	___lmul@multiplier+2,f
  2551  0EA5  0CA1               	rrf	___lmul@multiplier+1,f
  2552  0EA6  0CA0               	rrf	___lmul@multiplier,f
  2553  0EA7  3EFF               	addlw	-1
  2554  0EA8  1D03               	skipz
  2555  0EA9  2EA2               	goto	u2115
  2556  0EAA  0823               	movf	___lmul@multiplier+3,w
  2557  0EAB  0422               	iorwf	___lmul@multiplier+2,w
  2558  0EAC  0421               	iorwf	___lmul@multiplier+1,w
  2559  0EAD  0420               	iorwf	___lmul@multiplier,w
  2560  0EAE  1D03               	skipz
  2561  0EAF  2E82               	goto	l1692
  2562  0EB0  082B               	movf	___lmul@product+3,w
  2563  0EB1  00A3               	movwf	?___lmul+3
  2564  0EB2  082A               	movf	___lmul@product+2,w
  2565  0EB3  00A2               	movwf	?___lmul+2
  2566  0EB4  0829               	movf	___lmul@product+1,w
  2567  0EB5  00A1               	movwf	?___lmul+1
  2568  0EB6  0828               	movf	___lmul@product,w
  2569  0EB7  00A0               	movwf	?___lmul
  2570  0EB8  0008               	return
  2571  0EB9                     __end_of___lmul:	
  2572                           
  2573                           	psect	text9
  2574  0108                     __ptext9:	
  2575 ;; *************** function _time_break *****************
  2576 ;; Defined at:
  2577 ;;		line 135 in file "../TimeLib.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  timeinput       4   17[BANK0 ] unsigned long 
  2580 ;;  timeinfo        1   21[BANK0 ] PTR struct tm_t
  2581 ;;		 -> main@tinfo(7), 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  xTime           4   41[BANK0 ] unsigned long 
  2584 ;;  days            4   34[BANK0 ] unsigned long 
  2585 ;;  month           1   40[BANK0 ] unsigned char 
  2586 ;;  year            1   39[BANK0 ] unsigned char 
  2587 ;;  monthLength     1   38[BANK0 ] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;		None               void
  2590 ;; Registers used:
  2591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2597 ;;      Params:         0       5       0       0       0
  2598 ;;      Locals:         0      15       0       0       0
  2599 ;;      Temps:          0       8       0       0       0
  2600 ;;      Totals:         0      28       0       0       0
  2601 ;;Total ram usage:       28 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    4
  2604 ;; This function calls:
  2605 ;;		___lldiv
  2606 ;;		___llmod
  2607 ;;		_time_is_leap
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           
  2614                           ;psect for function _time_break
  2615  0108                     _time_break:	
  2616                           
  2617                           ;TimeLib.c: 137: uint8_t year;
  2618                           ;TimeLib.c: 138: uint8_t month, monthLength;
  2619                           ;TimeLib.c: 139: uint32_t xTime;
  2620                           ;TimeLib.c: 140: unsigned long days;
  2621                           ;TimeLib.c: 142: xTime = (uint32_t) timeinput;
  2622                           
  2623                           ;incstack = 0
  2624                           ; Regs used in _time_break: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2625  0108  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0109  1303               	bcf	3,6	;RP1=0, select bank0
  2627  010A  0834               	movf	time_break@timeinput+3,w
  2628  010B  00CC               	movwf	time_break@xTime+3
  2629  010C  0833               	movf	time_break@timeinput+2,w
  2630  010D  00CB               	movwf	time_break@xTime+2
  2631  010E  0832               	movf	time_break@timeinput+1,w
  2632  010F  00CA               	movwf	time_break@xTime+1
  2633  0110  0831               	movf	time_break@timeinput,w
  2634  0111  00C9               	movwf	time_break@xTime
  2635                           
  2636                           ;TimeLib.c: 143: timeinfo->tm_sec = xTime % 60;
  2637  0112  3000               	movlw	0
  2638  0113  00A3               	movwf	___llmod@divisor+3
  2639  0114  3000               	movlw	0
  2640  0115  00A2               	movwf	___llmod@divisor+2
  2641  0116  3000               	movlw	0
  2642  0117  00A1               	movwf	___llmod@divisor+1
  2643  0118  303C               	movlw	60
  2644  0119  00A0               	movwf	___llmod@divisor
  2645  011A  084C               	movf	time_break@xTime+3,w
  2646  011B  00A7               	movwf	___llmod@dividend+3
  2647  011C  084B               	movf	time_break@xTime+2,w
  2648  011D  00A6               	movwf	___llmod@dividend+2
  2649  011E  084A               	movf	time_break@xTime+1,w
  2650  011F  00A5               	movwf	___llmod@dividend+1
  2651  0120  0849               	movf	time_break@xTime,w
  2652  0121  00A4               	movwf	___llmod@dividend
  2653  0122  158A  26B9  118A   	fcall	___llmod
  2654  0125  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0126  1303               	bcf	3,6	;RP1=0, select bank0
  2656  0127  0820               	movf	?___llmod,w
  2657  0128  00B6               	movwf	??_time_break
  2658  0129  0835               	movf	time_break@timeinfo,w
  2659  012A  0084               	movwf	4
  2660  012B  0836               	movf	??_time_break,w
  2661  012C  1383               	bcf	3,7	;select IRP bank0
  2662  012D  0080               	movwf	0
  2663                           
  2664                           ;TimeLib.c: 145: xTime /= 60;
  2665  012E  3000               	movlw	0
  2666  012F  00A3               	movwf	___lldiv@divisor+3
  2667  0130  3000               	movlw	0
  2668  0131  00A2               	movwf	___lldiv@divisor+2
  2669  0132  3000               	movlw	0
  2670  0133  00A1               	movwf	___lldiv@divisor+1
  2671  0134  303C               	movlw	60
  2672  0135  00A0               	movwf	___lldiv@divisor
  2673  0136  084C               	movf	time_break@xTime+3,w
  2674  0137  00A7               	movwf	___lldiv@dividend+3
  2675  0138  084B               	movf	time_break@xTime+2,w
  2676  0139  00A6               	movwf	___lldiv@dividend+2
  2677  013A  084A               	movf	time_break@xTime+1,w
  2678  013B  00A5               	movwf	___lldiv@dividend+1
  2679  013C  0849               	movf	time_break@xTime,w
  2680  013D  00A4               	movwf	___lldiv@dividend
  2681  013E  118A  2773  118A   	fcall	___lldiv
  2682  0141  1283               	bcf	3,5	;RP0=0, select bank0
  2683  0142  1303               	bcf	3,6	;RP1=0, select bank0
  2684  0143  0823               	movf	?___lldiv+3,w
  2685  0144  00CC               	movwf	time_break@xTime+3
  2686  0145  0822               	movf	?___lldiv+2,w
  2687  0146  00CB               	movwf	time_break@xTime+2
  2688  0147  0821               	movf	?___lldiv+1,w
  2689  0148  00CA               	movwf	time_break@xTime+1
  2690  0149  0820               	movf	?___lldiv,w
  2691  014A  00C9               	movwf	time_break@xTime
  2692                           
  2693                           ;TimeLib.c: 146: timeinfo->tm_min = xTime % 60;
  2694  014B  3000               	movlw	0
  2695  014C  00A3               	movwf	___llmod@divisor+3
  2696  014D  3000               	movlw	0
  2697  014E  00A2               	movwf	___llmod@divisor+2
  2698  014F  3000               	movlw	0
  2699  0150  00A1               	movwf	___llmod@divisor+1
  2700  0151  303C               	movlw	60
  2701  0152  00A0               	movwf	___llmod@divisor
  2702  0153  084C               	movf	time_break@xTime+3,w
  2703  0154  00A7               	movwf	___llmod@dividend+3
  2704  0155  084B               	movf	time_break@xTime+2,w
  2705  0156  00A6               	movwf	___llmod@dividend+2
  2706  0157  084A               	movf	time_break@xTime+1,w
  2707  0158  00A5               	movwf	___llmod@dividend+1
  2708  0159  0849               	movf	time_break@xTime,w
  2709  015A  00A4               	movwf	___llmod@dividend
  2710  015B  158A  26B9  118A   	fcall	___llmod
  2711  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2712  015F  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0160  0820               	movf	?___llmod,w
  2714  0161  00B6               	movwf	??_time_break
  2715  0162  0A35               	incf	time_break@timeinfo,w
  2716  0163  0084               	movwf	4
  2717  0164  0836               	movf	??_time_break,w
  2718  0165  1383               	bcf	3,7	;select IRP bank0
  2719  0166  0080               	movwf	0
  2720                           
  2721                           ;TimeLib.c: 148: xTime /= 60;
  2722  0167  3000               	movlw	0
  2723  0168  00A3               	movwf	___lldiv@divisor+3
  2724  0169  3000               	movlw	0
  2725  016A  00A2               	movwf	___lldiv@divisor+2
  2726  016B  3000               	movlw	0
  2727  016C  00A1               	movwf	___lldiv@divisor+1
  2728  016D  303C               	movlw	60
  2729  016E  00A0               	movwf	___lldiv@divisor
  2730  016F  084C               	movf	time_break@xTime+3,w
  2731  0170  00A7               	movwf	___lldiv@dividend+3
  2732  0171  084B               	movf	time_break@xTime+2,w
  2733  0172  00A6               	movwf	___lldiv@dividend+2
  2734  0173  084A               	movf	time_break@xTime+1,w
  2735  0174  00A5               	movwf	___lldiv@dividend+1
  2736  0175  0849               	movf	time_break@xTime,w
  2737  0176  00A4               	movwf	___lldiv@dividend
  2738  0177  118A  2773  118A   	fcall	___lldiv
  2739  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2740  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2741  017C  0823               	movf	?___lldiv+3,w
  2742  017D  00CC               	movwf	time_break@xTime+3
  2743  017E  0822               	movf	?___lldiv+2,w
  2744  017F  00CB               	movwf	time_break@xTime+2
  2745  0180  0821               	movf	?___lldiv+1,w
  2746  0181  00CA               	movwf	time_break@xTime+1
  2747  0182  0820               	movf	?___lldiv,w
  2748  0183  00C9               	movwf	time_break@xTime
  2749                           
  2750                           ;TimeLib.c: 149: timeinfo->tm_hour = xTime % 24;
  2751  0184  3000               	movlw	0
  2752  0185  00A3               	movwf	___llmod@divisor+3
  2753  0186  3000               	movlw	0
  2754  0187  00A2               	movwf	___llmod@divisor+2
  2755  0188  3000               	movlw	0
  2756  0189  00A1               	movwf	___llmod@divisor+1
  2757  018A  3018               	movlw	24
  2758  018B  00A0               	movwf	___llmod@divisor
  2759  018C  084C               	movf	time_break@xTime+3,w
  2760  018D  00A7               	movwf	___llmod@dividend+3
  2761  018E  084B               	movf	time_break@xTime+2,w
  2762  018F  00A6               	movwf	___llmod@dividend+2
  2763  0190  084A               	movf	time_break@xTime+1,w
  2764  0191  00A5               	movwf	___llmod@dividend+1
  2765  0192  0849               	movf	time_break@xTime,w
  2766  0193  00A4               	movwf	___llmod@dividend
  2767  0194  158A  26B9  118A   	fcall	___llmod
  2768  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0198  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0199  0820               	movf	?___llmod,w
  2771  019A  00B6               	movwf	??_time_break
  2772  019B  0835               	movf	time_break@timeinfo,w
  2773  019C  3E02               	addlw	2
  2774  019D  0084               	movwf	4
  2775  019E  0836               	movf	??_time_break,w
  2776  019F  1383               	bcf	3,7	;select IRP bank0
  2777  01A0  0080               	movwf	0
  2778                           
  2779                           ;TimeLib.c: 151: xTime /= 24;
  2780  01A1  3000               	movlw	0
  2781  01A2  00A3               	movwf	___lldiv@divisor+3
  2782  01A3  3000               	movlw	0
  2783  01A4  00A2               	movwf	___lldiv@divisor+2
  2784  01A5  3000               	movlw	0
  2785  01A6  00A1               	movwf	___lldiv@divisor+1
  2786  01A7  3018               	movlw	24
  2787  01A8  00A0               	movwf	___lldiv@divisor
  2788  01A9  084C               	movf	time_break@xTime+3,w
  2789  01AA  00A7               	movwf	___lldiv@dividend+3
  2790  01AB  084B               	movf	time_break@xTime+2,w
  2791  01AC  00A6               	movwf	___lldiv@dividend+2
  2792  01AD  084A               	movf	time_break@xTime+1,w
  2793  01AE  00A5               	movwf	___lldiv@dividend+1
  2794  01AF  0849               	movf	time_break@xTime,w
  2795  01B0  00A4               	movwf	___lldiv@dividend
  2796  01B1  118A  2773  118A   	fcall	___lldiv
  2797  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2798  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2799  01B6  0823               	movf	?___lldiv+3,w
  2800  01B7  00CC               	movwf	time_break@xTime+3
  2801  01B8  0822               	movf	?___lldiv+2,w
  2802  01B9  00CB               	movwf	time_break@xTime+2
  2803  01BA  0821               	movf	?___lldiv+1,w
  2804  01BB  00CA               	movwf	time_break@xTime+1
  2805  01BC  0820               	movf	?___lldiv,w
  2806  01BD  00C9               	movwf	time_break@xTime
  2807                           
  2808                           ;TimeLib.c: 152: timeinfo->tm_wday = ((xTime + 4) % 7) + 1;
  2809  01BE  3000               	movlw	0
  2810  01BF  00A3               	movwf	___llmod@divisor+3
  2811  01C0  3000               	movlw	0
  2812  01C1  00A2               	movwf	___llmod@divisor+2
  2813  01C2  3000               	movlw	0
  2814  01C3  00A1               	movwf	___llmod@divisor+1
  2815  01C4  3007               	movlw	7
  2816  01C5  00A0               	movwf	___llmod@divisor
  2817  01C6  3004               	movlw	4
  2818  01C7  00B6               	movwf	??_time_break
  2819  01C8  3000               	movlw	0
  2820  01C9  00B7               	movwf	??_time_break+1
  2821  01CA  3000               	movlw	0
  2822  01CB  00B8               	movwf	??_time_break+2
  2823  01CC  3000               	movlw	0
  2824  01CD  00B9               	movwf	??_time_break+3
  2825  01CE  0849               	movf	time_break@xTime,w
  2826  01CF  07B6               	addwf	??_time_break,f
  2827  01D0  084A               	movf	time_break@xTime+1,w
  2828  01D1  1803               	skipnc
  2829  01D2  0F4A               	incfsz	time_break@xTime+1,w
  2830  01D3  29D5               	goto	u2640
  2831  01D4  29D6               	goto	u2641
  2832  01D5                     u2640:	
  2833  01D5  07B7               	addwf	??_time_break+1,f
  2834  01D6                     u2641:	
  2835  01D6  084B               	movf	time_break@xTime+2,w
  2836  01D7  1803               	skipnc
  2837  01D8  0F4B               	incfsz	time_break@xTime+2,w
  2838  01D9  29DB               	goto	u2642
  2839  01DA  29DC               	goto	u2643
  2840  01DB                     u2642:	
  2841  01DB  07B8               	addwf	??_time_break+2,f
  2842  01DC                     u2643:	
  2843  01DC  084C               	movf	time_break@xTime+3,w
  2844  01DD  1803               	skipnc
  2845  01DE  0A4C               	incf	time_break@xTime+3,w
  2846  01DF  07B9               	addwf	??_time_break+3,f
  2847  01E0  0839               	movf	??_time_break+3,w
  2848  01E1  00A7               	movwf	___llmod@dividend+3
  2849  01E2  0838               	movf	??_time_break+2,w
  2850  01E3  00A6               	movwf	___llmod@dividend+2
  2851  01E4  0837               	movf	??_time_break+1,w
  2852  01E5  00A5               	movwf	___llmod@dividend+1
  2853  01E6  0836               	movf	??_time_break,w
  2854  01E7  00A4               	movwf	___llmod@dividend
  2855  01E8  158A  26B9  118A   	fcall	___llmod
  2856  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  2857  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  2858  01ED  0820               	movf	?___llmod,w
  2859  01EE  3E01               	addlw	1
  2860  01EF  00BA               	movwf	??_time_break+4
  2861  01F0  0835               	movf	time_break@timeinfo,w
  2862  01F1  3E03               	addlw	3
  2863  01F2  0084               	movwf	4
  2864  01F3  083A               	movf	??_time_break+4,w
  2865  01F4  1383               	bcf	3,7	;select IRP bank0
  2866  01F5  0080               	movwf	0
  2867                           
  2868                           ;TimeLib.c: 154: year = 0;
  2869  01F6  01C7               	clrf	time_break@year
  2870                           
  2871                           ;TimeLib.c: 155: days = 0;
  2872  01F7  3000               	movlw	0
  2873  01F8  00C5               	movwf	time_break@days+3
  2874  01F9  3000               	movlw	0
  2875  01FA  00C4               	movwf	time_break@days+2
  2876  01FB  3000               	movlw	0
  2877  01FC  00C3               	movwf	time_break@days+1
  2878  01FD  3000               	movlw	0
  2879  01FE  00C2               	movwf	time_break@days
  2880                           
  2881                           ;TimeLib.c: 156: while ((unsigned) (days += (time_is_leap(1970 + year) ? 366 : 365)) <= 
      +                          xTime)
  2882  01FF  2A04               	goto	l1946
  2883  0200                     l1944:	
  2884                           
  2885                           ;TimeLib.c: 157: year++;
  2886  0200  3001               	movlw	1
  2887  0201  00B6               	movwf	??_time_break
  2888  0202  0836               	movf	??_time_break,w
  2889  0203  07C7               	addwf	time_break@year,f
  2890  0204                     l1946:	
  2891  0204  0847               	movf	time_break@year,w
  2892  0205  3EB2               	addlw	178
  2893  0206  00AC               	movwf	time_is_leap@year
  2894  0207  3007               	movlw	7
  2895  0208  1803               	skipnc
  2896  0209  3008               	movlw	8
  2897  020A  00AD               	movwf	time_is_leap@year+1
  2898  020B  158A  25FD  118A   	fcall	_time_is_leap
  2899  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2900  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2901  0210  082D               	movf	?_time_is_leap+1,w
  2902  0211  042C               	iorwf	?_time_is_leap,w
  2903  0212  1D03               	skipz
  2904  0213  2A16               	goto	l1950
  2905  0214  306D               	movlw	109
  2906  0215  2A17               	goto	L5
  2907  0216                     l1950:	
  2908  0216  306E               	movlw	110
  2909  0217                     L5:	
  2910  0217  00BE               	movwf	_time_break$237
  2911  0218  3001               	movlw	1
  2912  0219  00BF               	movwf	_time_break$237+1
  2913  021A  083E               	movf	_time_break$237,w
  2914  021B  00B6               	movwf	??_time_break
  2915  021C  083F               	movf	_time_break$237+1,w
  2916  021D  00B7               	movwf	??_time_break+1
  2917  021E  3000               	movlw	0
  2918  021F  1BB7               	btfsc	??_time_break+1,7
  2919  0220  30FF               	movlw	255
  2920  0221  00B8               	movwf	??_time_break+2
  2921  0222  00B9               	movwf	??_time_break+3
  2922  0223  0836               	movf	??_time_break,w
  2923  0224  07C2               	addwf	time_break@days,f
  2924  0225  0837               	movf	??_time_break+1,w
  2925  0226  1103               	clrz
  2926  0227  1803               	skipnc
  2927  0228  3E01               	addlw	1
  2928  0229  1D03               	btfss	3,2
  2929  022A  07C3               	addwf	time_break@days+1,f
  2930  022B  0838               	movf	??_time_break+2,w
  2931  022C  1103               	clrz
  2932  022D  1803               	skipnc
  2933  022E  3E01               	addlw	1
  2934  022F  1D03               	btfss	3,2
  2935  0230  07C4               	addwf	time_break@days+2,f
  2936  0231  0839               	movf	??_time_break+3,w
  2937  0232  1103               	clrz
  2938  0233  1803               	skipnc
  2939  0234  3E01               	addlw	1
  2940  0235  1D03               	btfss	3,2
  2941  0236  07C5               	addwf	time_break@days+3,f
  2942  0237  0842               	movf	time_break@days,w
  2943  0238  00BA               	movwf	??_time_break+4
  2944  0239  0843               	movf	time_break@days+1,w
  2945  023A  00BB               	movwf	??_time_break+5
  2946  023B  01BC               	clrf	??_time_break+6
  2947  023C  01BD               	clrf	??_time_break+7
  2948  023D  083D               	movf	??_time_break+7,w
  2949  023E  024C               	subwf	time_break@xTime+3,w
  2950  023F  1D03               	skipz
  2951  0240  2A4B               	goto	u2675
  2952  0241  083C               	movf	??_time_break+6,w
  2953  0242  024B               	subwf	time_break@xTime+2,w
  2954  0243  1D03               	skipz
  2955  0244  2A4B               	goto	u2675
  2956  0245  083B               	movf	??_time_break+5,w
  2957  0246  024A               	subwf	time_break@xTime+1,w
  2958  0247  1D03               	skipz
  2959  0248  2A4B               	goto	u2675
  2960  0249  083A               	movf	??_time_break+4,w
  2961  024A  0249               	subwf	time_break@xTime,w
  2962  024B                     u2675:	
  2963  024B  1803               	skipnc
  2964  024C  2A00               	goto	l1944
  2965                           
  2966                           ;TimeLib.c: 159: timeinfo->tm_year = year;
  2967  024D  0847               	movf	time_break@year,w
  2968  024E  00B6               	movwf	??_time_break
  2969  024F  0835               	movf	time_break@timeinfo,w
  2970  0250  3E06               	addlw	6
  2971  0251  0084               	movwf	4
  2972  0252  0836               	movf	??_time_break,w
  2973  0253  1383               	bcf	3,7	;select IRP bank0
  2974  0254  0080               	movwf	0
  2975                           
  2976                           ;TimeLib.c: 161: days -= time_is_leap(1970 + year) ? 366 : 365;
  2977  0255  0847               	movf	time_break@year,w
  2978  0256  3EB2               	addlw	178
  2979  0257  00AC               	movwf	time_is_leap@year
  2980  0258  3007               	movlw	7
  2981  0259  1803               	skipnc
  2982  025A  3008               	movlw	8
  2983  025B  00AD               	movwf	time_is_leap@year+1
  2984  025C  158A  25FD  118A   	fcall	_time_is_leap
  2985  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0261  082D               	movf	?_time_is_leap+1,w
  2988  0262  042C               	iorwf	?_time_is_leap,w
  2989  0263  1D03               	skipz
  2990  0264  2A67               	goto	l1958
  2991  0265  306D               	movlw	109
  2992  0266  2A68               	goto	L6
  2993  0267                     l1958:	
  2994  0267  306E               	movlw	110
  2995  0268                     L6:	
  2996  0268  00C0               	movwf	_time_break$238
  2997  0269  3001               	movlw	1
  2998  026A  00C1               	movwf	_time_break$238+1
  2999  026B  0840               	movf	_time_break$238,w
  3000  026C  00B6               	movwf	??_time_break
  3001  026D  0841               	movf	_time_break$238+1,w
  3002  026E  00B7               	movwf	??_time_break+1
  3003  026F  3000               	movlw	0
  3004  0270  1BB7               	btfsc	??_time_break+1,7
  3005  0271  30FF               	movlw	255
  3006  0272  00B8               	movwf	??_time_break+2
  3007  0273  00B9               	movwf	??_time_break+3
  3008  0274  0836               	movf	??_time_break,w
  3009  0275  02C2               	subwf	time_break@days,f
  3010  0276  0837               	movf	??_time_break+1,w
  3011  0277  1C03               	skipc
  3012  0278  0F37               	incfsz	??_time_break+1,w
  3013  0279  2A7B               	goto	u2695
  3014  027A  2A7C               	goto	u2696
  3015  027B                     u2695:	
  3016  027B  02C3               	subwf	time_break@days+1,f
  3017  027C                     u2696:	
  3018  027C  0838               	movf	??_time_break+2,w
  3019  027D  1C03               	skipc
  3020  027E  0F38               	incfsz	??_time_break+2,w
  3021  027F  2A81               	goto	u2697
  3022  0280  2A82               	goto	u2698
  3023  0281                     u2697:	
  3024  0281  02C4               	subwf	time_break@days+2,f
  3025  0282                     u2698:	
  3026  0282  0839               	movf	??_time_break+3,w
  3027  0283  1C03               	skipc
  3028  0284  0F39               	incfsz	??_time_break+3,w
  3029  0285  2A87               	goto	u2699
  3030  0286  2A88               	goto	u2690
  3031  0287                     u2699:	
  3032  0287  02C5               	subwf	time_break@days+3,f
  3033  0288                     u2690:	
  3034                           
  3035                           ;TimeLib.c: 162: xTime -= days;
  3036  0288  0842               	movf	time_break@days,w
  3037  0289  02C9               	subwf	time_break@xTime,f
  3038  028A  0843               	movf	time_break@days+1,w
  3039  028B  1C03               	skipc
  3040  028C  0F43               	incfsz	time_break@days+1,w
  3041  028D  02CA               	subwf	time_break@xTime+1,f
  3042  028E  0844               	movf	time_break@days+2,w
  3043  028F  1C03               	skipc
  3044  0290  0F44               	incfsz	time_break@days+2,w
  3045  0291  02CB               	subwf	time_break@xTime+2,f
  3046  0292  0845               	movf	time_break@days+3,w
  3047  0293  1C03               	skipc
  3048  0294  0F45               	incfsz	time_break@days+3,w
  3049  0295  02CC               	subwf	time_break@xTime+3,f
  3050                           
  3051                           ;TimeLib.c: 164: days = 0;
  3052  0296  3000               	movlw	0
  3053  0297  00C5               	movwf	time_break@days+3
  3054  0298  3000               	movlw	0
  3055  0299  00C4               	movwf	time_break@days+2
  3056  029A  3000               	movlw	0
  3057  029B  00C3               	movwf	time_break@days+1
  3058  029C  3000               	movlw	0
  3059  029D  00C2               	movwf	time_break@days
  3060                           
  3061                           ;TimeLib.c: 165: month = 0;
  3062  029E  01C8               	clrf	time_break@month
  3063                           
  3064                           ;TimeLib.c: 166: monthLength = 0;
  3065  029F  01C6               	clrf	time_break@monthLength
  3066                           
  3067                           ;TimeLib.c: 167: for (month = 0; month < 12; month++) {
  3068  02A0  01C8               	clrf	time_break@month
  3069  02A1  300C               	movlw	12
  3070  02A2  0248               	subwf	time_break@month,w
  3071  02A3  1803               	btfsc	3,0
  3072  02A4  2AFC               	goto	l1988
  3073  02A5                     l1970:	
  3074                           
  3075                           ;TimeLib.c: 169: if (month == 1) {
  3076  02A5  0848               	movf	time_break@month,w
  3077  02A6  3A01               	xorlw	1
  3078  02A7  1D03               	skipz
  3079  02A8  2ABD               	goto	l1978
  3080                           
  3081                           ;TimeLib.c: 170: if (time_is_leap(1970 + year)) {
  3082  02A9  0847               	movf	time_break@year,w
  3083  02AA  3EB2               	addlw	178
  3084  02AB  00AC               	movwf	time_is_leap@year
  3085  02AC  3007               	movlw	7
  3086  02AD  1803               	skipnc
  3087  02AE  3008               	movlw	8
  3088  02AF  00AD               	movwf	time_is_leap@year+1
  3089  02B0  158A  25FD  118A   	fcall	_time_is_leap
  3090  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  3091  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  3092  02B5  082D               	movf	?_time_is_leap+1,w
  3093  02B6  042C               	iorwf	?_time_is_leap,w
  3094  02B7  1903               	skipnz
  3095  02B8  2ABB               	goto	l1976
  3096                           
  3097                           ;TimeLib.c: 171: monthLength = 29;
  3098  02B9  301D               	movlw	29
  3099  02BA  2AC3               	goto	L8
  3100  02BB                     l1976:	
  3101                           ;TimeLib.c: 172: } else {
  3102                           
  3103                           
  3104                           ;TimeLib.c: 173: monthLength = 28;
  3105  02BB  301C               	movlw	28
  3106  02BC  2AC3               	goto	L8
  3107  02BD                     l1978:	
  3108                           ;TimeLib.c: 174: }
  3109                           ;TimeLib.c: 175: } else {
  3110                           
  3111                           
  3112                           ;TimeLib.c: 176: monthLength = month_length[month];
  3113  02BD  0848               	movf	time_break@month,w
  3114  02BE  3E01               	addlw	low (_month_length-__stringbase)
  3115  02BF  0084               	movwf	4
  3116  02C0  118A  2034  118A   	fcall	stringdir
  3117  02C3                     L8:	
  3118  02C3  00B6               	movwf	??_time_break
  3119  02C4  0836               	movf	??_time_break,w
  3120  02C5  00C6               	movwf	time_break@monthLength
  3121                           
  3122                           ;TimeLib.c: 177: }
  3123                           ;TimeLib.c: 179: if (xTime >= monthLength) {
  3124  02C6  0846               	movf	time_break@monthLength,w
  3125  02C7  00B6               	movwf	??_time_break
  3126  02C8  01B7               	clrf	??_time_break+1
  3127  02C9  01B8               	clrf	??_time_break+2
  3128  02CA  01B9               	clrf	??_time_break+3
  3129  02CB  0839               	movf	??_time_break+3,w
  3130  02CC  024C               	subwf	time_break@xTime+3,w
  3131  02CD  1D03               	skipz
  3132  02CE  2AD9               	goto	u2735
  3133  02CF  0838               	movf	??_time_break+2,w
  3134  02D0  024B               	subwf	time_break@xTime+2,w
  3135  02D1  1D03               	skipz
  3136  02D2  2AD9               	goto	u2735
  3137  02D3  0837               	movf	??_time_break+1,w
  3138  02D4  024A               	subwf	time_break@xTime+1,w
  3139  02D5  1D03               	skipz
  3140  02D6  2AD9               	goto	u2735
  3141  02D7  0836               	movf	??_time_break,w
  3142  02D8  0249               	subwf	time_break@xTime,w
  3143  02D9                     u2735:	
  3144  02D9  1C03               	skipc
  3145  02DA  2AFC               	goto	l1988
  3146                           
  3147                           ;TimeLib.c: 180: xTime -= monthLength;
  3148  02DB  0846               	movf	time_break@monthLength,w
  3149  02DC  00B6               	movwf	??_time_break
  3150  02DD  01B7               	clrf	??_time_break+1
  3151  02DE  01B8               	clrf	??_time_break+2
  3152  02DF  01B9               	clrf	??_time_break+3
  3153  02E0  0836               	movf	??_time_break,w
  3154  02E1  02C9               	subwf	time_break@xTime,f
  3155  02E2  0837               	movf	??_time_break+1,w
  3156  02E3  1C03               	skipc
  3157  02E4  0F37               	incfsz	??_time_break+1,w
  3158  02E5  2AE7               	goto	u2745
  3159  02E6  2AE8               	goto	u2746
  3160  02E7                     u2745:	
  3161  02E7  02CA               	subwf	time_break@xTime+1,f
  3162  02E8                     u2746:	
  3163  02E8  0838               	movf	??_time_break+2,w
  3164  02E9  1C03               	skipc
  3165  02EA  0F38               	incfsz	??_time_break+2,w
  3166  02EB  2AED               	goto	u2747
  3167  02EC  2AEE               	goto	u2748
  3168  02ED                     u2747:	
  3169  02ED  02CB               	subwf	time_break@xTime+2,f
  3170  02EE                     u2748:	
  3171  02EE  0839               	movf	??_time_break+3,w
  3172  02EF  1C03               	skipc
  3173  02F0  0F39               	incfsz	??_time_break+3,w
  3174  02F1  2AF3               	goto	u2749
  3175  02F2  2AF4               	goto	l1984
  3176  02F3                     u2749:	
  3177  02F3  02CC               	subwf	time_break@xTime+3,f
  3178  02F4                     l1984:	
  3179                           ;TimeLib.c: 182: break;
  3180                           
  3181                           ;TimeLib.c: 181: } else {
  3182                           
  3183  02F4  3001               	movlw	1
  3184  02F5  00B6               	movwf	??_time_break
  3185  02F6  0836               	movf	??_time_break,w
  3186  02F7  07C8               	addwf	time_break@month,f
  3187  02F8  300C               	movlw	12
  3188  02F9  0248               	subwf	time_break@month,w
  3189  02FA  1C03               	skipc
  3190  02FB  2AA5               	goto	l1970
  3191  02FC                     l1988:	
  3192                           
  3193                           ;TimeLib.c: 183: }
  3194                           ;TimeLib.c: 184: }
  3195                           ;TimeLib.c: 185: timeinfo->tm_mon = month + 1;
  3196  02FC  0848               	movf	time_break@month,w
  3197  02FD  3E01               	addlw	1
  3198  02FE  00B6               	movwf	??_time_break
  3199  02FF  0835               	movf	time_break@timeinfo,w
  3200  0300  3E05               	addlw	5
  3201  0301  0084               	movwf	4
  3202  0302  0836               	movf	??_time_break,w
  3203  0303  1383               	bcf	3,7	;select IRP bank0
  3204  0304  0080               	movwf	0
  3205                           
  3206                           ;TimeLib.c: 186: timeinfo->tm_mday = xTime + 1;
  3207  0305  0849               	movf	time_break@xTime,w
  3208  0306  3E01               	addlw	1
  3209  0307  00B6               	movwf	??_time_break
  3210  0308  0835               	movf	time_break@timeinfo,w
  3211  0309  3E04               	addlw	4
  3212  030A  0084               	movwf	4
  3213  030B  0836               	movf	??_time_break,w
  3214  030C  0080               	movwf	0
  3215  030D  0008               	return
  3216  030E                     __end_of_time_break:	
  3217                           
  3218                           	psect	text10
  3219  0DFD                     __ptext10:	
  3220 ;; *************** function _time_is_leap *****************
  3221 ;; Defined at:
  3222 ;;		line 56 in file "../TimeLib.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  year            2   12[BANK0 ] unsigned int 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  2   12[BANK0 ] int 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0, pclath, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3236 ;;      Params:         0       2       0       0       0
  3237 ;;      Locals:         0       1       0       0       0
  3238 ;;      Temps:          0       2       0       0       0
  3239 ;;      Totals:         0       5       0       0       0
  3240 ;;Total ram usage:        5 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    3
  3243 ;; This function calls:
  3244 ;;		___lwmod
  3245 ;; This function is called by:
  3246 ;;		_time_make
  3247 ;;		_time_break
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           
  3252                           ;psect for function _time_is_leap
  3253  0DFD                     _time_is_leap:	
  3254                           
  3255                           ;TimeLib.c: 59: return((year % 4 == 0 && year % 100 != 0) || year % 400 == 0);
  3256                           
  3257                           ;incstack = 0
  3258                           ; Regs used in _time_is_leap: [wreg+status,2+status,0+pclath+cstack]
  3259  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0DFF  01B0               	clrf	_time_is_leap$204
  3262  0E00  0AB0               	incf	_time_is_leap$204,f
  3263  0E01  3003               	movlw	3
  3264  0E02  052C               	andwf	time_is_leap@year,w
  3265  0E03  00AE               	movwf	??_time_is_leap
  3266  0E04  3000               	movlw	0
  3267  0E05  052D               	andwf	time_is_leap@year+1,w
  3268  0E06  00AF               	movwf	??_time_is_leap+1
  3269  0E07  082F               	movf	??_time_is_leap+1,w
  3270  0E08  042E               	iorwf	??_time_is_leap,w
  3271  0E09  1D03               	skipz
  3272  0E0A  2E1E               	goto	l1658
  3273  0E0B  3064               	movlw	100
  3274  0E0C  00A7               	movwf	___lwmod@divisor
  3275  0E0D  3000               	movlw	0
  3276  0E0E  00A8               	movwf	___lwmod@divisor+1
  3277  0E0F  082D               	movf	time_is_leap@year+1,w
  3278  0E10  01AA               	clrf	___lwmod@dividend+1
  3279  0E11  07AA               	addwf	___lwmod@dividend+1,f
  3280  0E12  082C               	movf	time_is_leap@year,w
  3281  0E13  01A9               	clrf	___lwmod@dividend
  3282  0E14  07A9               	addwf	___lwmod@dividend,f
  3283  0E15  158A  258E  158A   	fcall	___lwmod
  3284  0E18  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0E19  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0E1A  0828               	movf	?___lwmod+1,w
  3287  0E1B  0427               	iorwf	?___lwmod,w
  3288  0E1C  1D03               	skipz
  3289  0E1D  2E30               	goto	l1662
  3290  0E1E                     l1658:	
  3291  0E1E  3090               	movlw	144
  3292  0E1F  00A7               	movwf	___lwmod@divisor
  3293  0E20  3001               	movlw	1
  3294  0E21  00A8               	movwf	___lwmod@divisor+1
  3295  0E22  082D               	movf	time_is_leap@year+1,w
  3296  0E23  01AA               	clrf	___lwmod@dividend+1
  3297  0E24  07AA               	addwf	___lwmod@dividend+1,f
  3298  0E25  082C               	movf	time_is_leap@year,w
  3299  0E26  01A9               	clrf	___lwmod@dividend
  3300  0E27  07A9               	addwf	___lwmod@dividend,f
  3301  0E28  158A  258E         	fcall	___lwmod
  3302  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0E2C  0828               	movf	?___lwmod+1,w
  3305  0E2D  0427               	iorwf	?___lwmod,w
  3306  0E2E  1D03               	btfss	3,2
  3307  0E2F  01B0               	clrf	_time_is_leap$204
  3308  0E30                     l1662:	
  3309  0E30  0830               	movf	_time_is_leap$204,w
  3310  0E31  00AE               	movwf	??_time_is_leap
  3311  0E32  01AF               	clrf	??_time_is_leap+1
  3312  0E33  082E               	movf	??_time_is_leap,w
  3313  0E34  00AC               	movwf	?_time_is_leap
  3314  0E35  082F               	movf	??_time_is_leap+1,w
  3315  0E36  00AD               	movwf	?_time_is_leap+1
  3316  0E37  0008               	return
  3317  0E38                     __end_of_time_is_leap:	
  3318                           
  3319                           	psect	text11
  3320  0EB9                     __ptext11:	
  3321 ;; *************** function ___llmod *****************
  3322 ;; Defined at:
  3323 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  divisor         4    0[BANK0 ] unsigned long 
  3326 ;;  dividend        4    4[BANK0 ] unsigned long 
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;  counter         1    5[COMMON] unsigned char 
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  4    0[BANK0 ] unsigned long 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       8       0       0       0
  3339 ;;      Locals:         1       0       0       0       0
  3340 ;;      Temps:          1       0       0       0       0
  3341 ;;      Totals:         2       8       0       0       0
  3342 ;;Total ram usage:       10 bytes
  3343 ;; Hardware stack levels used:    1
  3344 ;; Hardware stack levels required when called:    2
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_time_break
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function ___llmod
  3354  0EB9                     ___llmod:	
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3358  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  3360  0EBB  0823               	movf	___llmod@divisor+3,w
  3361  0EBC  0422               	iorwf	___llmod@divisor+2,w
  3362  0EBD  0421               	iorwf	___llmod@divisor+1,w
  3363  0EBE  0420               	iorwf	___llmod@divisor,w
  3364  0EBF  1903               	skipnz
  3365  0EC0  2EFE               	goto	l1744
  3366  0EC1  01F5               	clrf	___llmod@counter
  3367  0EC2  0AF5               	incf	___llmod@counter,f
  3368  0EC3                     l1734:	
  3369  0EC3  1BA3               	btfsc	___llmod@divisor+3,7
  3370  0EC4  2ED3               	goto	l1736
  3371  0EC5  3001               	movlw	1
  3372  0EC6  00F4               	movwf	??___llmod
  3373  0EC7                     u2215:	
  3374  0EC7  1003               	clrc
  3375  0EC8  0DA0               	rlf	___llmod@divisor,f
  3376  0EC9  0DA1               	rlf	___llmod@divisor+1,f
  3377  0ECA  0DA2               	rlf	___llmod@divisor+2,f
  3378  0ECB  0DA3               	rlf	___llmod@divisor+3,f
  3379  0ECC  0BF4               	decfsz	??___llmod,f
  3380  0ECD  2EC7               	goto	u2215
  3381  0ECE  3001               	movlw	1
  3382  0ECF  00F4               	movwf	??___llmod
  3383  0ED0  0874               	movf	??___llmod,w
  3384  0ED1  07F5               	addwf	___llmod@counter,f
  3385  0ED2  2EC3               	goto	l1734
  3386  0ED3                     l1736:	
  3387  0ED3  0823               	movf	___llmod@divisor+3,w
  3388  0ED4  0227               	subwf	___llmod@dividend+3,w
  3389  0ED5  1D03               	skipz
  3390  0ED6  2EE1               	goto	u2235
  3391  0ED7  0822               	movf	___llmod@divisor+2,w
  3392  0ED8  0226               	subwf	___llmod@dividend+2,w
  3393  0ED9  1D03               	skipz
  3394  0EDA  2EE1               	goto	u2235
  3395  0EDB  0821               	movf	___llmod@divisor+1,w
  3396  0EDC  0225               	subwf	___llmod@dividend+1,w
  3397  0EDD  1D03               	skipz
  3398  0EDE  2EE1               	goto	u2235
  3399  0EDF  0820               	movf	___llmod@divisor,w
  3400  0EE0  0224               	subwf	___llmod@dividend,w
  3401  0EE1                     u2235:	
  3402  0EE1  1C03               	skipc
  3403  0EE2  2EF1               	goto	l1740
  3404  0EE3  0820               	movf	___llmod@divisor,w
  3405  0EE4  02A4               	subwf	___llmod@dividend,f
  3406  0EE5  0821               	movf	___llmod@divisor+1,w
  3407  0EE6  1C03               	skipc
  3408  0EE7  0F21               	incfsz	___llmod@divisor+1,w
  3409  0EE8  02A5               	subwf	___llmod@dividend+1,f
  3410  0EE9  0822               	movf	___llmod@divisor+2,w
  3411  0EEA  1C03               	skipc
  3412  0EEB  0F22               	incfsz	___llmod@divisor+2,w
  3413  0EEC  02A6               	subwf	___llmod@dividend+2,f
  3414  0EED  0823               	movf	___llmod@divisor+3,w
  3415  0EEE  1C03               	skipc
  3416  0EEF  0F23               	incfsz	___llmod@divisor+3,w
  3417  0EF0  02A7               	subwf	___llmod@dividend+3,f
  3418  0EF1                     l1740:	
  3419  0EF1  3001               	movlw	1
  3420  0EF2                     u2245:	
  3421  0EF2  1003               	clrc
  3422  0EF3  0CA3               	rrf	___llmod@divisor+3,f
  3423  0EF4  0CA2               	rrf	___llmod@divisor+2,f
  3424  0EF5  0CA1               	rrf	___llmod@divisor+1,f
  3425  0EF6  0CA0               	rrf	___llmod@divisor,f
  3426  0EF7  3EFF               	addlw	-1
  3427  0EF8  1D03               	skipz
  3428  0EF9  2EF2               	goto	u2245
  3429  0EFA  3001               	movlw	1
  3430  0EFB  02F5               	subwf	___llmod@counter,f
  3431  0EFC  1D03               	btfss	3,2
  3432  0EFD  2ED3               	goto	l1736
  3433  0EFE                     l1744:	
  3434  0EFE  0827               	movf	___llmod@dividend+3,w
  3435  0EFF  00A3               	movwf	?___llmod+3
  3436  0F00  0826               	movf	___llmod@dividend+2,w
  3437  0F01  00A2               	movwf	?___llmod+2
  3438  0F02  0825               	movf	___llmod@dividend+1,w
  3439  0F03  00A1               	movwf	?___llmod+1
  3440  0F04  0824               	movf	___llmod@dividend,w
  3441  0F05  00A0               	movwf	?___llmod
  3442  0F06  0008               	return
  3443  0F07                     __end_of___llmod:	
  3444                           
  3445                           	psect	text12
  3446  0773                     __ptext12:	
  3447 ;; *************** function ___lldiv *****************
  3448 ;; Defined at:
  3449 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  divisor         4    0[BANK0 ] unsigned long 
  3452 ;;  dividend        4    4[BANK0 ] unsigned long 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  quotient        4    8[BANK0 ] unsigned long 
  3455 ;;  counter         1   12[BANK0 ] unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  4    0[BANK0 ] unsigned long 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3465 ;;      Params:         0       8       0       0       0
  3466 ;;      Locals:         0       5       0       0       0
  3467 ;;      Temps:          1       0       0       0       0
  3468 ;;      Totals:         1      13       0       0       0
  3469 ;;Total ram usage:       14 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; Hardware stack levels required when called:    2
  3472 ;; This function calls:
  3473 ;;		Nothing
  3474 ;; This function is called by:
  3475 ;;		_time_break
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           
  3480                           ;psect for function ___lldiv
  3481  0773                     ___lldiv:	
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3485  0773  3000               	movlw	0
  3486  0774  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0775  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0776  00AB               	movwf	___lldiv@quotient+3
  3489  0777  3000               	movlw	0
  3490  0778  00AA               	movwf	___lldiv@quotient+2
  3491  0779  3000               	movlw	0
  3492  077A  00A9               	movwf	___lldiv@quotient+1
  3493  077B  3000               	movlw	0
  3494  077C  00A8               	movwf	___lldiv@quotient
  3495  077D  0823               	movf	___lldiv@divisor+3,w
  3496  077E  0422               	iorwf	___lldiv@divisor+2,w
  3497  077F  0421               	iorwf	___lldiv@divisor+1,w
  3498  0780  0420               	iorwf	___lldiv@divisor,w
  3499  0781  1903               	skipnz
  3500  0782  2FCA               	goto	l1724
  3501  0783  01AC               	clrf	___lldiv@counter
  3502  0784  0AAC               	incf	___lldiv@counter,f
  3503  0785                     l1710:	
  3504  0785  1BA3               	btfsc	___lldiv@divisor+3,7
  3505  0786  2F95               	goto	l1712
  3506  0787  3001               	movlw	1
  3507  0788  00F4               	movwf	??___lldiv
  3508  0789                     u2145:	
  3509  0789  1003               	clrc
  3510  078A  0DA0               	rlf	___lldiv@divisor,f
  3511  078B  0DA1               	rlf	___lldiv@divisor+1,f
  3512  078C  0DA2               	rlf	___lldiv@divisor+2,f
  3513  078D  0DA3               	rlf	___lldiv@divisor+3,f
  3514  078E  0BF4               	decfsz	??___lldiv,f
  3515  078F  2F89               	goto	u2145
  3516  0790  3001               	movlw	1
  3517  0791  00F4               	movwf	??___lldiv
  3518  0792  0874               	movf	??___lldiv,w
  3519  0793  07AC               	addwf	___lldiv@counter,f
  3520  0794  2F85               	goto	l1710
  3521  0795                     l1712:	
  3522  0795  3001               	movlw	1
  3523  0796  00F4               	movwf	??___lldiv
  3524  0797                     u2165:	
  3525  0797  1003               	clrc
  3526  0798  0DA8               	rlf	___lldiv@quotient,f
  3527  0799  0DA9               	rlf	___lldiv@quotient+1,f
  3528  079A  0DAA               	rlf	___lldiv@quotient+2,f
  3529  079B  0DAB               	rlf	___lldiv@quotient+3,f
  3530  079C  0BF4               	decfsz	??___lldiv,f
  3531  079D  2F97               	goto	u2165
  3532  079E  0823               	movf	___lldiv@divisor+3,w
  3533  079F  0227               	subwf	___lldiv@dividend+3,w
  3534  07A0  1D03               	skipz
  3535  07A1  2FAC               	goto	u2175
  3536  07A2  0822               	movf	___lldiv@divisor+2,w
  3537  07A3  0226               	subwf	___lldiv@dividend+2,w
  3538  07A4  1D03               	skipz
  3539  07A5  2FAC               	goto	u2175
  3540  07A6  0821               	movf	___lldiv@divisor+1,w
  3541  07A7  0225               	subwf	___lldiv@dividend+1,w
  3542  07A8  1D03               	skipz
  3543  07A9  2FAC               	goto	u2175
  3544  07AA  0820               	movf	___lldiv@divisor,w
  3545  07AB  0224               	subwf	___lldiv@dividend,w
  3546  07AC                     u2175:	
  3547  07AC  1C03               	skipc
  3548  07AD  2FBD               	goto	l1720
  3549  07AE  0820               	movf	___lldiv@divisor,w
  3550  07AF  02A4               	subwf	___lldiv@dividend,f
  3551  07B0  0821               	movf	___lldiv@divisor+1,w
  3552  07B1  1C03               	skipc
  3553  07B2  0F21               	incfsz	___lldiv@divisor+1,w
  3554  07B3  02A5               	subwf	___lldiv@dividend+1,f
  3555  07B4  0822               	movf	___lldiv@divisor+2,w
  3556  07B5  1C03               	skipc
  3557  07B6  0F22               	incfsz	___lldiv@divisor+2,w
  3558  07B7  02A6               	subwf	___lldiv@dividend+2,f
  3559  07B8  0823               	movf	___lldiv@divisor+3,w
  3560  07B9  1C03               	skipc
  3561  07BA  0F23               	incfsz	___lldiv@divisor+3,w
  3562  07BB  02A7               	subwf	___lldiv@dividend+3,f
  3563  07BC  1428               	bsf	___lldiv@quotient,0
  3564  07BD                     l1720:	
  3565  07BD  3001               	movlw	1
  3566  07BE                     u2185:	
  3567  07BE  1003               	clrc
  3568  07BF  0CA3               	rrf	___lldiv@divisor+3,f
  3569  07C0  0CA2               	rrf	___lldiv@divisor+2,f
  3570  07C1  0CA1               	rrf	___lldiv@divisor+1,f
  3571  07C2  0CA0               	rrf	___lldiv@divisor,f
  3572  07C3  3EFF               	addlw	-1
  3573  07C4  1D03               	skipz
  3574  07C5  2FBE               	goto	u2185
  3575  07C6  3001               	movlw	1
  3576  07C7  02AC               	subwf	___lldiv@counter,f
  3577  07C8  1D03               	btfss	3,2
  3578  07C9  2F95               	goto	l1712
  3579  07CA                     l1724:	
  3580  07CA  082B               	movf	___lldiv@quotient+3,w
  3581  07CB  00A3               	movwf	?___lldiv+3
  3582  07CC  082A               	movf	___lldiv@quotient+2,w
  3583  07CD  00A2               	movwf	?___lldiv+2
  3584  07CE  0829               	movf	___lldiv@quotient+1,w
  3585  07CF  00A1               	movwf	?___lldiv+1
  3586  07D0  0828               	movf	___lldiv@quotient,w
  3587  07D1  00A0               	movwf	?___lldiv
  3588  07D2  0008               	return
  3589  07D3                     __end_of___lldiv:	
  3590                           
  3591                           	psect	text13
  3592  00EF                     __ptext13:	
  3593 ;; *************** function _tick_init *****************
  3594 ;; Defined at:
  3595 ;;		line 30 in file "../Tick/Tick-PIC16.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;		None               void
  3602 ;; Registers used:
  3603 ;;		wreg, status,2
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3609 ;;      Params:         0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0
  3612 ;;      Totals:         0       0       0       0       0
  3613 ;;Total ram usage:        0 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    2
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           
  3624                           ;psect for function _tick_init
  3625  00EF                     _tick_init:	
  3626                           
  3627                           ;Tick-PIC16.c: 32: T1CON = 0;
  3628                           
  3629                           ;incstack = 0
  3630                           ; Regs used in _tick_init: [wreg+status,2]
  3631  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  3632  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  3633  00F1  0190               	clrf	16	;volatile
  3634                           
  3635                           ;Tick-PIC16.c: 33: TMR1L = 0;
  3636  00F2  018E               	clrf	14	;volatile
  3637                           
  3638                           ;Tick-PIC16.c: 34: TMR1H = 0;
  3639  00F3  018F               	clrf	15	;volatile
  3640                           
  3641                           ;Tick-PIC16.c: 36: PIR1bits.TMR1IF = 0;
  3642  00F4  100C               	bcf	12,0	;volatile
  3643                           
  3644                           ;Tick-PIC16.c: 37: PIE1bits.TMR1IE = 1;
  3645  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  3646  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  3647  00F7  140C               	bsf	12,0	;volatile
  3648                           
  3649                           ;Tick-PIC16.c: 38: INTCONbits.GIE = 1;
  3650  00F8  178B               	bsf	11,7	;volatile
  3651                           
  3652                           ;Tick-PIC16.c: 39: INTCONbits.PEIE = 1;
  3653  00F9  170B               	bsf	11,6	;volatile
  3654                           
  3655                           ;Tick-PIC16.c: 41: T1CON = 0x31;
  3656  00FA  3031               	movlw	49
  3657  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  3658  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  3659  00FD  0090               	movwf	16	;volatile
  3660  00FE  0008               	return
  3661  00FF                     __end_of_tick_init:	
  3662                           
  3663                           	psect	text14
  3664  04A4                     __ptext14:	
  3665 ;; *************** function _printf *****************
  3666 ;; Defined at:
  3667 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  f               1    wreg     PTR const unsigned char 
  3670 ;;		 -> STR_2(44), STR_1(23), 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;  f               1   34[BANK0 ] PTR const unsigned char 
  3673 ;;		 -> STR_2(44), STR_1(23), 
  3674 ;;  _val            4   29[BANK0 ] struct .
  3675 ;;  width           2   35[BANK0 ] int 
  3676 ;;  c               1   37[BANK0 ] char 
  3677 ;;  flag            1   33[BANK0 ] unsigned char 
  3678 ;;  prec            1   28[BANK0 ] char 
  3679 ;;  ap              1   27[BANK0 ] PTR void [1]
  3680 ;;		 -> ?_printf(2), 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  2   12[BANK0 ] int 
  3683 ;; Registers used:
  3684 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3690 ;;      Params:         0      12       0       0       0
  3691 ;;      Locals:         0      11       0       0       0
  3692 ;;      Temps:          0       3       0       0       0
  3693 ;;      Totals:         0      26       0       0       0
  3694 ;;Total ram usage:       26 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    3
  3697 ;; This function calls:
  3698 ;;		___lwdiv
  3699 ;;		___lwmod
  3700 ;;		___wmul
  3701 ;;		_isdigit
  3702 ;;		_putch
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function _printf
  3710  04A4                     _printf:	
  3711                           
  3712                           ;incstack = 0
  3713                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3714                           ;printf@f stored from wreg
  3715  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  3716  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  3717  04A6  00C2               	movwf	printf@f
  3718                           
  3719                           ;doprnt.c: 466: va_list ap;
  3720                           ;doprnt.c: 499: signed char c;
  3721                           ;doprnt.c: 501: int width;
  3722                           ;doprnt.c: 506: signed char prec;
  3723                           ;doprnt.c: 508: unsigned char flag;
  3724                           ;doprnt.c: 527: union {
  3725                           ;doprnt.c: 528: unsigned int _val;
  3726                           ;doprnt.c: 529: struct {
  3727                           ;doprnt.c: 530: const char * _cp;
  3728                           ;doprnt.c: 531: unsigned _len;
  3729                           ;doprnt.c: 532: } _str;
  3730                           ;doprnt.c: 533: } _val;
  3731                           ;doprnt.c: 542: *ap = __va_start();
  3732  04A7  302C               	movlw	?_printf& (0+255)
  3733  04A8  00B8               	movwf	??_printf
  3734  04A9  0838               	movf	??_printf,w
  3735  04AA  00BB               	movwf	printf@ap
  3736  04AB                     l1922:	
  3737                           ;doprnt.c: 545: while(c = *f++) {
  3738                           
  3739  04AB  3001               	movlw	1
  3740  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  3741  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  3742  04AE  07C2               	addwf	printf@f,f
  3743  04AF  30FF               	movlw	-1
  3744  04B0  0742               	addwf	printf@f,w
  3745  04B1  0084               	movwf	4
  3746  04B2  118A  2034  118A   	fcall	stringdir
  3747  04B5  00B8               	movwf	??_printf
  3748  04B6  0838               	movf	??_printf,w
  3749  04B7  00C5               	movwf	printf@c
  3750  04B8  08C5               	movf	printf@c,f
  3751  04B9  1903               	btfsc	3,2
  3752  04BA  0008               	return
  3753                           
  3754                           ;doprnt.c: 547: if(c != '%')
  3755  04BB  0845               	movf	printf@c,w
  3756  04BC  3A25               	xorlw	37
  3757  04BD  1903               	skipnz
  3758  04BE  2CC4               	goto	l1836
  3759                           
  3760                           ;doprnt.c: 549: {
  3761                           ;doprnt.c: 550: (putch(c) );
  3762  04BF  0845               	movf	printf@c,w
  3763  04C0  158A  24FE  118A   	fcall	_putch
  3764                           
  3765                           ;doprnt.c: 551: continue;
  3766  04C3  2CAB               	goto	l1922
  3767  04C4                     l1836:	
  3768                           
  3769                           ;doprnt.c: 552: }
  3770                           ;doprnt.c: 555: width = 0;
  3771  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  3772  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  3773  04C6  01C3               	clrf	printf@width
  3774  04C7  01C4               	clrf	printf@width+1
  3775                           
  3776                           ;doprnt.c: 557: flag = 0;
  3777  04C8  01C1               	clrf	printf@flag
  3778                           
  3779                           ;doprnt.c: 560: switch(*f) {
  3780                           
  3781                           ;doprnt.c: 559: for(;;) {
  3782  04C9  2CCF               	goto	l1842
  3783  04CA                     l181:	
  3784                           ;doprnt.c: 588: case '0':
  3785                           
  3786                           
  3787                           ;doprnt.c: 589: flag |= 0x04;
  3788  04CA  1541               	bsf	printf@flag,2
  3789                           
  3790                           ;doprnt.c: 590: f++;
  3791  04CB  3001               	movlw	1
  3792  04CC  00B8               	movwf	??_printf
  3793  04CD  0838               	movf	??_printf,w
  3794  04CE  07C2               	addwf	printf@f,f
  3795  04CF                     l1842:	
  3796                           ;doprnt.c: 593: }
  3797                           
  3798                           ;doprnt.c: 591: continue;
  3799                           
  3800  04CF  0842               	movf	printf@f,w
  3801  04D0  0084               	movwf	4
  3802  04D1  118A  2034  118A   	fcall	stringdir
  3803                           
  3804                           ; Switch size 1, requested type "space"
  3805                           ; Number of cases is 1, Range of values is 48 to 48
  3806                           ; switch strategies available:
  3807                           ; Name         Instructions Cycles
  3808                           ; simple_byte            4     3 (average)
  3809                           ; direct_byte           12    10 (fixed)
  3810                           ; jumptable            263     9 (fixed)
  3811                           ;	Chosen strategy is simple_byte
  3812  04D4  3A30               	xorlw	48	; case 48
  3813  04D5  1903               	skipnz
  3814  04D6  2CCA               	goto	l181
  3815  04D7  2CD8               	goto	l1844
  3816  04D8                     l1844:	
  3817                           ;doprnt.c: 595: }
  3818                           
  3819                           ;doprnt.c: 594: break;
  3820                           
  3821                           
  3822                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  3823  04D8  0842               	movf	printf@f,w
  3824  04D9  0084               	movwf	4
  3825  04DA  118A  2034  118A   	fcall	stringdir
  3826  04DD  158A  250B  118A   	fcall	_isdigit
  3827  04E0  1C03               	btfss	3,0
  3828  04E1  2D1C               	goto	l1858
  3829                           
  3830                           ;doprnt.c: 607: width = 0;
  3831  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  3832  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  3833  04E4  01C3               	clrf	printf@width
  3834  04E5  01C4               	clrf	printf@width+1
  3835  04E6                     l1848:	
  3836                           ;doprnt.c: 608: do {
  3837                           
  3838                           
  3839                           ;doprnt.c: 609: width *= 10;
  3840  04E6  300A               	movlw	10
  3841  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  3842  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  3843  04E9  00A0               	movwf	___wmul@multiplier
  3844  04EA  3000               	movlw	0
  3845  04EB  00A1               	movwf	___wmul@multiplier+1
  3846  04EC  0844               	movf	printf@width+1,w
  3847  04ED  01A3               	clrf	___wmul@multiplicand+1
  3848  04EE  07A3               	addwf	___wmul@multiplicand+1,f
  3849  04EF  0843               	movf	printf@width,w
  3850  04F0  01A2               	clrf	___wmul@multiplicand
  3851  04F1  07A2               	addwf	___wmul@multiplicand,f
  3852  04F2  158A  2569  118A   	fcall	___wmul
  3853  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  3854  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  3855  04F7  0821               	movf	?___wmul+1,w
  3856  04F8  01C4               	clrf	printf@width+1
  3857  04F9  07C4               	addwf	printf@width+1,f
  3858  04FA  0820               	movf	?___wmul,w
  3859  04FB  01C3               	clrf	printf@width
  3860  04FC  07C3               	addwf	printf@width,f
  3861                           
  3862                           ;doprnt.c: 610: width += *f++ - '0';
  3863  04FD  0842               	movf	printf@f,w
  3864  04FE  0084               	movwf	4
  3865  04FF  118A  2034  118A   	fcall	stringdir
  3866  0502  3ED0               	addlw	208
  3867  0503  00B8               	movwf	??_printf
  3868  0504  30FF               	movlw	255
  3869  0505  1803               	skipnc
  3870  0506  3000               	movlw	0
  3871  0507  00B9               	movwf	??_printf+1
  3872  0508  0838               	movf	??_printf,w
  3873  0509  07C3               	addwf	printf@width,f
  3874  050A  1803               	skipnc
  3875  050B  0AC4               	incf	printf@width+1,f
  3876  050C  0839               	movf	??_printf+1,w
  3877  050D  07C4               	addwf	printf@width+1,f
  3878  050E  3001               	movlw	1
  3879  050F  00B8               	movwf	??_printf
  3880  0510  0838               	movf	??_printf,w
  3881  0511  07C2               	addwf	printf@f,f
  3882                           
  3883                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  3884  0512  0842               	movf	printf@f,w
  3885  0513  0084               	movwf	4
  3886  0514  118A  2034  118A   	fcall	stringdir
  3887  0517  158A  250B  118A   	fcall	_isdigit
  3888  051A  1803               	btfsc	3,0
  3889  051B  2CE6               	goto	l1848
  3890  051C                     l1858:	
  3891                           ;doprnt.c: 831: }
  3892                           
  3893                           ;doprnt.c: 822: continue;
  3894                           
  3895                           ;doprnt.c: 811: default:
  3896                           
  3897                           ;doprnt.c: 707: case 'i':
  3898                           ;doprnt.c: 708: break;
  3899                           
  3900                           ;doprnt.c: 706: case 'd':
  3901                           
  3902                           ;doprnt.c: 647: goto alldone;
  3903                           
  3904                           ;doprnt.c: 646: case 0:
  3905                           
  3906                           ;doprnt.c: 617: }
  3907                           ;doprnt.c: 644: switch(c = *f++) {
  3908                           
  3909  051C  3001               	movlw	1
  3910  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3911  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3912  051F  07C2               	addwf	printf@f,f
  3913  0520  30FF               	movlw	-1
  3914  0521  0742               	addwf	printf@f,w
  3915  0522  0084               	movwf	4
  3916  0523  118A  2034  118A   	fcall	stringdir
  3917  0526  00C5               	movwf	printf@c
  3918                           
  3919                           ; Switch size 1, requested type "space"
  3920                           ; Number of cases is 3, Range of values is 0 to 105
  3921                           ; switch strategies available:
  3922                           ; Name         Instructions Cycles
  3923                           ; simple_byte           10     6 (average)
  3924                           ; direct_byte          219     7 (fixed)
  3925                           ; jumptable            260     6 (fixed)
  3926                           ;	Chosen strategy is simple_byte
  3927  0527  3A00               	xorlw	0	; case 0
  3928  0528  1903               	skipnz
  3929  0529  2E18               	goto	l216
  3930  052A  3A64               	xorlw	100	; case 100
  3931  052B  1903               	skipnz
  3932  052C  2D31               	goto	l1860
  3933  052D  3A0D               	xorlw	13	; case 105
  3934  052E  1903               	skipnz
  3935  052F  2D31               	goto	l1860
  3936  0530  2CAB               	goto	l1922
  3937  0531                     l1860:	
  3938                           
  3939                           ;doprnt.c: 1262: {
  3940                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3941  0531  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0532  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0533  083B               	movf	printf@ap,w
  3944  0534  0084               	movwf	4
  3945  0535  1383               	bcf	3,7	;select IRP bank0
  3946  0536  0800               	movf	0,w
  3947  0537  00BD               	movwf	printf@_val
  3948  0538  0A84               	incf	4,f
  3949  0539  0800               	movf	0,w
  3950  053A  00BE               	movwf	printf@_val+1
  3951  053B  3002               	movlw	2
  3952  053C  00B8               	movwf	??_printf
  3953  053D  0838               	movf	??_printf,w
  3954  053E  07BB               	addwf	printf@ap,f
  3955                           
  3956                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3957  053F  1FBE               	btfss	printf@_val+1,7
  3958  0540  2D4A               	goto	l1870
  3959                           
  3960                           ;doprnt.c: 1271: flag |= 0x03;
  3961  0541  3003               	movlw	3
  3962  0542  00B8               	movwf	??_printf
  3963  0543  0838               	movf	??_printf,w
  3964  0544  04C1               	iorwf	printf@flag,f
  3965                           
  3966                           ;doprnt.c: 1272: _val._val = -_val._val;
  3967  0545  09BD               	comf	printf@_val,f
  3968  0546  09BE               	comf	printf@_val+1,f
  3969  0547  0ABD               	incf	printf@_val,f
  3970  0548  1903               	skipnz
  3971  0549  0ABE               	incf	printf@_val+1,f
  3972  054A                     l1870:	
  3973                           
  3974                           ;doprnt.c: 1273: }
  3975                           ;doprnt.c: 1275: }
  3976                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3977  054A  01C5               	clrf	printf@c
  3978  054B  0AC5               	incf	printf@c,f
  3979  054C  0845               	movf	printf@c,w
  3980  054D  3A05               	xorlw	5
  3981  054E  1903               	btfsc	3,2
  3982  054F  2D6D               	goto	l1882
  3983  0550                     l1874:	
  3984                           
  3985                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3986  0550  0845               	movf	printf@c,w
  3987  0551  00B8               	movwf	??_printf
  3988  0552  0738               	addwf	??_printf,w
  3989  0553  3E0D               	addlw	low (_dpowers-__stringbase)
  3990  0554  0084               	movwf	4
  3991  0555  118A  2034  118A   	fcall	stringdir
  3992  0558  00B9               	movwf	??_printf+1
  3993  0559  118A  2034  118A   	fcall	stringdir
  3994  055C  00BA               	movwf	??_printf+2
  3995  055D  083A               	movf	??_printf+2,w
  3996  055E  023E               	subwf	printf@_val+1,w
  3997  055F  1D03               	skipz
  3998  0560  2D63               	goto	u2505
  3999  0561  0839               	movf	??_printf+1,w
  4000  0562  023D               	subwf	printf@_val,w
  4001  0563                     u2505:	
  4002  0563  1C03               	btfss	3,0
  4003  0564  2D6D               	goto	l1882
  4004                           
  4005                           ;doprnt.c: 1316: break;
  4006  0565  3001               	movlw	1
  4007  0566  00B8               	movwf	??_printf
  4008  0567  0838               	movf	??_printf,w
  4009  0568  07C5               	addwf	printf@c,f
  4010  0569  0845               	movf	printf@c,w
  4011  056A  3A05               	xorlw	5
  4012  056B  1D03               	skipz
  4013  056C  2D50               	goto	l1874
  4014  056D                     l1882:	
  4015                           
  4016                           ;doprnt.c: 1354: if(width && flag & 0x03)
  4017  056D  0844               	movf	printf@width+1,w
  4018  056E  0443               	iorwf	printf@width,w
  4019  056F  1903               	skipnz
  4020  0570  2D7B               	goto	l199
  4021  0571  0841               	movf	printf@flag,w
  4022  0572  3903               	andlw	3
  4023  0573  1903               	btfsc	3,2
  4024  0574  2D7B               	goto	l199
  4025                           
  4026                           ;doprnt.c: 1355: width--;
  4027  0575  30FF               	movlw	255
  4028  0576  07C3               	addwf	printf@width,f
  4029  0577  1803               	skipnc
  4030  0578  0AC4               	incf	printf@width+1,f
  4031  0579  30FF               	movlw	255
  4032  057A  07C4               	addwf	printf@width+1,f
  4033  057B                     l199:	
  4034                           
  4035                           ;doprnt.c: 1390: if(width > c)
  4036  057B  0845               	movf	printf@c,w
  4037  057C  00B8               	movwf	??_printf
  4038  057D  01B9               	clrf	??_printf+1
  4039  057E  1BB8               	btfsc	??_printf,7
  4040  057F  03B9               	decf	??_printf+1,f
  4041  0580  0839               	movf	??_printf+1,w
  4042  0581  3A80               	xorlw	128
  4043  0582  00BA               	movwf	??_printf+2
  4044  0583  0844               	movf	printf@width+1,w
  4045  0584  3A80               	xorlw	128
  4046  0585  023A               	subwf	??_printf+2,w
  4047  0586  1D03               	skipz
  4048  0587  2D8A               	goto	u2545
  4049  0588  0843               	movf	printf@width,w
  4050  0589  0238               	subwf	??_printf,w
  4051  058A                     u2545:	
  4052  058A  1803               	skipnc
  4053  058B  2D9A               	goto	l1890
  4054                           
  4055                           ;doprnt.c: 1391: width -= c;
  4056  058C  1283               	bcf	3,5	;RP0=0, select bank0
  4057  058D  1303               	bcf	3,6	;RP1=0, select bank0
  4058  058E  0845               	movf	printf@c,w
  4059  058F  00B8               	movwf	??_printf
  4060  0590  01B9               	clrf	??_printf+1
  4061  0591  1BB8               	btfsc	??_printf,7
  4062  0592  03B9               	decf	??_printf+1,f
  4063  0593  0838               	movf	??_printf,w
  4064  0594  02C3               	subwf	printf@width,f
  4065  0595  0839               	movf	??_printf+1,w
  4066  0596  1C03               	skipc
  4067  0597  03C4               	decf	printf@width+1,f
  4068  0598  02C4               	subwf	printf@width+1,f
  4069  0599  2D9E               	goto	l1892
  4070  059A                     l1890:	
  4071                           
  4072                           ;doprnt.c: 1392: else
  4073                           ;doprnt.c: 1393: width = 0;
  4074  059A  1283               	bcf	3,5	;RP0=0, select bank0
  4075  059B  1303               	bcf	3,6	;RP1=0, select bank0
  4076  059C  01C3               	clrf	printf@width
  4077  059D  01C4               	clrf	printf@width+1
  4078  059E                     l1892:	
  4079                           
  4080                           ;doprnt.c: 1396: if(flag & 0x04) {
  4081  059E  1D41               	btfss	printf@flag,2
  4082  059F  2DBB               	goto	l1904
  4083                           
  4084                           ;doprnt.c: 1401: if(flag & 0x03)
  4085  05A0  0841               	movf	printf@flag,w
  4086  05A1  3903               	andlw	3
  4087  05A2  1903               	btfsc	3,2
  4088  05A3  2DA8               	goto	l1898
  4089                           
  4090                           ;doprnt.c: 1402: (putch('-') );
  4091  05A4  302D               	movlw	45
  4092  05A5  158A  24FE  118A   	fcall	_putch
  4093  05A8                     l1898:	
  4094                           
  4095                           ;doprnt.c: 1424: if(width)
  4096  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  4097  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  4098  05AA                     L10:	
  4099  05AA  0844               	movf	printf@width+1,w
  4100  05AB  0443               	iorwf	printf@width,w
  4101  05AC  1903               	skipnz
  4102  05AD  2DD7               	goto	l1914
  4103                           
  4104                           ;doprnt.c: 1426: (putch('0') );
  4105                           
  4106                           ;doprnt.c: 1425: do
  4107  05AE  3030               	movlw	48
  4108  05AF  158A  24FE  118A   	fcall	_putch
  4109                           
  4110                           ;doprnt.c: 1427: while(--width);
  4111  05B2  30FF               	movlw	255
  4112  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  4113  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  4114  05B5  07C3               	addwf	printf@width,f
  4115  05B6  1803               	skipnc
  4116  05B7  0AC4               	incf	printf@width+1,f
  4117  05B8  30FF               	movlw	255
  4118  05B9  07C4               	addwf	printf@width+1,f
  4119  05BA  2DAA               	goto	L10
  4120  05BB                     l1904:	
  4121                           ;doprnt.c: 1429: } else
  4122                           
  4123                           
  4124                           ;doprnt.c: 1431: {
  4125                           ;doprnt.c: 1433: if(width
  4126                           ;doprnt.c: 1437: )
  4127  05BB  0844               	movf	printf@width+1,w
  4128  05BC  0443               	iorwf	printf@width,w
  4129  05BD  1903               	skipnz
  4130  05BE  2DCF               	goto	l1910
  4131  05BF                     l1906:	
  4132                           ;doprnt.c: 1438: do
  4133                           
  4134                           
  4135                           ;doprnt.c: 1439: (putch(' ') );
  4136  05BF  3020               	movlw	32
  4137  05C0  158A  24FE  118A   	fcall	_putch
  4138                           
  4139                           ;doprnt.c: 1440: while(--width);
  4140  05C3  30FF               	movlw	255
  4141  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  4142  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  4143  05C6  07C3               	addwf	printf@width,f
  4144  05C7  1803               	skipnc
  4145  05C8  0AC4               	incf	printf@width+1,f
  4146  05C9  30FF               	movlw	255
  4147  05CA  07C4               	addwf	printf@width+1,f
  4148  05CB  0844               	movf	printf@width+1,w
  4149  05CC  0443               	iorwf	printf@width,w
  4150  05CD  1D03               	skipz
  4151  05CE  2DBF               	goto	l1906
  4152  05CF                     l1910:	
  4153                           
  4154                           ;doprnt.c: 1447: if(flag & 0x03)
  4155  05CF  0841               	movf	printf@flag,w
  4156  05D0  3903               	andlw	3
  4157  05D1  1903               	btfsc	3,2
  4158  05D2  2DD7               	goto	l1914
  4159                           
  4160                           ;doprnt.c: 1448: (putch('-') );
  4161  05D3  302D               	movlw	45
  4162  05D4  158A  24FE  118A   	fcall	_putch
  4163  05D7                     l1914:	
  4164                           
  4165                           ;doprnt.c: 1478: }
  4166                           ;doprnt.c: 1481: prec = c;
  4167  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  4168  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  4169  05D9  0845               	movf	printf@c,w
  4170  05DA  00B8               	movwf	??_printf
  4171  05DB  0838               	movf	??_printf,w
  4172  05DC  00BC               	movwf	printf@prec
  4173  05DD                     l1920:	
  4174                           ;doprnt.c: 1483: while(prec--) {
  4175                           
  4176  05DD  30FF               	movlw	-1
  4177  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  4178  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  4179  05E0  00B8               	movwf	??_printf
  4180  05E1  0838               	movf	??_printf,w
  4181  05E2  07BC               	addwf	printf@prec,f
  4182  05E3  083C               	movf	printf@prec,w
  4183  05E4  3AFF               	xorlw	-1
  4184  05E5  1903               	btfsc	3,2
  4185  05E6  2CAB               	goto	l1922
  4186                           
  4187                           ;doprnt.c: 1487: {
  4188                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  4189  05E7  300A               	movlw	10
  4190  05E8  00A7               	movwf	___lwmod@divisor
  4191  05E9  3000               	movlw	0
  4192  05EA  00A8               	movwf	___lwmod@divisor+1
  4193  05EB  083C               	movf	printf@prec,w
  4194  05EC  00B8               	movwf	??_printf
  4195  05ED  0738               	addwf	??_printf,w
  4196  05EE  3E0D               	addlw	low (_dpowers-__stringbase)
  4197  05EF  0084               	movwf	4
  4198  05F0  118A  2034  118A   	fcall	stringdir
  4199  05F3  00A0               	movwf	___lwdiv@divisor
  4200  05F4  118A  2034  118A   	fcall	stringdir
  4201  05F7  00A1               	movwf	___lwdiv@divisor+1
  4202  05F8  083E               	movf	printf@_val+1,w
  4203  05F9  01A3               	clrf	___lwdiv@dividend+1
  4204  05FA  07A3               	addwf	___lwdiv@dividend+1,f
  4205  05FB  083D               	movf	printf@_val,w
  4206  05FC  01A2               	clrf	___lwdiv@dividend
  4207  05FD  07A2               	addwf	___lwdiv@dividend,f
  4208  05FE  158A  2638  118A   	fcall	___lwdiv
  4209  0601  1283               	bcf	3,5	;RP0=0, select bank0
  4210  0602  1303               	bcf	3,6	;RP1=0, select bank0
  4211  0603  0821               	movf	?___lwdiv+1,w
  4212  0604  01AA               	clrf	___lwmod@dividend+1
  4213  0605  07AA               	addwf	___lwmod@dividend+1,f
  4214  0606  0820               	movf	?___lwdiv,w
  4215  0607  01A9               	clrf	___lwmod@dividend
  4216  0608  07A9               	addwf	___lwmod@dividend,f
  4217  0609  158A  258E  118A   	fcall	___lwmod
  4218  060C  1283               	bcf	3,5	;RP0=0, select bank0
  4219  060D  1303               	bcf	3,6	;RP1=0, select bank0
  4220  060E  0827               	movf	?___lwmod,w
  4221  060F  3E30               	addlw	48
  4222  0610  00B9               	movwf	??_printf+1
  4223  0611  0839               	movf	??_printf+1,w
  4224  0612  00C5               	movwf	printf@c
  4225                           
  4226                           ;doprnt.c: 1532: }
  4227                           ;doprnt.c: 1533: (putch(c) );
  4228  0613  0845               	movf	printf@c,w
  4229  0614  158A  24FE  118A   	fcall	_putch
  4230  0617  2DDD               	goto	l1920
  4231  0618                     l216:	
  4232                           ;doprnt.c: 1549: return 0;
  4233                           ;	Return value of _printf is never used
  4234                           
  4235                           ;doprnt.c: 1534: }
  4236                           ;doprnt.c: 1542: }
  4237                           ;doprnt.c: 1544: alldone:
  4238                           
  4239  0618  0008               	return
  4240  0619                     __end_of_printf:	
  4241                           
  4242                           	psect	text15
  4243  0CFE                     __ptext15:	
  4244 ;; *************** function _putch *****************
  4245 ;; Defined at:
  4246 ;;		line 103 in file "main.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  data            1    wreg     unsigned char 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  data            1    4[COMMON] unsigned char 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;		None               void
  4253 ;; Registers used:
  4254 ;;		wreg
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4260 ;;      Params:         0       0       0       0       0
  4261 ;;      Locals:         1       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0
  4263 ;;      Totals:         1       0       0       0       0
  4264 ;;Total ram usage:        1 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    2
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_printf
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           
  4275                           ;psect for function _putch
  4276  0CFE                     _putch:	
  4277                           
  4278                           ;incstack = 0
  4279                           ; Regs used in _putch: [wreg]
  4280                           ;putch@data stored from wreg
  4281  0CFE  00F4               	movwf	putch@data
  4282                           
  4283                           ;main.c: 105: TXSTA=0x26;
  4284  0CFF  3026               	movlw	38
  4285  0D00  1683               	bsf	3,5	;RP0=1, select bank1
  4286  0D01  1303               	bcf	3,6	;RP1=0, select bank1
  4287  0D02  0098               	movwf	24	;volatile
  4288                           
  4289                           ;main.c: 106: RCSTAbits.SPEN=1;
  4290  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  4291  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  4292  0D05  1798               	bsf	24,7	;volatile
  4293                           
  4294                           ;main.c: 108: TXREG = data;
  4295  0D06  0874               	movf	putch@data,w
  4296  0D07  0099               	movwf	25	;volatile
  4297  0D08                     l48:	
  4298                           ;main.c: 109: while( !( PIR1bits.TXIF ) );
  4299                           
  4300  0D08  1A0C               	btfsc	12,4	;volatile
  4301  0D09  0008               	return
  4302  0D0A  2D08               	goto	l48
  4303  0D0B                     __end_of_putch:	
  4304                           
  4305                           	psect	text16
  4306  0D0B                     __ptext16:	
  4307 ;; *************** function _isdigit *****************
  4308 ;; Defined at:
  4309 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  c               1    wreg     unsigned char 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  c               1    5[COMMON] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;		None               void
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4323 ;;      Params:         0       0       0       0       0
  4324 ;;      Locals:         2       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0
  4326 ;;      Totals:         2       0       0       0       0
  4327 ;;Total ram usage:        2 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    2
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_printf
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           
  4338                           ;psect for function _isdigit
  4339  0D0B                     _isdigit:	
  4340                           
  4341                           ;incstack = 0
  4342                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4343                           ;isdigit@c stored from wreg
  4344  0D0B  00F5               	movwf	isdigit@c
  4345  0D0C  01F4               	clrf	_isdigit$552
  4346  0D0D  303A               	movlw	58
  4347  0D0E  0275               	subwf	isdigit@c,w
  4348  0D0F  1803               	skipnc
  4349  0D10  2D17               	goto	l1674
  4350  0D11  3030               	movlw	48
  4351  0D12  0275               	subwf	isdigit@c,w
  4352  0D13  1C03               	skipc
  4353  0D14  2D17               	goto	l1674
  4354  0D15  01F4               	clrf	_isdigit$552
  4355  0D16  0AF4               	incf	_isdigit$552,f
  4356  0D17                     l1674:	
  4357  0D17  0C74               	rrf	_isdigit$552,w
  4358  0D18  0008               	return
  4359  0D19                     __end_of_isdigit:	
  4360                           
  4361                           	psect	text17
  4362  0D69                     __ptext17:	
  4363 ;; *************** function ___wmul *****************
  4364 ;; Defined at:
  4365 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4368 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  product         2    4[COMMON] unsigned int 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  2    0[BANK0 ] unsigned int 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4380 ;;      Params:         0       4       0       0       0
  4381 ;;      Locals:         2       0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0
  4383 ;;      Totals:         2       4       0       0       0
  4384 ;;Total ram usage:        6 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    2
  4387 ;; This function calls:
  4388 ;;		Nothing
  4389 ;; This function is called by:
  4390 ;;		_printf
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           
  4395                           ;psect for function ___wmul
  4396  0D69                     ___wmul:	
  4397                           
  4398                           ;incstack = 0
  4399                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4400  0D69  01F4               	clrf	___wmul@product
  4401  0D6A  01F5               	clrf	___wmul@product+1
  4402  0D6B                     l1680:	
  4403  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  4404  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  4405  0D6D  1C20               	btfss	___wmul@multiplier,0
  4406  0D6E  2D75               	goto	l300
  4407  0D6F  0822               	movf	___wmul@multiplicand,w
  4408  0D70  07F4               	addwf	___wmul@product,f
  4409  0D71  1803               	skipnc
  4410  0D72  0AF5               	incf	___wmul@product+1,f
  4411  0D73  0823               	movf	___wmul@multiplicand+1,w
  4412  0D74  07F5               	addwf	___wmul@product+1,f
  4413  0D75                     l300:	
  4414  0D75  3001               	movlw	1
  4415  0D76                     u2055:	
  4416  0D76  1003               	clrc
  4417  0D77  0DA2               	rlf	___wmul@multiplicand,f
  4418  0D78  0DA3               	rlf	___wmul@multiplicand+1,f
  4419  0D79  3EFF               	addlw	-1
  4420  0D7A  1D03               	skipz
  4421  0D7B  2D76               	goto	u2055
  4422  0D7C  3001               	movlw	1
  4423  0D7D                     u2065:	
  4424  0D7D  1003               	clrc
  4425  0D7E  0CA1               	rrf	___wmul@multiplier+1,f
  4426  0D7F  0CA0               	rrf	___wmul@multiplier,f
  4427  0D80  3EFF               	addlw	-1
  4428  0D81  1D03               	skipz
  4429  0D82  2D7D               	goto	u2065
  4430  0D83  0821               	movf	___wmul@multiplier+1,w
  4431  0D84  0420               	iorwf	___wmul@multiplier,w
  4432  0D85  1D03               	skipz
  4433  0D86  2D6B               	goto	l1680
  4434  0D87  0875               	movf	___wmul@product+1,w
  4435  0D88  01A1               	clrf	?___wmul+1
  4436  0D89  07A1               	addwf	?___wmul+1,f
  4437  0D8A  0874               	movf	___wmul@product,w
  4438  0D8B  01A0               	clrf	?___wmul
  4439  0D8C  07A0               	addwf	?___wmul,f
  4440  0D8D  0008               	return
  4441  0D8E                     __end_of___wmul:	
  4442                           
  4443                           	psect	text18
  4444  0D8E                     __ptext18:	
  4445 ;; *************** function ___lwmod *****************
  4446 ;; Defined at:
  4447 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  divisor         2    7[BANK0 ] unsigned int 
  4450 ;;  dividend        2    9[BANK0 ] unsigned int 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  counter         1   11[BANK0 ] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  2    7[BANK0 ] unsigned int 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4462 ;;      Params:         0       4       0       0       0
  4463 ;;      Locals:         0       1       0       0       0
  4464 ;;      Temps:          1       0       0       0       0
  4465 ;;      Totals:         1       5       0       0       0
  4466 ;;Total ram usage:        6 bytes
  4467 ;; Hardware stack levels used:    1
  4468 ;; Hardware stack levels required when called:    2
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_time_is_leap
  4473 ;;		_printf
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           
  4478                           ;psect for function ___lwmod
  4479  0D8E                     ___lwmod:	
  4480                           
  4481                           ;incstack = 0
  4482                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4483  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  4484  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  4485  0D90  0828               	movf	___lwmod@divisor+1,w
  4486  0D91  0427               	iorwf	___lwmod@divisor,w
  4487  0D92  1903               	skipnz
  4488  0D93  2DBD               	goto	l1622
  4489  0D94  01AB               	clrf	___lwmod@counter
  4490  0D95  0AAB               	incf	___lwmod@counter,f
  4491  0D96                     l1612:	
  4492  0D96  1BA8               	btfsc	___lwmod@divisor+1,7
  4493  0D97  2DA4               	goto	l1614
  4494  0D98  3001               	movlw	1
  4495  0D99                     u1885:	
  4496  0D99  1003               	clrc
  4497  0D9A  0DA7               	rlf	___lwmod@divisor,f
  4498  0D9B  0DA8               	rlf	___lwmod@divisor+1,f
  4499  0D9C  3EFF               	addlw	-1
  4500  0D9D  1D03               	skipz
  4501  0D9E  2D99               	goto	u1885
  4502  0D9F  3001               	movlw	1
  4503  0DA0  00F5               	movwf	??___lwmod
  4504  0DA1  0875               	movf	??___lwmod,w
  4505  0DA2  07AB               	addwf	___lwmod@counter,f
  4506  0DA3  2D96               	goto	l1612
  4507  0DA4                     l1614:	
  4508  0DA4  0828               	movf	___lwmod@divisor+1,w
  4509  0DA5  022A               	subwf	___lwmod@dividend+1,w
  4510  0DA6  1D03               	skipz
  4511  0DA7  2DAA               	goto	u1905
  4512  0DA8  0827               	movf	___lwmod@divisor,w
  4513  0DA9  0229               	subwf	___lwmod@dividend,w
  4514  0DAA                     u1905:	
  4515  0DAA  1C03               	skipc
  4516  0DAB  2DB2               	goto	l1618
  4517  0DAC  0827               	movf	___lwmod@divisor,w
  4518  0DAD  02A9               	subwf	___lwmod@dividend,f
  4519  0DAE  0828               	movf	___lwmod@divisor+1,w
  4520  0DAF  1C03               	skipc
  4521  0DB0  03AA               	decf	___lwmod@dividend+1,f
  4522  0DB1  02AA               	subwf	___lwmod@dividend+1,f
  4523  0DB2                     l1618:	
  4524  0DB2  3001               	movlw	1
  4525  0DB3                     u1915:	
  4526  0DB3  1003               	clrc
  4527  0DB4  0CA8               	rrf	___lwmod@divisor+1,f
  4528  0DB5  0CA7               	rrf	___lwmod@divisor,f
  4529  0DB6  3EFF               	addlw	-1
  4530  0DB7  1D03               	skipz
  4531  0DB8  2DB3               	goto	u1915
  4532  0DB9  3001               	movlw	1
  4533  0DBA  02AB               	subwf	___lwmod@counter,f
  4534  0DBB  1D03               	btfss	3,2
  4535  0DBC  2DA4               	goto	l1614
  4536  0DBD                     l1622:	
  4537  0DBD  082A               	movf	___lwmod@dividend+1,w
  4538  0DBE  01A8               	clrf	?___lwmod+1
  4539  0DBF  07A8               	addwf	?___lwmod+1,f
  4540  0DC0  0829               	movf	___lwmod@dividend,w
  4541  0DC1  01A7               	clrf	?___lwmod
  4542  0DC2  07A7               	addwf	?___lwmod,f
  4543  0DC3  0008               	return
  4544  0DC4                     __end_of___lwmod:	
  4545                           
  4546                           	psect	text19
  4547  0E38                     __ptext19:	
  4548 ;; *************** function ___lwdiv *****************
  4549 ;; Defined at:
  4550 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  divisor         2    0[BANK0 ] unsigned int 
  4553 ;;  dividend        2    2[BANK0 ] unsigned int 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  quotient        2    5[BANK0 ] unsigned int 
  4556 ;;  counter         1    4[BANK0 ] unsigned char 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  2    0[BANK0 ] unsigned int 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4566 ;;      Params:         0       4       0       0       0
  4567 ;;      Locals:         0       3       0       0       0
  4568 ;;      Temps:          1       0       0       0       0
  4569 ;;      Totals:         1       7       0       0       0
  4570 ;;Total ram usage:        8 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    2
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_printf
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function ___lwdiv
  4582  0E38                     ___lwdiv:	
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4586  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  4587  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  4588  0E3A  01A5               	clrf	___lwdiv@quotient
  4589  0E3B  01A6               	clrf	___lwdiv@quotient+1
  4590  0E3C  0821               	movf	___lwdiv@divisor+1,w
  4591  0E3D  0420               	iorwf	___lwdiv@divisor,w
  4592  0E3E  1903               	skipnz
  4593  0E3F  2E71               	goto	l1770
  4594  0E40  01A4               	clrf	___lwdiv@counter
  4595  0E41  0AA4               	incf	___lwdiv@counter,f
  4596  0E42                     l1758:	
  4597  0E42  1BA1               	btfsc	___lwdiv@divisor+1,7
  4598  0E43  2E50               	goto	l1760
  4599  0E44  3001               	movlw	1
  4600  0E45                     u2275:	
  4601  0E45  1003               	clrc
  4602  0E46  0DA0               	rlf	___lwdiv@divisor,f
  4603  0E47  0DA1               	rlf	___lwdiv@divisor+1,f
  4604  0E48  3EFF               	addlw	-1
  4605  0E49  1D03               	skipz
  4606  0E4A  2E45               	goto	u2275
  4607  0E4B  3001               	movlw	1
  4608  0E4C  00F4               	movwf	??___lwdiv
  4609  0E4D  0874               	movf	??___lwdiv,w
  4610  0E4E  07A4               	addwf	___lwdiv@counter,f
  4611  0E4F  2E42               	goto	l1758
  4612  0E50                     l1760:	
  4613  0E50  3001               	movlw	1
  4614  0E51                     u2295:	
  4615  0E51  1003               	clrc
  4616  0E52  0DA5               	rlf	___lwdiv@quotient,f
  4617  0E53  0DA6               	rlf	___lwdiv@quotient+1,f
  4618  0E54  3EFF               	addlw	-1
  4619  0E55  1D03               	skipz
  4620  0E56  2E51               	goto	u2295
  4621  0E57  0821               	movf	___lwdiv@divisor+1,w
  4622  0E58  0223               	subwf	___lwdiv@dividend+1,w
  4623  0E59  1D03               	skipz
  4624  0E5A  2E5D               	goto	u2305
  4625  0E5B  0820               	movf	___lwdiv@divisor,w
  4626  0E5C  0222               	subwf	___lwdiv@dividend,w
  4627  0E5D                     u2305:	
  4628  0E5D  1C03               	skipc
  4629  0E5E  2E66               	goto	l1766
  4630  0E5F  0820               	movf	___lwdiv@divisor,w
  4631  0E60  02A2               	subwf	___lwdiv@dividend,f
  4632  0E61  0821               	movf	___lwdiv@divisor+1,w
  4633  0E62  1C03               	skipc
  4634  0E63  03A3               	decf	___lwdiv@dividend+1,f
  4635  0E64  02A3               	subwf	___lwdiv@dividend+1,f
  4636  0E65  1425               	bsf	___lwdiv@quotient,0
  4637  0E66                     l1766:	
  4638  0E66  3001               	movlw	1
  4639  0E67                     u2315:	
  4640  0E67  1003               	clrc
  4641  0E68  0CA1               	rrf	___lwdiv@divisor+1,f
  4642  0E69  0CA0               	rrf	___lwdiv@divisor,f
  4643  0E6A  3EFF               	addlw	-1
  4644  0E6B  1D03               	skipz
  4645  0E6C  2E67               	goto	u2315
  4646  0E6D  3001               	movlw	1
  4647  0E6E  02A4               	subwf	___lwdiv@counter,f
  4648  0E6F  1D03               	btfss	3,2
  4649  0E70  2E50               	goto	l1760
  4650  0E71                     l1770:	
  4651  0E71  0826               	movf	___lwdiv@quotient+1,w
  4652  0E72  01A1               	clrf	?___lwdiv+1
  4653  0E73  07A1               	addwf	?___lwdiv+1,f
  4654  0E74  0825               	movf	___lwdiv@quotient,w
  4655  0E75  01A0               	clrf	?___lwdiv
  4656  0E76  07A0               	addwf	?___lwdiv,f
  4657  0E77  0008               	return
  4658  0E78                     __end_of___lwdiv:	
  4659                           
  4660                           	psect	text20
  4661  0D19                     __ptext20:	
  4662 ;; *************** function _isr *****************
  4663 ;; Defined at:
  4664 ;;		line 116 in file "main.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;		None               void
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0, pclath, cstack
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4678 ;;      Params:         0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0
  4680 ;;      Temps:          4       0       0       0       0
  4681 ;;      Totals:         4       0       0       0       0
  4682 ;;Total ram usage:        4 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    1
  4685 ;; This function calls:
  4686 ;;		_tick_update
  4687 ;; This function is called by:
  4688 ;;		Interrupt level 1
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           
  4693                           ;psect for function _isr
  4694  0D19                     _isr:	
  4695                           
  4696                           ;main.c: 119: tick_update();
  4697  0D19  158A  253C  158A   	fcall	_tick_update
  4698  0D1C  0873               	movf	??_isr+3,w
  4699  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  4700  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  4701  0D1F  00FF               	movwf	127
  4702  0D20  0872               	movf	??_isr+2,w
  4703  0D21  008A               	movwf	10
  4704  0D22  0871               	movf	??_isr+1,w
  4705  0D23  0084               	movwf	4
  4706  0D24  0E70               	swapf	??_isr^(0+-128),w
  4707  0D25  0083               	movwf	3
  4708  0D26  0EFE               	swapf	126,f
  4709  0D27  0E7E               	swapf	126,w
  4710  0D28  0009               	retfie
  4711  0D29                     __end_of_isr:	
  4712                           
  4713                           	psect	intentry
  4714  0004                     __pintentry:	
  4715                           ;incstack = 0
  4716                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4717                           
  4718  0004                     interrupt_function:	
  4719  007E                     saved_w	set	btemp
  4720  0004  00FE               	movwf	btemp
  4721  0005  0E03               	swapf	3,w
  4722  0006  00F0               	movwf	??_isr
  4723  0007  0804               	movf	4,w
  4724  0008  00F1               	movwf	??_isr+1
  4725  0009  080A               	movf	10,w
  4726  000A  00F2               	movwf	??_isr+2
  4727  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4728  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4729  000D  087F               	movf	btemp+1,w
  4730  000E  00F3               	movwf	??_isr+3
  4731  000F  158A  2D19         	ljmp	_isr
  4732                           
  4733                           	psect	text21
  4734  0D3C                     __ptext21:	
  4735 ;; *************** function _tick_update *****************
  4736 ;; Defined at:
  4737 ;;		line 50 in file "../Tick/Tick-PIC16.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;		None               void
  4744 ;; Registers used:
  4745 ;;		wreg
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4751 ;;      Params:         0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0
  4754 ;;      Totals:         0       0       0       0       0
  4755 ;;Total ram usage:        0 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_isr
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           
  4765                           ;psect for function _tick_update
  4766  0D3C                     _tick_update:	
  4767                           
  4768                           ;Tick-PIC16.c: 52: if (PIR1bits.TMR1IF) {
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in _tick_update: [wreg]
  4772  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  4773  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  4774  0D3E  1C0C               	btfss	12,0	;volatile
  4775  0D3F  0008               	return
  4776                           
  4777                           ;Tick-PIC16.c: 53: tickcnt++;
  4778  0D40  3001               	movlw	1
  4779  0D41  07F6               	addwf	_tickcnt,f	;volatile
  4780  0D42  3000               	movlw	0
  4781  0D43  1803               	skipnc
  4782  0D44  3001               	movlw	1
  4783  0D45  07F7               	addwf	_tickcnt+1,f	;volatile
  4784  0D46  3000               	movlw	0
  4785  0D47  1803               	skipnc
  4786  0D48  3001               	movlw	1
  4787  0D49  07F8               	addwf	_tickcnt+2,f	;volatile
  4788  0D4A  3000               	movlw	0
  4789  0D4B  1803               	skipnc
  4790  0D4C  3001               	movlw	1
  4791  0D4D  07F9               	addwf	_tickcnt+3,f	;volatile
  4792                           
  4793                           ;Tick-PIC16.c: 54: PIR1bits.TMR1IF = 0;
  4794  0D4E  100C               	bcf	12,0	;volatile
  4795  0D4F  0008               	return
  4796  0D50                     __end_of_tick_update:	
  4797  0002                     
  4798                           	psect	functab
  4799  0100                     __pfunctab:	
  4800  0100                     __fptable:	
  4801  0100                     fptable:	
  4802  0100  00FF               	movwf	(btemp+1)& (0+127)
  4803  0101  3001               	movlw	high fptable
  4804  0102  008A               	movwf	10
  4805  0103  087F               	movf	(btemp+1)& (0+127),w
  4806  0104  0782               	addwf	2,f
  4807  0105                     fpbase:	
  4808  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4809  0106                     fp__time_provider:	
  4810  0106  158A  2D50         	ljmp	_time_provider
  4811  0108                     __end_of__fptable:	
  4812  007E                     btemp	set	126	;btemp
  4813  007E                     wtemp	set	126
  4814  007E                     wtemp0	set	126
  4815  0080                     wtemp1	set	128
  4816  0082                     wtemp2	set	130
  4817  0084                     wtemp3	set	132
  4818  0086                     wtemp4	set	134
  4819  0088                     wtemp5	set	136
  4820  007F                     wtemp6	set	127
  4821  007E                     ttemp	set	126
  4822  007E                     ttemp0	set	126
  4823  0081                     ttemp1	set	129
  4824  0084                     ttemp2	set	132
  4825  0087                     ttemp3	set	135
  4826  007F                     ttemp4	set	127
  4827  007E                     ltemp	set	126
  4828  007E                     ltemp0	set	126
  4829  0082                     ltemp1	set	130
  4830  0086                     ltemp2	set	134
  4831  0080                     ltemp3	set	128


Data Sizes:
    Strings     67
    Constant    22
    Data        4
    BSS         11
    Persistent  17
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     57      67
    BANK1            80     15      33
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 44
		 -> STR_2(CODE[44]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S355$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    time_set_provider@callback	PTR FTN()unsigned long  size(1) Largest target is 4
		 -> time_provider(), 

    time_break@timeinfo	PTR struct tm_t size(1) Largest target is 7
		 -> main@tinfo(BANK1[7]), 

    time_make@timeinfo	PTR struct tm_t size(1) Largest target is 7
		 -> main@tinfo(BANK1[7]), 

    time_provider_callback	PTR FTN()unsigned long  size(1) Largest target is 4
		 -> Absolute function(), time_provider(), 


Critical Paths under _main in COMMON

    _main->_time_set_provider
    _tick_get->_tick_read_internal
    _time_break->___llmod
    _time_is_leap->___lwmod
    _printf->___lwmod
    _printf->___wmul
    _printf->_isdigit
    ___lwmod->___lwdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_time_break
    _time_set_provider->_time_get
    _time_get->_time_set
    _time_set->_tick_get
    _time_make->_time_is_leap
    _time_break->_time_is_leap
    _time_is_leap->___lwmod
    _printf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0   10069
                                             45 BANK0     12    12      0
                                              0 BANK1     15    15      0
                             _printf
                           _tick_get
                          _tick_init
                         _time_break
                           _time_get
                          _time_make
                           _time_set
                  _time_set_provider
 ---------------------------------------------------------------------------------
 (1) _time_set_provider                                    6     2      4     449
                                              5 COMMON     1     1      0
                                             24 BANK0      5     1      4
                           _time_get
 ---------------------------------------------------------------------------------
 (2) _time_get                                            12     8      4     260
                                             12 BANK0     12     8      4
                   Absolute function *
                           _tick_get
                      _time_provider *
                           _time_set
 ---------------------------------------------------------------------------------
 (3) _time_set                                             8     4      4     192
                                              4 BANK0      8     4      4
                           _tick_get
 ---------------------------------------------------------------------------------
 (4) _tick_get                                             4     0      4       0
                                              0 BANK0      4     0      4
                 _tick_read_internal
 ---------------------------------------------------------------------------------
 (5) _tick_read_internal                                   1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _time_provider                                        4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) Absolute function(Fake)                               4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _time_make                                           15    11      4    2363
                                             17 BANK0     15    11      4
                             ___lmul
                       _time_is_leap
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     786
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _time_break                                          28    23      5    3679
                                             17 BANK0     28    23      5
                            ___lldiv
                            ___llmod
                       _time_is_leap
 ---------------------------------------------------------------------------------
 (2) _time_is_leap                                         5     3      2    1077
                                             12 BANK0      5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     752
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     631
                                              4 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _tick_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              26    14     12    2538
                                             12 BANK0     26    14     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     622
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
                        _tick_update
 ---------------------------------------------------------------------------------
 (7) _tick_update                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
     _putch
   _tick_get
     _tick_read_internal
   _tick_init
   _time_break
     ___lldiv
     ___llmod
     _time_is_leap
       ___lwmod
         ___lwdiv (ARG)
   _time_get
     Absolute function(Fake) *
     _tick_get *
       _tick_read_internal
     _time_provider *
     _time_set *
       _tick_get
         _tick_read_internal
   _time_make
     ___lmul
     _time_is_leap
       ___lwmod
         ___lwdiv (ARG)
   _time_set
     _tick_get
       _tick_read_internal
   _time_set_provider
     _time_get
       Absolute function(Fake) *
       _tick_get *
         _tick_read_internal
       _time_provider *
       _time_set *
         _tick_get
           _tick_read_internal

 _isr (ROOT)
   _tick_update

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      F      21       7       41.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     39      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6E      12        0.0%
ABS                  0      0      6E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Dec 05 18:48:58 2014

                          pc 0002                  __CFG_CP$OFF 0000                           l48 0D08  
                         l93 0369                           fsr 0004          ___wmul@multiplicand 0022  
                        l300 0D75                          l216 0618                          l161 07D3  
                        l181 04CA                          l199 057B                 __CFG_CPD$OFF 0000  
                        _isr 0D19                          fsr0 0004                          indf 0000  
               __CFG_FOSC$XT 0000                 __CFG_LVP$OFF 0000              ??_time_provider 0074  
                       l2020 0696                         l1612 0D96                         l1614 0DA4  
                       l1622 0DBD                         l1710 0785                         l1720 07BD  
                       l1712 0795                         l1640 0F91                         l1618 0DB2  
                       l1810 03E9                         l1642 0FB1                         l1724 07CA  
                       l1740 0EF1                         l1804 03AE                         l1636 0F54  
                       l1910 05CF                         l1734 0EC3                         l1662 0E30  
                       l1760 0E50                         l1680 0D6B                         l1920 05DD  
                       l1904 05BB                         l1736 0ED3                         l1744 0EFE  
                       l1808 0376                         l1770 0E71                         l1674 0D17  
                       l1906 05BF                         l1914 05D7                         l1842 04CF  
                       l1922 04AB                         l1658 0E1E                         l1826 0DDC  
                       l1860 0531                         l1844 04D8                         l1836 04C4  
                       l1692 0E82                         l1766 0E66                         l1758 0E42  
                       l1870 054A                         l1950 0216                         l1848 04E6  
                       l1944 0200                         l1696 0E98                         l1890 059A  
                       l1882 056D                         l1874 0550                         l1858 051C  
                       l1970 02A5                         l1946 0204                         l1794 0339  
                       l1892 059E                         l1796 0370                         l1958 0267  
                       l1984 02F4                         l1976 02BB                         l1898 05A8  
                       l1978 02BD                         l1988 02FC                         ?_isr 0070  
                       STR_1 007C                         STR_2 0050                         u2105 0E9A  
                       u2115 0EA2                         u2055 0D76                         u2215 0EC7  
                       u2305 0E5D                         u2065 0D7D                         u2145 0789  
                       u2315 0E67                         u2235 0EE1                         u2165 0797  
                       u2245 0EF2                         u2175 07AC                         u2505 0563  
                       u2185 07BE                         u2345 0346                         u2275 0E45  
                       u2295 0E51                         u2640 01D5                         u1905 0DAA  
                       u2545 058A                         u2641 01D6                         u2385 0383  
                       u2642 01DB                         u1915 0DB3                         u2643 01DC  
                       u2735 02D9                         u1935 0F2F                         u1960 0FDC  
                       u2760 06C1                         u2745 02E7                         u1961 0FDD  
                       u2761 06C2                         u2746 02E8                         u2690 0288  
                       u1962 0FE2                         u2762 06C7                         u2747 02ED  
                       u2675 024B                         u1963 0FE3                         u2763 06C8  
                       u2748 02EE                         u1885 0D99                         u2749 02F3  
                       u2695 027B                         u1975 0FF5                         u2775 06DA  
                       u2696 027C                         u2697 0281                         u2698 0282  
                       u2699 0287                 __CFG_WRT$OFF 0000                         _main 0619  
                       btemp 007E                         ltemp 007E                         start 0011  
                       ttemp 007E                         wtemp 007E                __CFG_IESO$OFF 0000  
              __CFG_MCLRE$ON 0000                        ??_isr 0070                        ?_main 0070  
              __CFG_WDTE$OFF 0000                        _ANSEL 009B              __end_of___lldiv 07D3  
                      _T1CON 0010              __end_of___llmod 0F07              __end_of___lwdiv 0E78  
            __end_of___lwmod 0DC4                        _TMR1H 000F                        _TMR1L 000E  
                      _TRISA 0085                        _TRISB 0086                        _TXREG 0019  
                      _TXSTA 0098               __CFG_CCPMX$RB0 0000          ___lmul@multiplicand 0024  
             __CFG_FCMEN$OFF 0000              __end_of_dpowers 0050              __end_of_isdigit 0D19  
                      _putch 0CFE                        fpbase 0105  __size_of_tick_read_internal 0027  
             __CFG_BOREN$OFF 0000                        pclath 000A                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F              __initialization 0013                 __end_of_main 0773  
                     ??_main 004D             ___llmod@dividend 0024                       ?_putch 0070  
           __end_of__fptable 0108               __CFG_PWRTE$OFF 0000                 ?_tick_update 0070  
                     ___lmul 0E78                       ___wmul 0D69                    ??___lldiv 0074  
                  ??___llmod 0074                    ??___lwdiv 0074                    ??___lwmod 0075  
                     _printf 04A4                       fptable 0100             __end_of_tick_get 0D3C  
                     fptotal 0002                    ??_isdigit 0074             __end_of_time_get 1000  
           __end_of_time_set 00EF                       saved_w 007E        time_break@monthLength 0046  
    __end_of__initialization 0031               __pcstackCOMMON 0070                 __pidataBANK0 07FA  
              __end_of_putch 0D0B                _sync_interval 005E                      ??_putch 0074  
                 __pbssBANK0 0062                   __pbssBANK1 00BB                   __pmaintext 0619  
  time_set_provider@callback 003C                      ?___lmul 0020                      ?___wmul 0020  
                 __pintentry 0004               ___lmul@product 0028           __size_of_tick_init 0010  
                    ?_printf 002C           __size_of_time_make 0196             time_is_leap@year 002C  
                 __stringtab 0034        __end_of_time_provider 0D69    time_set_provider@timespan 0038  
                  ?_tick_get 0020                    ?_time_get 002C                    ?_time_set 0024  
            __size_of___lmul 0041         __size_of_tick_update 0014                      ___lldiv 0773  
            __size_of___wmul 0025                      ___llmod 0EB9                      ___lwdiv 0E38  
                    ___lwmod 0D8E           time_break@timeinfo 0035                      __ptext1 0DC4  
                    __ptext2 0F07                      __ptext3 0093                      __ptext4 0D29  
                    __ptext5 07D3                      __ptext6 0D50                      __ptext7 030E  
                    __ptext8 0E78                      __ptext9 0108              __size_of_printf 0175  
                    _dpowers 0046                      _isdigit 0D0B                 __size_of_isr 0010  
          time_make@timeinfo 003F                      _tickcnt 0076   __end_of_tick_read_internal 07FA  
                    main@now 00A0         end_of_initialization 0031                ?_time_is_leap 002C  
          __end_of_tick_init 00FF            __end_of_time_make 04A4              ___lldiv@divisor 0020  
            ___lldiv@counter 002C                   ??_tick_get 0075                   _tickbuffer 00BB  
                 ??_time_get 0030                    _RCSTAbits 0018                   ??_time_set 0028  
                    printf@c 0045                      printf@f 0042                  time_get@now 0034  
                 _time_break 0108            _time_set_provider 0DC4                  time_set@now 0024  
         ?_time_set_provider 0038          ??_time_set_provider 0075               ??_time_is_leap 002E  
                printf@width 0043    __end_of_time_set_provider 0DFD               __end_of___lmul 0EB9  
             __end_of___wmul 0D8E              time_break@xTime 0049              time_break@month 0048  
             __end_of_printf 0619          start_initialization 0013                  __end_of_isr 0D29  
            ___llmod@divisor 0020             _time_is_leap$204 0030              ___llmod@counter 0075  
                   ??___lmul 0074                     ??___wmul 0074               _time_break$237 003E  
             _time_break$238 0040                  ?_time_break 0031              time_make@tstamp 0039  
                __pdataBANK0 005E                     ??_printf 0038         __end_of_month_length 0046  
                __pbssCOMMON 0076                    ___latbits 0001                __pcstackBANK0 0020  
              __pcstackBANK1 00A0          __end_of__stringdata 0093            __size_of__fptable 0008  
                  __pnvBANK0 0059                    __pnvBANK1 00AF             ___lwdiv@dividend 0022  
                  __pfunctab 0100   __size_of_time_set_provider 0039                     ?___lldiv 0020  
          __size_of_tick_get 0013                     ?___llmod 0020                     ?___lwdiv 0020  
                   ?___lwmod 0027         __end_of_time_is_leap 0E38            __size_of_time_get 00F9  
          __size_of_time_set 005C                    __pstrings 0034                     ?_isdigit 0070  
     _time_provider_callback 0062             ___lwdiv@quotient 0025               __size_of_putch 000D  
        __size_of_time_break 0206            interrupt_function 0004               ___wmul@product 0074  
                   _PIE1bits 008C           _tick_read_internal 07D3                ??_tick_update 0070  
                  _tick_init 00EF                     _PIR1bits 000C          _enTimeCurrentStatus 005D  
                 time_make@i 003D                    _time_make 030E          ?_tick_read_internal 0070  
     __size_of_time_provider 0019             fp__time_provider 0106                  __stringbase 0039  
                __stringdata 0050            ___wmul@multiplier 0020                   printf@_val 003D  
                 printf@flag 0041                   printf@prec 003C                    main@tinfo 00A8  
                  _sync_next 00B7               time_break@days 0042            ___lmul@multiplier 0020  
             time_break@year 0047         ??_tick_read_internal 0074                   ?_tick_init 0070  
                 ?_time_make 0031             __size_of___lldiv 0060             __size_of___llmod 004E  
           __size_of___lwdiv 0040             __size_of___lwmod 0036          __end_of_tick_update 0D50  
                _last_update 00B3           __end_of__stringtab 003A                  _isdigit$552 0074  
        time_break@timeinput 0031                     __fptable 0100             __size_of_isdigit 000E  
            ___lwdiv@divisor 0020              ___lwdiv@counter 0024                     __ptext10 0DFD  
                   __ptext11 0EB9                     __ptext20 0D19                     __ptext12 0773  
                   __ptext21 0D3C                     __ptext13 00EF                     __ptext14 04A4  
                   __ptext15 0CFE                     __ptext16 0D0B                     __ptext17 0D69  
                   __ptext18 0D8E                     __ptext19 0E38                _time_provider 0D50  
              __size_of_main 015A                     _initialt 00AF                 _month_length 003A  
      __size_of_time_is_leap 003B                     _tick_get 0D29                     _time_get 0F07  
                   _time_set 0093                 ??_time_break 0036                     main@last 00A4  
                   _sys_time 0059                    putch@data 0074                   _INTCONbits 000B  
                   isdigit@c 0075                     intlevel1 0100                 _time_is_leap 0DFD  
             ?_time_provider 0020           __end_of_time_break 030E             ___lwmod@dividend 0029  
           ___lldiv@dividend 0024                    stringcode 0034                  ??_tick_init 0074  
                _tick_update 0D3C                  ??_time_make 0035                     printf@ap 003B  
           ___lldiv@quotient 0028              ___lwmod@divisor 0027              ___lwmod@counter 002B  
                   stringdir 0034                     stringtab 0034  
